{"version":3,"sources":["webpack:///./src/templates/blog/components/header.js","webpack:///./src/templates/blog/contents.js"],"names":["BlogHeader","react_default","a","createElement","className","href","BlogContentsTamplate","_ref","pageContext","data","PATH","window","location","pathname","prevPage","nextPage","posts","allMarkdownRemark","edges","link","page","text","Fragment","map","_ref2","_node$frontmatter","node","frontmatter","path","category","date","title","summary","key","__webpack_require__","d","__webpack_exports__","pageQuery"],"mappings":"qHAEe,SAASA,IACtB,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaC,KAAK,UAA/B,aACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,cAEtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBCLV,SAASE,EAATC,GACZ,IAD6CC,EAC7CD,EAD6CC,YAAaC,EAC1DF,EAD0DE,KAErDC,EAAQC,QAAUA,OAAOC,SAASC,UAAa,IAC7CC,EAAuBN,EAAvBM,SAAUC,EAAaP,EAAbO,SACZC,EAAQP,EAAKQ,kBAAkBC,MAE/BC,EAAO,SAACC,EAAMC,GAClB,GAAID,EAAM,CACR,IAAMD,EAAiB,IAATC,EAAaV,EAAb,GAAuBA,EAAOU,EAC5C,OAAQnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBC,KAAMc,GAAOE,GAEtD,OAAQpB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAA4BiB,IAGtD,OACEpB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoB,SAAA,KACErB,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXY,EAAMO,IAAI,SAAAC,GAAc,IAAAC,EAAAD,EAAXE,KAC0CC,YAA9CC,EADeH,EACfG,KAAMC,EADSJ,EACTI,SAAUC,EADDL,EACCK,KAAMC,EADPN,EACOM,MAAOC,EADdP,EACcO,QAC/Bb,EAAI,GAAMT,EAAOmB,EAAb,IAAyBD,EAAzB,IACV,OACE3B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAO6B,IAAKF,GACxB9B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAc0B,GAC9B7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYC,KAAMc,GAAQY,IAEzC9B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAiB4B,OAKtC/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXe,EAAKL,EAAU,aAEnBb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXe,EAAKJ,EAAU,cA7CjCmB,EAAAC,EAAAC,EAAA,4BAAA9B,IAAA4B,EAAAC,EAAAC,EAAA,8BAAAC,IAuDO,IAAMA,EAAS","file":"component---src-templates-blog-contents-js-1ce8a023769a81ba9e03.js","sourcesContent":["import React from \"react\"\n\nexport default function BlogHeader () {\n  return (\n    <header className=\"site-header\">\n      <div className=\"wrapper\">\n        <a className=\"site-title\" href=\"/posts\">Eten Wang</a>\n        <nav className=\"site-nav\">\n          <a href=\"#\" className=\"menu-icon\">\n          </a>\n          <div className=\"trigger\">\n          </div>\n        </nav>\n      </div>\n    </header>\n  )\n}","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport BlogHeader from \"./components/header\"\nimport './blog.scss';\n\nexport default function BlogContentsTamplate ({ pageContext, data, // this prop will be injected by the GraphQL query below.\n}) {\n  const PATH = (window && window.location.pathname) || '/'\n  const { prevPage, nextPage } = pageContext\n  const posts = data.allMarkdownRemark.edges\n\n  const link = (page, text) => {\n    if (page) {\n      const link = (page === 1 ? PATH : `${PATH}${page}`) // rewrite page 1 to posts.\n      return (<a className=\"pagination-item\" href={link}>{text}</a>)\n    }\n    return (<span className=\"pagination-item disabled\">{text}</span>)\n  }\n\n  return (\n    <>\n      <BlogHeader></BlogHeader>\n      <div className=\"page-content\">\n        <div className=\"wrapper\">\n          <div className=\"home\">\n            <ul className=\"post-list\">\n              {posts.map(({ node }) => {\n                const { path, category, date, title, summary } = node.frontmatter\n                const link = `${PATH}${category}/${path}/`\n                return (\n                  <li className=\"post\" key={title}>\n                    <span className=\"post-meta\">{ date }</span>\n                    <h2>\n                      <a className=\"post-link\" href={link}>{ title }</a>\n                    </h2>\n                    <p className=\"post-summary\">{ summary }</p>\n                  </li>\n                )\n              })}\n            </ul>\n            <div className=\"pagination clearfix mb1 mt4\">\n              <div className=\"left\">\n                { link(prevPage, 'Previous') }\n              </div>\n              <div className=\"right\">\n                { link(nextPage, 'Next') }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($limit: Int!, $offset: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $offset\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            category\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            summary\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}