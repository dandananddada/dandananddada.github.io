{"data":{"markdownRemark":{"html":"<h3>原始类型有哪几种？null 是对象嘛？</h3>\n<ul>\n<li>boolean</li>\n<li>null</li>\n<li>undefined</li>\n<li>number</li>\n<li>string</li>\n<li>symbol</li>\n</ul>\n<p><strong>null 是值类型</strong></p>\n<p>虽然 typeof null 会输出 object，但是这只是 JS 存在的一个悠久 Bug。在 JS 的最初版本中使用的是 32 位系统，为了性能考虑使用低位存储变量的类型信息，000 开头代表是对象，然而 null 表示为全零，所以将它错误的判断为 object</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">typeof</span> <span class=\"token keyword\">null</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;object&#39;</code></pre></div>\n<h3>对象类型和原始类型的不同之处？函数参数是对象会发生什么问题？</h3>\n<p>对象类型和原始类型不同的是，原始类型存储的是值，对象类型存储的是地址（指针）</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">person</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  person<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">26</span>\n  person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'yyy'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> person\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> p1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">'yck'</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token punctuation\">:</span> <span class=\"token number\">25</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> p2 <span class=\"token operator\">=</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// -> ?</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>p2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// -> ?</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{ name: &#39;yck&#39;, age: 26 }\n{ name: &#39;yyy&#39;, age: 30 }</code></pre></div>\n<h3>typeof 是否能正确判断类型？instanceof 能正确判断对象的原理是什么？</h3>\n<p>typeof 对于对象来说，除了函数都会显示 object</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 'object'</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;object&#39;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// 'object'</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;object&#39;</code></pre></div>\n<p>所以说 typeof 并不能准确判断变量到底是什么类型，如果我们想判断一个对象的正确类型，这时候可以考虑使用 instanceof，因为内部机制是通过原型链来判断的</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Array</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">true</code></pre></div>\n<p>对于原始类型来说，你想直接通过 instanceof 来判断类型是不行的</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">'hello world'</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">String</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">false</code></pre></div>\n<h3>类型转换</h3>\n<h4>对象转原始类型</h4>\n<p>对象在转换为值类型的时候，存在 Symbol.toPrimitive 会调用 toPrimitive，否则\n当转换为字符串时 调用 toString\n其他情况调用 valueOf</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> withoutToPrimitive <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'2'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> withToPrimitive <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>Symbol<span class=\"token punctuation\">.</span>toPrimitive<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>hint<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hint <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">'hint2'</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'2'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">+</span>withToPrimitive</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">withToPrimitive <span class=\"token operator\">+</span> <span class=\"token number\">1</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>withToPrimitive<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">1`</span></span> <span class=\"token comment\">// excepet to string</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;hint21&#39;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">withoutToPrimitive <span class=\"token operator\">+</span> <span class=\"token number\">0</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">withoutToPrimitive <span class=\"token operator\">+</span> <span class=\"token string\">'1'</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;11&#39;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>withoutToPrimitive<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">1`</span></span> <span class=\"token comment\">// excepet to string</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;21&#39;</code></pre></div>\n<h4>四则运算</h4>\n<p>运算中其中一方为字符串，那么就会把另一方也转换为字符串\n如果一方不是字符串或者数字，那么会将它转换为数字或者字符串</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token string\">'1'</span> <span class=\"token comment\">// '11'</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;11&#39;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// \"41,2,3\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;41,2,3&#39;</code></pre></div>\n<p>另外对于加法还需要注意这个表达式 'a' + + 'b'</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">'a'</span> <span class=\"token operator\">+</span> <span class=\"token operator\">+</span> <span class=\"token string\">'b'</span> <span class=\"token comment\">// -> \"aNaN\"</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&#39;aNaN&#39;</code></pre></div>\n<p>因为 + 'b' 等于 NaN，所以结果为 \"aNaN\"</p>\n<p>对于除了加法的运算符来说，只要其中一方是数字，那么另一方就会被转为数字</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">NaN</code></pre></div>\n<h3>如何正确判断 this？箭头函数的 this 是什么？</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  a<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  foo<span class=\"token punctuation\">:</span> foo\n<span class=\"token punctuation\">}</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1\n2\nundefined</code></pre></div>\n<ul>\n<li>对于直接调用 foo 来说，不管 foo 函数被放在了什么地方，this 一定是 window</li>\n<li>对于 obj.foo() 来说，我们只需要记住，谁调用了函数，谁就是 this，所以在这个场景下 foo 函数中的 this 就是 obj 对象</li>\n<li>对于 new 的方式来说，this 被永远绑定在了 c 上面，不会被任何方式改变 this</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">multiArrowFunc</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">multiArrowFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{ DTRACE_NET_SERVER_CONNECTION: [Function],\n  DTRACE_NET_STREAM_END: [Function],\n  DTRACE_HTTP_SERVER_REQUEST: [Function],\n  DTRACE_HTTP_SERVER_RESPONSE: [Function],\n  DTRACE_HTTP_CLIENT_REQUEST: [Function],\n  DTRACE_HTTP_CLIENT_RESPONSE: [Function],\n  global: [Circular],\n  process: \n   process {\n     title: &#39;����&#39;,\n     version: &#39;v9.6.0&#39;,\n     versions: \n      { http_parser: &#39;2.7.0&#39;,\n        node: &#39;9.6.0&#39;,\n        v8: &#39;6.2.414.46-node.20&#39;,\n        uv: &#39;1.19.1&#39;,\n        zlib: &#39;1.2.11&#39;,\n        ares: &#39;1.13.0&#39;,\n        modules: &#39;59&#39;,\n        nghttp2: &#39;1.29.0&#39;,\n        napi: &#39;2&#39;,\n        openssl: &#39;1.0.2n&#39;,\n        icu: &#39;60.2&#39;,\n        unicode: &#39;10.0&#39;,\n        cldr: &#39;32.0.1&#39;,\n        tz: &#39;2017c&#39; },\n     arch: &#39;x64&#39;,\n     platform: &#39;darwin&#39;,\n     release: \n      { name: &#39;node&#39;,\n        sourceUrl: &#39;https://nodejs.org/download/release/v9.6.0/node-v9.6.0.tar.gz&#39;,\n        headersUrl: &#39;https://nodejs.org/download/release/v9.6.0/node-v9.6.0-headers.tar.gz&#39; },\n     argv: [ &#39;/Users/admin/.nvm/versions/node/v9.6.0/bin/node&#39; ],\n     execArgv: \n      [ &#39;--eval&#39;,\n        &#39;(function() {\\n/*\\n * BSD 3-Clause License\\n *\\n * Copyright (c) 2015, Nicolas Riesco and others as credited in the AUTHORS file\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * 1. Redistributions of source code must retain the above copyright notice,\\n * this list of conditions and the following disclaimer.\\n *\\n * 2. Redistributions in binary form must reproduce the above copyright notice,\\n * this list of conditions and the following disclaimer in the documentation\\n * and/or other materials provided with the distribution.\\n *\\n * 3. Neither the name of the copyright holder nor the names of its contributors\\n * may be used to endorse or promote products derived from this software without\\n * specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\\n * POSSIBILITY OF SUCH DAMAGE.\\n *\\n */\\n\\nvar console = require(&quot;console&quot;);\\nvar stream = require(&quot;stream&quot;);\\nvar util = require(&quot;util&quot;);\\n\\nfunction Stdout(id, opt) {\\n    stream.Transform.call(this, opt);\\n\\n    this._id = id;\\n}\\n\\nStdout.prototype = Object.create(stream.Transform.prototype);\\n\\nStdout.prototype._transform = function(data, encoding, callback) {\\n    var response = {\\n        id: this._id,\\n        stdout: data.toString(),\\n    };\\n    log(&quot;STDOUT:&quot;, response);\\n    process.send(response);\\n    this.push(data);\\n    callback();\\n};\\n\\nfunction Stderr(id, opt) {\\n    stream.Transform.call(this, opt);\\n\\n    this._id = id;\\n}\\n\\nStderr.prototype = Object.create(stream.Transform.prototype);\\n\\nStderr.prototype._transform = function(data, encoding, callback) {\\n    var response = {\\n        id: this._id,\\n        stderr: data.toString(),\\n    };\\n    log(&quot;STDERR:&quot;, response);\\n    process.send(response);\\n    this.push(data);\\n    callback();\\n};\\n\\nfunction Context(requester, id) {\\n    this.requester = requester;\\n    this.id = id;\\n\\n    this.stdout = new Stdout(this.id);\\n    this.stderr = new Stderr(this.id);\\n    this.console = new console.Console(this.stdout, this.stderr);\\n\\n    this._capturedStdout = null;\\n    this._capturedStderr = null;\\n    this._capturedConsole = null;\\n\\n    this._async = false;\\n    this._done = false;\\n\\n    // `$$` provides an interface for users to access the execution context\\n    this.$$ = Object.create(null);\\n\\n    this.$$.async = (function async(value) {\\n        this._async = (arguments.length === 0) ? true : !!value;\\n        return this._async;\\n    }).bind(this);\\n\\n    this.$$.done = (function done(result) {\\n        this.send((arguments.length === 0) ? {\\n            end: true,\\n        } : {\\n            mime: toMime(result),\\n            end: true,\\n        });\\n    }).bind(this);\\n\\n    this.$$.sendResult = resolvePromise.call(this,\\n        function sendResult(result, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: toMime(result),\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.sendError = resolvePromise.call(this,\\n        function sendError(error, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                error: formatError(error),\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.mime = resolvePromise.call(this,\\n        function sendMime(mimeBundle, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: mimeBundle,\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.text = resolvePromise.call(this,\\n        function sendText(text, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: {\\n                    &quot;text/plain&quot;: text,\\n                },\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.html = resolvePromise.call(this,\\n        function sendHtml(html, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: {\\n                    &quot;text/html&quot;: html,\\n                },\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.svg = resolvePromise.call(this,\\n        function sendSvg(svg, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: {\\n                    &quot;image/svg+xml&quot;: svg,\\n                },\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.png = resolvePromise.call(this,\\n        function sendPng(png, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: {\\n                    &quot;image/png&quot;: png,\\n                },\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.jpeg = resolvePromise.call(this,\\n        function sendJpeg(jpeg, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: {\\n                    &quot;image/jpeg&quot;: jpeg,\\n                },\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.json = resolvePromise.call(this,\\n        function sendJson(json, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: {\\n                    &quot;application/json&quot;: json,\\n                },\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.input = (function input(options, callback) {\\n        this.$$.async();\\n\\n        var inputRequest = {\\n            input: options,\\n        };\\n\\n        var inputCallback;\\n        if (typeof callback === \\&#39;function\\&#39;) {\\n            inputCallback = function inputCallback(error, reply) {\\n                callback(error, reply.input);\\n            };\\n        }\\n\\n        var promise = this.requester.send(this, inputRequest, inputCallback);\\n        if (promise) {\\n            return promise.then(function(reply) { return reply.input; });\\n        }\\n    }).bind(this);\\n\\n    this.$$.display = (function createDisplay(id) {\\n        return (arguments.length === 0) ?\\n            new Display(this.id) :\\n            new Display(this.id, id);\\n    }).bind(this);\\n\\n    function isPromise(output) {\\n        if (!global.Promise || typeof global.Promise !== &quot;function&quot;) {\\n            return false;\\n        }\\n        return output instanceof global.Promise;\\n    }\\n\\n    function resolvePromise(outputHandler) {\\n        return function(output, keepAlive) {\\n            if (isPromise(output)) {\\n                this.$$.async();\\n\\n                output.then(function(resolvedOutput) {\\n                    outputHandler.call(this, resolvedOutput, keepAlive);\\n                }.bind(this)).catch(function(error) {\\n                    this.send({\\n                        error: formatError(error),\\n                        end: true,\\n                    });\\n                }.bind(this));\\n\\n                return;\\n            }\\n\\n            outputHandler.apply(this, arguments);\\n        }.bind(this);\\n    }\\n}\\n\\nContext.prototype.send = function send(message) {\\n    message.id = this.id;\\n\\n    if (this._done) {\\n        log(&quot;SEND: DROPPED:&quot;, message);\\n        return;\\n    }\\n\\n    if(message.end) {\\n        this._done = true;\\n        this._async = false;\\n    }\\n\\n    log(&quot;SEND:&quot;, message);\\n\\n    process.send(message);\\n};\\n\\nContext.prototype.captureGlobalContext = function captureGlobalContext() {\\n    this._capturedStdout = process.stdout;\\n    this._capturedStderr = process.stderr;\\n    this._capturedConsole = console;\\n\\n    this.stdout.pipe(this._capturedStdout);\\n    this.stderr.pipe(this._capturedStderr);\\n    this.console.Console = this._capturedConsole.Console;\\n\\n    delete process.stdout;\\n    process.stdout = this.stdout;\\n\\n    delete process.stderr;\\n    process.stderr = this.stderr;\\n\\n    delete global.console;\\n    global.console = this.console;\\n\\n    delete global.$$;\\n    global.$$ = this.$$;\\n\\n    if (typeof global.$$mimer$$ !== &quot;function&quot;) {\\n        global.$$mimer$$ = defaultMimer;\\n    }\\n\\n    delete global.$$mime$$;\\n    Object.defineProperty(global, &quot;$$mime$$&quot;, {\\n        set: this.$$.mime,\\n        configurable: true,\\n        enumerable: false,\\n    });\\n\\n    delete global.$$html$$;\\n    Object.defineProperty(global, &quot;$$html$$&quot;, {\\n        set: this.$$.html,\\n        configurable: true,\\n        enumerable: false,\\n    });\\n\\n    delete global.$$svg$$;\\n    Object.defineProperty(global, &quot;$$svg$$&quot;, {\\n        set: this.$$.svg,\\n        configurable: true,\\n        enumerable: false,\\n    });\\n\\n    delete global.$$png$$;\\n    Object.defineProperty(global, &quot;$$png$$&quot;, {\\n        set: this.$$.png,\\n        configurable: true,\\n        enumerable: false,\\n    });\\n\\n    delete global.$$jpeg$$;\\n    Object.defineProperty(global, &quot;$$jpeg$$&quot;, {\\n        set: this.$$.jpeg,\\n        configurable: true,\\n        enumerable: false,\\n    });\\n\\n    delete global.$$async$$;\\n    Object.defineProperty(global, &quot;$$async$$&quot;, {\\n        get: (function() {\\n            return this._async;\\n        }).bind(this),\\n        set: (function(value) {\\n            this._async = !!value;\\n        }).bind(this),\\n        configurable: true,\\n        enumerable: false,\\n    });\\n\\n    global.$$done$$ = this.$$.done.bind(this);\\n\\n    if (!global.hasOwnProperty(&quot;$$defaultMimer$$&quot;)) {\\n        Object.defineProperty(global, &quot;$$defaultMimer$$&quot;, {\\n            value: defaultMimer,\\n            configurable: false,\\n            writable: false,\\n            enumerable: false,\\n        });\\n    }\\n};\\n\\nContext.prototype.releaseGlobalContext = function releaseGlobalContext() {\\n    if (process.stdout === this.stdout) {\\n        this.stdout.unpipe();\\n\\n        delete process.stdout;\\n        process.stdout = this._capturedStdout;\\n\\n        this._capturedStdout = null;\\n    }\\n\\n    if (process.stderr === this.stderr) {\\n        this.stderr.unpipe();\\n\\n        delete process.stderr;\\n        process.stderr = this._capturedStderr;\\n\\n        this._capturedStderr = null;\\n    }\\n\\n    if (global.console === this.console) {\\n        delete global.console;\\n        global.console = this._capturedConsole;\\n\\n        this._capturedConsole = null;\\n    }\\n};\\n\\nfunction formatError(error) {\\n    return {\\n        ename: (error &amp;&amp; error.name) ?\\n            error.name : typeof error,\\n        evalue: (error &amp;&amp; error.message) ?\\n            error.message : util.inspect(error),\\n        traceback: (error &amp;&amp; error.stack) ?\\n            error.stack.split(&quot;\\\\n&quot;) : &quot;&quot;,\\n    };\\n}\\n\\nfunction toMime(result) {\\n    var mimer = (typeof global.$$mimer$$ === &quot;function&quot;) ?\\n        global.$$mimer$$ :\\n        defaultMimer;\\n    return mimer(result);\\n}\\n\\nfunction defaultMimer(result) {\\n    if (typeof result === &quot;undefined&quot;) {\\n        return {\\n            &quot;text/plain&quot;: &quot;undefined&quot;\\n        };\\n    }\\n\\n    if (result === null) {\\n        return {\\n            &quot;text/plain&quot;: &quot;null&quot;\\n        };\\n    }\\n\\n    var mime;\\n    if (result._toMime) {\\n        try {\\n            mime = result._toMime();\\n        } catch (error) {}\\n    }\\n    if (typeof mime !== &quot;object&quot;) {\\n        mime = {};\\n    }\\n\\n    if (!(&quot;text/plain&quot; in mime)) {\\n        try {\\n            mime[&quot;text/plain&quot;] = util.inspect(result);\\n        } catch (error) {}\\n    }\\n\\n    if (result._toHtml &amp;&amp; !(&quot;text/html&quot; in mime)) {\\n        try {\\n            mime[&quot;text/html&quot;] = result._toHtml();\\n        } catch (error) {}\\n    }\\n\\n    if (result._toSvg &amp;&amp; !(&quot;image/svg+xml&quot; in mime)) {\\n        try {\\n            mime[&quot;image/svg+xml&quot;] = result._toSvg();\\n        } catch (error) {}\\n    }\\n\\n    if (result._toPng &amp;&amp; !(&quot;image/png&quot; in mime)) {\\n        try {\\n            mime[&quot;image/png&quot;] = result._toPng();\\n        } catch (error) {}\\n    }\\n\\n    if (result._toJpeg &amp;&amp; !(&quot;image/jpeg&quot; in mime)) {\\n        try {\\n            mime[&quot;image/jpeg&quot;] = result._toJpeg();\\n        } catch (error) {}\\n    }\\n\\n    return mime;\\n}\\n\\n/*\\n * BSD 3-Clause License\\n *\\n * Copyright (c) 2017, Nicolas Riesco and others as credited in the AUTHORS file\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * 1. Redistributions of source code must retain the above copyright notice,\\n * this list of conditions and the following disclaimer.\\n *\\n * 2. Redistributions in binary form must reproduce the above copyright notice,\\n * this list of conditions and the following disclaimer in the documentation\\n * and/or other materials provided with the distribution.\\n *\\n * 3. Neither the name of the copyright holder nor the names of its contributors\\n * may be used to endorse or promote products derived from this software without\\n * specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\\n * POSSIBILITY OF SUCH DAMAGE.\\n *\\n */\\n\\nfunction Display(context_id, display_id) {\\n    var send;\\n\\n    this.mime = function mime(mimeBundle) {\\n        send(mimeBundle);\\n    };\\n\\n    this.text = function text(text) {\\n        send({&quot;text/plain&quot;: text});\\n    };\\n\\n    this.html = function html(html) {\\n        send({&quot;text/html&quot;: html});\\n    };\\n\\n    this.svg = function svg(svg) {\\n        send({&quot;image/svg+xml&quot;: svg});\\n    };\\n\\n    this.png = function png(png) {\\n        send({&quot;image/png&quot;: png});\\n    };\\n\\n    this.jpeg = function jpeg(jpeg) {\\n        send({&quot;image/jpeg&quot;: jpeg});\\n    };\\n\\n    this.json = function json(json) {\\n        send({&quot;application/json&quot;: json});\\n    };\\n\\n    this.close = function close() {\\n        process.send({\\n            id: context_id,\\n            display: {\\n                close: display_id,\\n            },\\n        });\\n    };\\n\\n    if (arguments.length &lt; 2) {\\n        // case: without a display_id\\n        send = function send(mime) {\\n            process.send({\\n                id: context_id,\\n                display: {\\n                    mime: mime,\\n                },\\n            });\\n        };\\n    } else {\\n        // case: with a display_id\\n        send = function send(mime) {\\n            process.send({\\n                id: context_id,\\n                display: {\\n                    display_id: display_id,\\n                    mime: mime,\\n                },\\n            });\\n        };\\n\\n        // open the display_id\\n        process.send({\\n            id: context_id,\\n            display: {\\n                open: display_id,\\n            },\\n        });\\n    }\\n}\\n\\n/*\\n * BSD 3-Clause License\\n *\\n * Copyright (c) 2017, Nicolas Riesco and others as credited in the AUTHORS file\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * 1. Redistributions of source code must retain the above copyright notice,\\n * this list of conditions and the following disclaimer.\\n *\\n * 2. Redistributions in binary form must reproduce the above copyright notice,\\n * this list of conditions and the following disclaimer in the documentation\\n * and/or other materials provided with the distribution.\\n *\\n * 3. Neither the name of the copyright holder nor the names of its contributors\\n * may be used to endorse or promote products derived from this software without\\n * specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\\n * POSSIBILITY OF SUCH DAMAGE.\\n *\\n */\\n\\nfunction Requester() {\\n    // id for next request\\n    this.id = 0;\\n\\n    // callback associated with a request (indexed by id)\\n    this.callbacks = {};\\n\\n    // the Promise resolve callback associated with a request (indexed by id)\\n    this.resolves = {};\\n\\n    // the Promise reject callback associated with a request (indexed by id)\\n    this.rejects = {};\\n\\n    // the string to be returned to a request (indexed by id)\\n    this.responses = {};\\n}\\n\\n// send a request\\nRequester.prototype.send = function send(context, request, callback) {\\n    var id = this.id++;\\n\\n    if (callback) {\\n        this.callbacks[id] = callback;\\n    }\\n\\n    var promise;\\n    if (global.Promise) {\\n        promise = new Promise(function(resolve, reject) {\\n            if (!this.responses.hasOwnProperty(id)) {\\n                this.resolves[id] = resolve;\\n                this.rejects[id] = reject;\\n                return;\\n            }\\n\\n            var response = this.responses[id];\\n            delete this.responses[id];\\n            resolve(response);\\n        }.bind(this));\\n    }\\n\\n    request.id = id;\\n\\n    context.send({\\n        request: request,\\n    });\\n\\n    return promise;\\n};\\n\\n// pass reply to the callbacks associated with a request\\nRequester.prototype.receive = function receive(id, reply) {\\n    var callback = this.callbacks[id];\\n    if (callback) {\\n        delete this.callbacks[id];\\n        callback(null, reply);\\n    }\\n    \\n    var resolve = this.resolves[id];\\n    if (resolve) {\\n        delete this.resolves[id];\\n        delete this.rejects[id];\\n        resolve(reply);\\n    }\\n};\\n\\n/*\\n * BSD 3-Clause License\\n *\\n * Copyright (c) 2015, Nicolas Riesco and others as credited in the AUTHORS file\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * 1. Redistributions of source code must retain the above copyright notice,\\n * this list of conditions and the following disclaimer.\\n *\\n * 2. Redistributions in binary form must reproduce the above copyright notice,\\n * this list of conditions and the following disclaimer in the documentation\\n * and/or other materials provided with the distribution.\\n *\\n * 3. Neither the name of the copyright holder nor the names of its contributors\\n * may be used to endorse or promote products derived from this software without\\n * specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\\n * POSSIBILITY OF SUCH DAMAGE.\\n *\\n */\\n\\nvar vm = require(&quot;vm&quot;);\\n\\n// Shared variables\\nvar DEBUG = !!process.env.DEBUG;\\nvar log;\\nvar requester;\\nvar initialContext;\\n\\n// Init IPC server\\ninit();\\n\\nreturn;\\n\\nfunction init() {\\n    // Setup logger\\n    log = DEBUG ?\\n        function log() {\\n            process.send({\\n                log: &quot;SERVER: &quot; + util.format.apply(this, arguments),\\n            });\\n        } :\\n        function noop() {};\\n\\n    // Create instance to send requests\\n    requester = new Requester();\\n\\n    // Capture the initial context\\n    // (id left undefined to indicate this is the initial context)\\n    initialContext = new Context(requester);\\n    initialContext.captureGlobalContext();\\n\\n    Object.defineProperty(global, &quot;$$defaultMimer$$&quot;, {\\n        value: defaultMimer,\\n        configurable: false,\\n        writable: false,\\n        enumerable: false,\\n    });\\n\\n    process.on(&quot;message&quot;, onMessage.bind(this));\\n\\n    process.on(&quot;uncaughtException&quot;, onUncaughtException.bind(this));\\n\\n    process.send({\\n        status: &quot;online&quot;,\\n    });\\n}\\n\\nfunction onUncaughtException(error) {\\n    log(&quot;UNCAUGHTEXCEPTION:&quot;, error.stack);\\n    process.send({\\n        stderr: error.stack.toString(),\\n    });\\n}\\n\\nfunction onMessage(message) {\\n    log(&quot;RECEIVED:&quot;, message);\\n\\n    var action = message[0];\\n    var code = message[1];\\n    var id = message[2];\\n\\n    initialContext.releaseGlobalContext();\\n    var context = new Context(requester, id);\\n    context.captureGlobalContext();\\n\\n    try {\\n        if (action === &quot;getAllPropertyNames&quot;) {\\n            onNameRequest(code, context);\\n        } else if (action === &quot;inspect&quot;) {\\n            onInspectRequest(code, context);\\n        } else if (action === &quot;run&quot;) {\\n            onRunRequest(code, context);\\n        } else if (action === &quot;reply&quot;) {\\n            onReply(message);\\n        } else {\\n            throw new Error(&quot;NEL: Unhandled action: &quot; + action);\\n        }\\n    } catch (error) {\\n        context.$$.sendError(error);\\n    }\\n\\n    context.releaseGlobalContext();\\n    initialContext.captureGlobalContext();\\n    initialContext._done = false;\\n}\\n\\nfunction onReply(message) {\\n    var reply = message[1];\\n    var id = message[3];\\n    requester.receive(id, reply);\\n}\\n\\nfunction onNameRequest(code, context) {\\n    var message = {\\n        id: context.id,\\n        names: getAllPropertyNames(run(code)),\\n        end: true,\\n    };\\n    context.send(message);\\n}\\n\\nfunction onInspectRequest(code, context) {\\n    var message = {\\n        id: context.id,\\n        inspection: inspect(run(code)),\\n        end: true,\\n    };\\n    context.send(message);\\n}\\n\\nfunction onRunRequest(code, context) {\\n    var result = run(code);\\n\\n    // If a result has already been sent, do not send this result.\\n    if (context._done) {\\n        return;\\n    }\\n\\n    // If the result is a Promise, send the result fulfilled by the promise\\n    if (isPromise(result)) {\\n        context.$$.sendResult(result);\\n        return;\\n    }\\n\\n    // If async mode has been enabled (and the result is not a Promise),\\n    // do not send this result.\\n    if (context._async) {\\n        return;\\n    }\\n\\n    // If no result has been sent yet and async mode has not been enabled,\\n    // send this result.\\n    context.$$.sendResult(result);\\n\\n    return;\\n\\n    function isPromise(output) {\\n        if (!global.Promise || typeof global.Promise !== &quot;function&quot;) {\\n            return false;\\n        }\\n        return output instanceof global.Promise;\\n    }\\n}\\n\\nfunction getAllPropertyNames(object) {\\n    var propertyList = [];\\n\\n    if (object === undefined) {\\n        return [];\\n    }\\n\\n    if (object === null) {\\n        return [];\\n    }\\n\\n    var prototype;\\n    if (typeof object === &quot;boolean&quot;) {\\n        prototype = Boolean.prototype;\\n    } else if (typeof object === &quot;number&quot;) {\\n        prototype = Number.prototype;\\n    } else if (typeof object === &quot;string&quot;) {\\n        prototype = String.prototype;\\n    } else {\\n        prototype = object;\\n    }\\n\\n    var prototypeList = [prototype];\\n\\n    function pushToPropertyList(e) {\\n        if (propertyList.indexOf(e) === -1) {\\n            propertyList.push(e);\\n        }\\n    }\\n\\n    while (true) {\\n        var names;\\n        try {\\n            names = Object.getOwnPropertyNames(prototype).sort();\\n        } catch (e) {\\n            break;\\n        }\\n        names.forEach(pushToPropertyList);\\n\\n        prototype = Object.getPrototypeOf(prototype);\\n        if (prototype === null) {\\n            break;\\n        }\\n\\n        if (prototypeList.indexOf(prototype) === -1) {\\n            prototypeList.push(prototype);\\n        }\\n    }\\n\\n    return propertyList;\\n}\\n\\nfunction inspect(object) {\\n    if (object === undefined) {\\n        return {\\n            string: &quot;undefined&quot;,\\n            type: &quot;Undefined&quot;,\\n        };\\n    }\\n\\n    if (object === null) {\\n        return {\\n            string: &quot;null&quot;,\\n            type: &quot;Null&quot;,\\n        };\\n    }\\n\\n    if (typeof object === &quot;boolean&quot;) {\\n        return {\\n            string: object ? &quot;true&quot; : &quot;false&quot;,\\n            type: &quot;Boolean&quot;,\\n            constructorList: [&quot;Boolean&quot;, &quot;Object&quot;],\\n        };\\n    }\\n\\n    if (typeof object === &quot;number&quot;) {\\n        return {\\n            string: util.inspect(object),\\n            type: &quot;Number&quot;,\\n            constructorList: [&quot;Number&quot;, &quot;Object&quot;],\\n        };\\n    }\\n\\n    if (typeof object === &quot;string&quot;) {\\n        return {\\n            string: object,\\n            type: &quot;String&quot;,\\n            constructorList: [&quot;String&quot;, &quot;Object&quot;],\\n            length: object.length,\\n        };\\n    }\\n\\n    if (typeof object === &quot;function&quot;) {\\n        return {\\n            string: object.toString(),\\n            type: &quot;Function&quot;,\\n            constructorList: [&quot;Function&quot;, &quot;Object&quot;],\\n            length: object.length,\\n        };\\n    }\\n\\n    var constructorList = getConstructorList(object);\\n    var result = {\\n        string: toString(object),\\n        type: constructorList[0] || &quot;&quot;,\\n        constructorList: constructorList,\\n    };\\n\\n    if (&quot;length&quot; in object) {\\n        result.length = object.length;\\n    }\\n\\n    return result;\\n\\n    function toString(object) {\\n        try {\\n            return util.inspect(object.valueOf());\\n        } catch (e) {\\n            return util.inspect(object);\\n        }\\n    }\\n\\n    function getConstructorList(object) {\\n        var constructorList = [];\\n\\n        var prototype = Object.getPrototypeOf(object);\\n        while (true) {\\n            try {\\n                constructorList.push(prototype.constructor.name);\\n            } catch (e) {\\n                break;\\n            }\\n            prototype = Object.getPrototypeOf(prototype);\\n        }\\n\\n        return constructorList;\\n    }\\n}\\n\\nfunction run(code) {\\n    return vm.runInThisContext(code);\\n}\\n\\n})();&#39; ],\n     env: \n      { TERM_SESSION_ID: &#39;w0t0p0:AD756E21-39B1-4BBB-8F5A-CF02F7CC7943&#39;,\n        SSH_AUTH_SOCK: &#39;/private/tmp/com.apple.launchd.PhKgyBbEYq/Listeners&#39;,\n        Apple_PubSub_Socket_Render: &#39;/private/tmp/com.apple.launchd.bQUJtmtrAn/Render&#39;,\n        COLORFGBG: &#39;11;15&#39;,\n        ITERM_PROFILE: &#39;eten&#39;,\n        XPC_FLAGS: &#39;0x0&#39;,\n        PWD: &#39;/Users/admin/Study/FrontEnd&#39;,\n        SHELL: &#39;/bin/zsh&#39;,\n        LC_CTYPE: &#39;UTF-8&#39;,\n        TERM_PROGRAM_VERSION: &#39;3.2.0&#39;,\n        TERM_PROGRAM: &#39;iTerm.app&#39;,\n        PATH: &#39;/usr/local/bin:/Users/admin/Library/Python/3.7/bin:/Users/admin/.yarn/bin:/Users/admin/.config/yarn/global/node_modules/.bin:/Users/admin/.nvm/versions/node/v9.6.0/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin&#39;,\n        COLORTERM: &#39;truecolor&#39;,\n        TERM: &#39;xterm-256color&#39;,\n        HOME: &#39;/Users/admin&#39;,\n        TMPDIR: &#39;/var/folders/j6/43bxc7tx50qbxvgmrqvbpxdm0000gn/T/&#39;,\n        USER: &#39;admin&#39;,\n        XPC_SERVICE_NAME: &#39;0&#39;,\n        LOGNAME: &#39;admin&#39;,\n        __CF_USER_TEXT_ENCODING: &#39;0x1F5:0x19:0x34&#39;,\n        ITERM_SESSION_ID: &#39;w0t0p0:AD756E21-39B1-4BBB-8F5A-CF02F7CC7943&#39;,\n        SHLVL: &#39;1&#39;,\n        OLDPWD: &#39;/Users/admin/Study/Vue&#39;,\n        ZSH: &#39;/Users/admin/.oh-my-zsh&#39;,\n        PAGER: &#39;less&#39;,\n        LESS: &#39;-R&#39;,\n        LSCOLORS: &#39;Gxfxcxdxbxegedabagacad&#39;,\n        AUTOJUMP_SOURCED: &#39;1&#39;,\n        AUTOJUMP_ERROR_PATH: &#39;/Users/admin/Library/autojump/errors.log&#39;,\n        LS_COLORS: &#39;no=00:fi=00:di=01;34:ln=00;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=41;33;01:ex=00;32:*.cmd=00;32:*.exe=01;32:*.com=01;32:*.bat=01;32:*.btm=01;32:*.dll=01;32:*.tar=00;31:*.tbz=00;31:*.tgz=00;31:*.rpm=00;31:*.deb=00;31:*.arj=00;31:*.taz=00;31:*.lzh=00;31:*.lzma=00;31:*.zip=00;31:*.zoo=00;31:*.z=00;31:*.Z=00;31:*.gz=00;31:*.bz2=00;31:*.tb2=00;31:*.tz2=00;31:*.tbz2=00;31:*.avi=01;35:*.bmp=01;35:*.fli=01;35:*.gif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mng=01;35:*.mov=01;35:*.mpg=01;35:*.pcx=01;35:*.pbm=01;35:*.pgm=01;35:*.png=01;35:*.ppm=01;35:*.tga=01;35:*.tif=01;35:*.xbm=01;35:*.xpm=01;35:*.dl=01;35:*.gl=01;35:*.wmv=01;35:*.aiff=00;32:*.au=00;32:*.mid=00;32:*.mp3=00;32:*.ogg=00;32:*.voc=00;32:*.wav=00;32:&#39;,\n        NVM_DIR: &#39;/Users/admin/.nvm&#39;,\n        NVM_CD_FLAGS: &#39;-q&#39;,\n        NVM_BIN: &#39;/Users/admin/.nvm/versions/node/v9.6.0/bin&#39;,\n        _: &#39;/usr/local/bin/jupyter&#39;,\n        __PYVENV_LAUNCHER__: &#39;/usr/local/Cellar/python/3.7.1/bin/python3.7&#39;,\n        JPY_PARENT_PID: &#39;93096&#39; },\n     pid: 1048,\n     features: \n      { debug: false,\n        uv: true,\n        ipv6: true,\n        tls_npn: true,\n        tls_alpn: true,\n        tls_sni: true,\n        tls_ocsp: true,\n        tls: true },\n     ppid: 1047,\n     _eval: &#39;(function() {\\n/*\\n * BSD 3-Clause License\\n *\\n * Copyright (c) 2015, Nicolas Riesco and others as credited in the AUTHORS file\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * 1. Redistributions of source code must retain the above copyright notice,\\n * this list of conditions and the following disclaimer.\\n *\\n * 2. Redistributions in binary form must reproduce the above copyright notice,\\n * this list of conditions and the following disclaimer in the documentation\\n * and/or other materials provided with the distribution.\\n *\\n * 3. Neither the name of the copyright holder nor the names of its contributors\\n * may be used to endorse or promote products derived from this software without\\n * specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\\n * POSSIBILITY OF SUCH DAMAGE.\\n *\\n */\\n\\nvar console = require(&quot;console&quot;);\\nvar stream = require(&quot;stream&quot;);\\nvar util = require(&quot;util&quot;);\\n\\nfunction Stdout(id, opt) {\\n    stream.Transform.call(this, opt);\\n\\n    this._id = id;\\n}\\n\\nStdout.prototype = Object.create(stream.Transform.prototype);\\n\\nStdout.prototype._transform = function(data, encoding, callback) {\\n    var response = {\\n        id: this._id,\\n        stdout: data.toString(),\\n    };\\n    log(&quot;STDOUT:&quot;, response);\\n    process.send(response);\\n    this.push(data);\\n    callback();\\n};\\n\\nfunction Stderr(id, opt) {\\n    stream.Transform.call(this, opt);\\n\\n    this._id = id;\\n}\\n\\nStderr.prototype = Object.create(stream.Transform.prototype);\\n\\nStderr.prototype._transform = function(data, encoding, callback) {\\n    var response = {\\n        id: this._id,\\n        stderr: data.toString(),\\n    };\\n    log(&quot;STDERR:&quot;, response);\\n    process.send(response);\\n    this.push(data);\\n    callback();\\n};\\n\\nfunction Context(requester, id) {\\n    this.requester = requester;\\n    this.id = id;\\n\\n    this.stdout = new Stdout(this.id);\\n    this.stderr = new Stderr(this.id);\\n    this.console = new console.Console(this.stdout, this.stderr);\\n\\n    this._capturedStdout = null;\\n    this._capturedStderr = null;\\n    this._capturedConsole = null;\\n\\n    this._async = false;\\n    this._done = false;\\n\\n    // `$$` provides an interface for users to access the execution context\\n    this.$$ = Object.create(null);\\n\\n    this.$$.async = (function async(value) {\\n        this._async = (arguments.length === 0) ? true : !!value;\\n        return this._async;\\n    }).bind(this);\\n\\n    this.$$.done = (function done(result) {\\n        this.send((arguments.length === 0) ? {\\n            end: true,\\n        } : {\\n            mime: toMime(result),\\n            end: true,\\n        });\\n    }).bind(this);\\n\\n    this.$$.sendResult = resolvePromise.call(this,\\n        function sendResult(result, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: toMime(result),\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.sendError = resolvePromise.call(this,\\n        function sendError(error, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                error: formatError(error),\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.mime = resolvePromise.call(this,\\n        function sendMime(mimeBundle, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: mimeBundle,\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.text = resolvePromise.call(this,\\n        function sendText(text, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: {\\n                    &quot;text/plain&quot;: text,\\n                },\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.html = resolvePromise.call(this,\\n        function sendHtml(html, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: {\\n                    &quot;text/html&quot;: html,\\n                },\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.svg = resolvePromise.call(this,\\n        function sendSvg(svg, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: {\\n                    &quot;image/svg+xml&quot;: svg,\\n                },\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.png = resolvePromise.call(this,\\n        function sendPng(png, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: {\\n                    &quot;image/png&quot;: png,\\n                },\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.jpeg = resolvePromise.call(this,\\n        function sendJpeg(jpeg, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: {\\n                    &quot;image/jpeg&quot;: jpeg,\\n                },\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.json = resolvePromise.call(this,\\n        function sendJson(json, keepAlive) {\\n            if (keepAlive) this.$$.async();\\n\\n            this.send({\\n                mime: {\\n                    &quot;application/json&quot;: json,\\n                },\\n                end: !keepAlive,\\n            });\\n        }\\n    );\\n\\n    this.$$.input = (function input(options, callback) {\\n        this.$$.async();\\n\\n        var inputRequest = {\\n            input: options,\\n        };\\n\\n        var inputCallback;\\n        if (typeof callback === \\&#39;function\\&#39;) {\\n            inputCallback = function inputCallback(error, reply) {\\n                callback(error, reply.input);\\n            };\\n        }\\n\\n        var promise = this.requester.send(this, inputRequest, inputCallback);\\n        if (promise) {\\n            return promise.then(function(reply) { return reply.input; });\\n        }\\n    }).bind(this);\\n\\n    this.$$.display = (function createDisplay(id) {\\n        return (arguments.length === 0) ?\\n            new Display(this.id) :\\n            new Display(this.id, id);\\n    }).bind(this);\\n\\n    function isPromise(output) {\\n        if (!global.Promise || typeof global.Promise !== &quot;function&quot;) {\\n            return false;\\n        }\\n        return output instanceof global.Promise;\\n    }\\n\\n    function resolvePromise(outputHandler) {\\n        return function(output, keepAlive) {\\n            if (isPromise(output)) {\\n                this.$$.async();\\n\\n                output.then(function(resolvedOutput) {\\n                    outputHandler.call(this, resolvedOutput, keepAlive);\\n                }.bind(this)).catch(function(error) {\\n                    this.send({\\n                        error: formatError(error),\\n                        end: true,\\n                    });\\n                }.bind(this));\\n\\n                return;\\n            }\\n\\n            outputHandler.apply(this, arguments);\\n        }.bind(this);\\n    }\\n}\\n\\nContext.prototype.send = function send(message) {\\n    message.id = this.id;\\n\\n    if (this._done) {\\n        log(&quot;SEND: DROPPED:&quot;, message);\\n        return;\\n    }\\n\\n    if(message.end) {\\n        this._done = true;\\n        this._async = false;\\n    }\\n\\n    log(&quot;SEND:&quot;, message);\\n\\n    process.send(message);\\n};\\n\\nContext.prototype.captureGlobalContext = function captureGlobalContext() {\\n    this._capturedStdout = process.stdout;\\n    this._capturedStderr = process.stderr;\\n    this._capturedConsole = console;\\n\\n    this.stdout.pipe(this._capturedStdout);\\n    this.stderr.pipe(this._capturedStderr);\\n    this.console.Console = this._capturedConsole.Console;\\n\\n    delete process.stdout;\\n    process.stdout = this.stdout;\\n\\n    delete process.stderr;\\n    process.stderr = this.stderr;\\n\\n    delete global.console;\\n    global.console = this.console;\\n\\n    delete global.$$;\\n    global.$$ = this.$$;\\n\\n    if (typeof global.$$mimer$$ !== &quot;function&quot;) {\\n        global.$$mimer$$ = defaultMimer;\\n    }\\n\\n    delete global.$$mime$$;\\n    Object.defineProperty(global, &quot;$$mime$$&quot;, {\\n        set: this.$$.mime,\\n        configurable: true,\\n        enumerable: false,\\n    });\\n\\n    delete global.$$html$$;\\n    Object.defineProperty(global, &quot;$$html$$&quot;, {\\n        set: this.$$.html,\\n        configurable: true,\\n        enumerable: false,\\n    });\\n\\n    delete global.$$svg$$;\\n    Object.defineProperty(global, &quot;$$svg$$&quot;, {\\n        set: this.$$.svg,\\n        configurable: true,\\n        enumerable: false,\\n    });\\n\\n    delete global.$$png$$;\\n    Object.defineProperty(global, &quot;$$png$$&quot;, {\\n        set: this.$$.png,\\n        configurable: true,\\n        enumerable: false,\\n    });\\n\\n    delete global.$$jpeg$$;\\n    Object.defineProperty(global, &quot;$$jpeg$$&quot;, {\\n        set: this.$$.jpeg,\\n        configurable: true,\\n        enumerable: false,\\n    });\\n\\n    delete global.$$async$$;\\n    Object.defineProperty(global, &quot;$$async$$&quot;, {\\n        get: (function() {\\n            return this._async;\\n        }).bind(this),\\n        set: (function(value) {\\n            this._async = !!value;\\n        }).bind(this),\\n        configurable: true,\\n        enumerable: false,\\n    });\\n\\n    global.$$done$$ = this.$$.done.bind(this);\\n\\n    if (!global.hasOwnProperty(&quot;$$defaultMimer$$&quot;)) {\\n        Object.defineProperty(global, &quot;$$defaultMimer$$&quot;, {\\n            value: defaultMimer,\\n            configurable: false,\\n            writable: false,\\n            enumerable: false,\\n        });\\n    }\\n};\\n\\nContext.prototype.releaseGlobalContext = function releaseGlobalContext() {\\n    if (process.stdout === this.stdout) {\\n        this.stdout.unpipe();\\n\\n        delete process.stdout;\\n        process.stdout = this._capturedStdout;\\n\\n        this._capturedStdout = null;\\n    }\\n\\n    if (process.stderr === this.stderr) {\\n        this.stderr.unpipe();\\n\\n        delete process.stderr;\\n        process.stderr = this._capturedStderr;\\n\\n        this._capturedStderr = null;\\n    }\\n\\n    if (global.console === this.console) {\\n        delete global.console;\\n        global.console = this._capturedConsole;\\n\\n        this._capturedConsole = null;\\n    }\\n};\\n\\nfunction formatError(error) {\\n    return {\\n        ename: (error &amp;&amp; error.name) ?\\n            error.name : typeof error,\\n        evalue: (error &amp;&amp; error.message) ?\\n            error.message : util.inspect(error),\\n        traceback: (error &amp;&amp; error.stack) ?\\n            error.stack.split(&quot;\\\\n&quot;) : &quot;&quot;,\\n    };\\n}\\n\\nfunction toMime(result) {\\n    var mimer = (typeof global.$$mimer$$ === &quot;function&quot;) ?\\n        global.$$mimer$$ :\\n        defaultMimer;\\n    return mimer(result);\\n}\\n\\nfunction defaultMimer(result) {\\n    if (typeof result === &quot;undefined&quot;) {\\n        return {\\n            &quot;text/plain&quot;: &quot;undefined&quot;\\n        };\\n    }\\n\\n    if (result === null) {\\n        return {\\n            &quot;text/plain&quot;: &quot;null&quot;\\n        };\\n    }\\n\\n    var mime;\\n    if (result._toMime) {\\n        try {\\n            mime = result._toMime();\\n        } catch (error) {}\\n    }\\n    if (typeof mime !== &quot;object&quot;) {\\n        mime = {};\\n    }\\n\\n    if (!(&quot;text/plain&quot; in mime)) {\\n        try {\\n            mime[&quot;text/plain&quot;] = util.inspect(result);\\n        } catch (error) {}\\n    }\\n\\n    if (result._toHtml &amp;&amp; !(&quot;text/html&quot; in mime)) {\\n        try {\\n            mime[&quot;text/html&quot;] = result._toHtml();\\n        } catch (error) {}\\n    }\\n\\n    if (result._toSvg &amp;&amp; !(&quot;image/svg+xml&quot; in mime)) {\\n        try {\\n            mime[&quot;image/svg+xml&quot;] = result._toSvg();\\n        } catch (error) {}\\n    }\\n\\n    if (result._toPng &amp;&amp; !(&quot;image/png&quot; in mime)) {\\n        try {\\n            mime[&quot;image/png&quot;] = result._toPng();\\n        } catch (error) {}\\n    }\\n\\n    if (result._toJpeg &amp;&amp; !(&quot;image/jpeg&quot; in mime)) {\\n        try {\\n            mime[&quot;image/jpeg&quot;] = result._toJpeg();\\n        } catch (error) {}\\n    }\\n\\n    return mime;\\n}\\n\\n/*\\n * BSD 3-Clause License\\n *\\n * Copyright (c) 2017, Nicolas Riesco and others as credited in the AUTHORS file\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * 1. Redistributions of source code must retain the above copyright notice,\\n * this list of conditions and the following disclaimer.\\n *\\n * 2. Redistributions in binary form must reproduce the above copyright notice,\\n * this list of conditions and the following disclaimer in the documentation\\n * and/or other materials provided with the distribution.\\n *\\n * 3. Neither the name of the copyright holder nor the names of its contributors\\n * may be used to endorse or promote products derived from this software without\\n * specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\\n * POSSIBILITY OF SUCH DAMAGE.\\n *\\n */\\n\\nfunction Display(context_id, display_id) {\\n    var send;\\n\\n    this.mime = function mime(mimeBundle) {\\n        send(mimeBundle);\\n    };\\n\\n    this.text = function text(text) {\\n        send({&quot;text/plain&quot;: text});\\n    };\\n\\n    this.html = function html(html) {\\n        send({&quot;text/html&quot;: html});\\n    };\\n\\n    this.svg = function svg(svg) {\\n        send({&quot;image/svg+xml&quot;: svg});\\n    };\\n\\n    this.png = function png(png) {\\n        send({&quot;image/png&quot;: png});\\n    };\\n\\n    this.jpeg = function jpeg(jpeg) {\\n        send({&quot;image/jpeg&quot;: jpeg});\\n    };\\n\\n    this.json = function json(json) {\\n        send({&quot;application/json&quot;: json});\\n    };\\n\\n    this.close = function close() {\\n        process.send({\\n            id: context_id,\\n            display: {\\n                close: display_id,\\n            },\\n        });\\n    };\\n\\n    if (arguments.length &lt; 2) {\\n        // case: without a display_id\\n        send = function send(mime) {\\n            process.send({\\n                id: context_id,\\n                display: {\\n                    mime: mime,\\n                },\\n            });\\n        };\\n    } else {\\n        // case: with a display_id\\n        send = function send(mime) {\\n            process.send({\\n                id: context_id,\\n                display: {\\n                    display_id: display_id,\\n                    mime: mime,\\n                },\\n            });\\n        };\\n\\n        // open the display_id\\n        process.send({\\n            id: context_id,\\n            display: {\\n                open: display_id,\\n            },\\n        });\\n    }\\n}\\n\\n/*\\n * BSD 3-Clause License\\n *\\n * Copyright (c) 2017, Nicolas Riesco and others as credited in the AUTHORS file\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * 1. Redistributions of source code must retain the above copyright notice,\\n * this list of conditions and the following disclaimer.\\n *\\n * 2. Redistributions in binary form must reproduce the above copyright notice,\\n * this list of conditions and the following disclaimer in the documentation\\n * and/or other materials provided with the distribution.\\n *\\n * 3. Neither the name of the copyright holder nor the names of its contributors\\n * may be used to endorse or promote products derived from this software without\\n * specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\\n * POSSIBILITY OF SUCH DAMAGE.\\n *\\n */\\n\\nfunction Requester() {\\n    // id for next request\\n    this.id = 0;\\n\\n    // callback associated with a request (indexed by id)\\n    this.callbacks = {};\\n\\n    // the Promise resolve callback associated with a request (indexed by id)\\n    this.resolves = {};\\n\\n    // the Promise reject callback associated with a request (indexed by id)\\n    this.rejects = {};\\n\\n    // the string to be returned to a request (indexed by id)\\n    this.responses = {};\\n}\\n\\n// send a request\\nRequester.prototype.send = function send(context, request, callback) {\\n    var id = this.id++;\\n\\n    if (callback) {\\n        this.callbacks[id] = callback;\\n    }\\n\\n    var promise;\\n    if (global.Promise) {\\n        promise = new Promise(function(resolve, reject) {\\n            if (!this.responses.hasOwnProperty(id)) {\\n                this.resolves[id] = resolve;\\n                this.rejects[id] = reject;\\n                return;\\n            }\\n\\n            var response = this.responses[id];\\n            delete this.responses[id];\\n            resolve(response);\\n        }.bind(this));\\n    }\\n\\n    request.id = id;\\n\\n    context.send({\\n        request: request,\\n    });\\n\\n    return promise;\\n};\\n\\n// pass reply to the callbacks associated with a request\\nRequester.prototype.receive = function receive(id, reply) {\\n    var callback = this.callbacks[id];\\n    if (callback) {\\n        delete this.callbacks[id];\\n        callback(null, reply);\\n    }\\n    \\n    var resolve = this.resolves[id];\\n    if (resolve) {\\n        delete this.resolves[id];\\n        delete this.rejects[id];\\n        resolve(reply);\\n    }\\n};\\n\\n/*\\n * BSD 3-Clause License\\n *\\n * Copyright (c) 2015, Nicolas Riesco and others as credited in the AUTHORS file\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * 1. Redistributions of source code must retain the above copyright notice,\\n * this list of conditions and the following disclaimer.\\n *\\n * 2. Redistributions in binary form must reproduce the above copyright notice,\\n * this list of conditions and the following disclaimer in the documentation\\n * and/or other materials provided with the distribution.\\n *\\n * 3. Neither the name of the copyright holder nor the names of its contributors\\n * may be used to endorse or promote products derived from this software without\\n * specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\\n * POSSIBILITY OF SUCH DAMAGE.\\n *\\n */\\n\\nvar vm = require(&quot;vm&quot;);\\n\\n// Shared variables\\nvar DEBUG = !!process.env.DEBUG;\\nvar log;\\nvar requester;\\nvar initialContext;\\n\\n// Init IPC server\\ninit();\\n\\nreturn;\\n\\nfunction init() {\\n    // Setup logger\\n    log = DEBUG ?\\n        function log() {\\n            process.send({\\n                log: &quot;SERVER: &quot; + util.format.apply(this, arguments),\\n            });\\n        } :\\n        function noop() {};\\n\\n    // Create instance to send requests\\n    requester = new Requester();\\n\\n    // Capture the initial context\\n    // (id left undefined to indicate this is the initial context)\\n    initialContext = new Context(requester);\\n    initialContext.captureGlobalContext();\\n\\n    Object.defineProperty(global, &quot;$$defaultMimer$$&quot;, {\\n        value: defaultMimer,\\n        configurable: false,\\n        writable: false,\\n        enumerable: false,\\n    });\\n\\n    process.on(&quot;message&quot;, onMessage.bind(this));\\n\\n    process.on(&quot;uncaughtException&quot;, onUncaughtException.bind(this));\\n\\n    process.send({\\n        status: &quot;online&quot;,\\n    });\\n}\\n\\nfunction onUncaughtException(error) {\\n    log(&quot;UNCAUGHTEXCEPTION:&quot;, error.stack);\\n    process.send({\\n        stderr: error.stack.toString(),\\n    });\\n}\\n\\nfunction onMessage(message) {\\n    log(&quot;RECEIVED:&quot;, message);\\n\\n    var action = message[0];\\n    var code = message[1];\\n    var id = message[2];\\n\\n    initialContext.releaseGlobalContext();\\n    var context = new Context(requester, id);\\n    context.captureGlobalContext();\\n\\n    try {\\n        if (action === &quot;getAllPropertyNames&quot;) {\\n            onNameRequest(code, context);\\n        } else if (action === &quot;inspect&quot;) {\\n            onInspectRequest(code, context);\\n        } else if (action === &quot;run&quot;) {\\n            onRunRequest(code, context);\\n        } else if (action === &quot;reply&quot;) {\\n            onReply(message);\\n        } else {\\n            throw new Error(&quot;NEL: Unhandled action: &quot; + action);\\n        }\\n    } catch (error) {\\n        context.$$.sendError(error);\\n    }\\n\\n    context.releaseGlobalContext();\\n    initialContext.captureGlobalContext();\\n    initialContext._done = false;\\n}\\n\\nfunction onReply(message) {\\n    var reply = message[1];\\n    var id = message[3];\\n    requester.receive(id, reply);\\n}\\n\\nfunction onNameRequest(code, context) {\\n    var message = {\\n        id: context.id,\\n        names: getAllPropertyNames(run(code)),\\n        end: true,\\n    };\\n    context.send(message);\\n}\\n\\nfunction onInspectRequest(code, context) {\\n    var message = {\\n        id: context.id,\\n        inspection: inspect(run(code)),\\n        end: true,\\n    };\\n    context.send(message);\\n}\\n\\nfunction onRunRequest(code, context) {\\n    var result = run(code);\\n\\n    // If a result has already been sent, do not send this result.\\n    if (context._done) {\\n        return;\\n    }\\n\\n    // If the result is a Promise, send the result fulfilled by the promise\\n    if (isPromise(result)) {\\n        context.$$.sendResult(result);\\n        return;\\n    }\\n\\n    // If async mode has been enabled (and the result is not a Promise),\\n    // do not send this result.\\n    if (context._async) {\\n        return;\\n    }\\n\\n    // If no result has been sent yet and async mode has not been enabled,\\n    // send this result.\\n    context.$$.sendResult(result);\\n\\n    return;\\n\\n    function isPromise(output) {\\n        if (!global.Promise || typeof global.Promise !== &quot;function&quot;) {\\n            return false;\\n        }\\n        return output instanceof global.Promise;\\n    }\\n}\\n\\nfunction getAllPropertyNames(object) {\\n    var propertyList = [];\\n\\n    if (object === undefined) {\\n        return [];\\n    }\\n\\n    if (object === null) {\\n        return [];\\n    }\\n\\n    var prototype;\\n    if (typeof object === &quot;boolean&quot;) {\\n        prototype = Boolean.prototype;\\n    } else if (typeof object === &quot;number&quot;) {\\n        prototype = Number.prototype;\\n    } else if (typeof object === &quot;string&quot;) {\\n        prototype = String.prototype;\\n    } else {\\n        prototype = object;\\n    }\\n\\n    var prototypeList = [prototype];\\n\\n    function pushToPropertyList(e) {\\n        if (propertyList.indexOf(e) === -1) {\\n            propertyList.push(e);\\n        }\\n    }\\n\\n    while (true) {\\n        var names;\\n        try {\\n            names = Object.getOwnPropertyNames(prototype).sort();\\n        } catch (e) {\\n            break;\\n        }\\n        names.forEach(pushToPropertyList);\\n\\n        prototype = Object.getPrototypeOf(prototype);\\n        if (prototype === null) {\\n            break;\\n        }\\n\\n        if (prototypeList.indexOf(prototype) === -1) {\\n            prototypeList.push(prototype);\\n        }\\n    }\\n\\n    return propertyList;\\n}\\n\\nfunction inspect(object) {\\n    if (object === undefined) {\\n        return {\\n            string: &quot;undefined&quot;,\\n            type: &quot;Undefined&quot;,\\n        };\\n    }\\n\\n    if (object === null) {\\n        return {\\n            string: &quot;null&quot;,\\n            type: &quot;Null&quot;,\\n        };\\n    }\\n\\n    if (typeof object === &quot;boolean&quot;) {\\n        return {\\n            string: object ? &quot;true&quot; : &quot;false&quot;,\\n            type: &quot;Boolean&quot;,\\n            constructorList: [&quot;Boolean&quot;, &quot;Object&quot;],\\n        };\\n    }\\n\\n    if (typeof object === &quot;number&quot;) {\\n        return {\\n            string: util.inspect(object),\\n            type: &quot;Number&quot;,\\n            constructorList: [&quot;Number&quot;, &quot;Object&quot;],\\n        };\\n    }\\n\\n    if (typeof object === &quot;string&quot;) {\\n        return {\\n            string: object,\\n            type: &quot;String&quot;,\\n            constructorList: [&quot;String&quot;, &quot;Object&quot;],\\n            length: object.length,\\n        };\\n    }\\n\\n    if (typeof object === &quot;function&quot;) {\\n        return {\\n            string: object.toString(),\\n            type: &quot;Function&quot;,\\n            constructorList: [&quot;Function&quot;, &quot;Object&quot;],\\n            length: object.length,\\n        };\\n    }\\n\\n    var constructorList = getConstructorList(object);\\n    var result = {\\n        string: toString(object),\\n        type: constructorList[0] || &quot;&quot;,\\n        constructorList: constructorList,\\n    };\\n\\n    if (&quot;length&quot; in object) {\\n        result.length = object.length;\\n    }\\n\\n    return result;\\n\\n    function toString(object) {\\n        try {\\n            return util.inspect(object.valueOf());\\n        } catch (e) {\\n            return util.inspect(object);\\n        }\\n    }\\n\\n    function getConstructorList(object) {\\n        var constructorList = [];\\n\\n        var prototype = Object.getPrototypeOf(object);\\n        while (true) {\\n            try {\\n                constructorList.push(prototype.constructor.name);\\n            } catch (e) {\\n                break;\\n            }\\n            prototype = Object.getPrototypeOf(prototype);\\n        }\\n\\n        return constructorList;\\n    }\\n}\\n\\nfunction run(code) {\\n    return vm.runInThisContext(code);\\n}\\n\\n})();&#39;,\n     execPath: &#39;/Users/admin/.nvm/versions/node/v9.6.0/bin/node&#39;,\n     debugPort: 9229,\n     _startProfilerIdleNotifier: [Function: _startProfilerIdleNotifier],\n     _stopProfilerIdleNotifier: [Function: _stopProfilerIdleNotifier],\n     _getActiveRequests: [Function: _getActiveRequests],\n     _getActiveHandles: [Function: _getActiveHandles],\n     reallyExit: [Function: reallyExit],\n     abort: [Function: abort],\n     chdir: [Function: chdir],\n     cwd: [Function: cwd],\n     umask: [Function: umask],\n     getuid: [Function: getuid],\n     geteuid: [Function: geteuid],\n     setuid: [Function: setuid],\n     seteuid: [Function: seteuid],\n     setgid: [Function: setgid],\n     setegid: [Function: setegid],\n     getgid: [Function: getgid],\n     getegid: [Function: getegid],\n     getgroups: [Function: getgroups],\n     setgroups: [Function: setgroups],\n     initgroups: [Function: initgroups],\n     _kill: [Function: _kill],\n     _debugProcess: [Function: _debugProcess],\n     _debugPause: [Function: _debugPause],\n     _debugEnd: [Function: _debugEnd],\n     hrtime: [Function: hrtime],\n     cpuUsage: [Function: cpuUsage],\n     dlopen: [Function: dlopen],\n     uptime: [Function: uptime],\n     memoryUsage: [Function: memoryUsage],\n     binding: [Function: binding],\n     _linkedBinding: [Function: _linkedBinding],\n     _rawDebug: [Function],\n     moduleLoadList: \n      [ &#39;Binding contextify&#39;,\n        &#39;Binding natives&#39;,\n        &#39;Binding config&#39;,\n        &#39;NativeModule events&#39;,\n        &#39;Binding async_wrap&#39;,\n        &#39;Binding icu&#39;,\n        &#39;NativeModule util&#39;,\n        &#39;NativeModule internal/errors&#39;,\n        &#39;Binding buffer&#39;,\n        &#39;NativeModule internal/encoding&#39;,\n        &#39;NativeModule internal/util&#39;,\n        &#39;Binding util&#39;,\n        &#39;Binding constants&#39;,\n        &#39;NativeModule internal/util/types&#39;,\n        &#39;NativeModule buffer&#39;,\n        &#39;NativeModule internal/buffer&#39;,\n        &#39;Binding uv&#39;,\n        &#39;NativeModule internal/util/comparisons&#39;,\n        &#39;NativeModule internal/process&#39;,\n        &#39;NativeModule internal/process/warning&#39;,\n        &#39;NativeModule internal/process/next_tick&#39;,\n        &#39;NativeModule internal/async_hooks&#39;,\n        &#39;NativeModule internal/process/promises&#39;,\n        &#39;NativeModule internal/process/stdio&#39;,\n        &#39;Binding performance&#39;,\n        &#39;NativeModule perf_hooks&#39;,\n        &#39;NativeModule internal/linkedlist&#39;,\n        &#39;NativeModule internal/trace_events_async_hooks&#39;,\n        &#39;Binding trace_events&#39;,\n        &#39;NativeModule async_hooks&#39;,\n        &#39;NativeModule internal/inspector_async_hook&#39;,\n        &#39;Binding inspector&#39;,\n        &#39;NativeModule child_process&#39;,\n        &#39;Binding pipe_wrap&#39;,\n        &#39;NativeModule internal/child_process&#39;,\n        &#39;NativeModule string_decoder&#39;,\n        &#39;NativeModule net&#39;,\n        &#39;NativeModule stream&#39;,\n        &#39;NativeModule internal/streams/legacy&#39;,\n        &#39;NativeModule _stream_readable&#39;,\n        &#39;NativeModule internal/streams/BufferList&#39;,\n        &#39;NativeModule internal/streams/destroy&#39;,\n        &#39;NativeModule _stream_writable&#39;,\n        &#39;NativeModule _stream_duplex&#39;,\n        &#39;NativeModule _stream_transform&#39;,\n        &#39;NativeModule _stream_passthrough&#39;,\n        &#39;NativeModule timers&#39;,\n        &#39;Binding timer_wrap&#39;,\n        &#39;NativeModule assert&#39;,\n        &#39;NativeModule internal/net&#39;,\n        &#39;Binding cares_wrap&#39;,\n        &#39;Binding tty_wrap&#39;,\n        &#39;Binding tcp_wrap&#39;,\n        &#39;Binding stream_wrap&#39;,\n        &#39;NativeModule dns&#39;,\n        &#39;NativeModule dgram&#39;,\n        &#39;Binding udp_wrap&#39;,\n        &#39;Binding process_wrap&#39;,\n        &#39;NativeModule internal/socket_list&#39;,\n        &#39;Binding spawn_sync&#39;,\n        &#39;NativeModule module&#39;,\n        &#39;NativeModule internal/module&#39;,\n        &#39;NativeModule internal/url&#39;,\n        &#39;NativeModule internal/querystring&#39;,\n        &#39;NativeModule querystring&#39;,\n        &#39;Binding url&#39;,\n        &#39;NativeModule vm&#39;,\n        &#39;NativeModule fs&#39;,\n        &#39;NativeModule path&#39;,\n        &#39;NativeModule internal/constants&#39;,\n        &#39;Binding fs&#39;,\n        &#39;Binding fs_event_wrap&#39;,\n        &#39;NativeModule internal/fs&#39;,\n        &#39;NativeModule internal/loader/Loader&#39;,\n        &#39;NativeModule internal/loader/ModuleMap&#39;,\n        &#39;NativeModule internal/loader/ModuleJob&#39;,\n        &#39;Internal Binding module_wrap&#39;,\n        &#39;NativeModule internal/safe_globals&#39;,\n        &#39;NativeModule internal/loader/DefaultResolve&#39;,\n        &#39;NativeModule url&#39;,\n        &#39;NativeModule internal/loader/CreateDynamicModule&#39;,\n        &#39;NativeModule internal/loader/Translators&#39;,\n        &#39;NativeModule console&#39; ],\n     _events: \n      { newListener: [Array],\n        removeListener: [Array],\n        warning: [Function],\n        internalMessage: [Function],\n        message: [Function: bound onMessage],\n        uncaughtException: [Function: bound onUncaughtException] },\n     _eventsCount: 6,\n     _maxListeners: undefined,\n     _fatalException: [Function],\n     domain: null,\n     _exiting: false,\n     assert: [Function],\n     config: { target_defaults: [Object], variables: [Object] },\n     setUncaughtExceptionCaptureCallback: [Function],\n     hasUncaughtExceptionCaptureCallback: [Function],\n     emitWarning: [Function],\n     nextTick: [Function: nextTick],\n     _tickCallback: [Function: _tickCallback],\n     stdin: [Getter],\n     openStdin: [Function],\n     exit: [Function],\n     kill: [Function],\n     _immediateCallback: [Function: processImmediate],\n     channel: Pipe { buffering: false, onread: [Function], sockets: [Object] },\n     _channel: [Getter/Setter],\n     _handleQueue: null,\n     _pendingMessage: null,\n     send: [Function],\n     _send: [Function],\n     connected: true,\n     disconnect: [Function],\n     _disconnect: [Function],\n     argv0: &#39;/Users/admin/.nvm/versions/node/v9.6.0/bin/node&#39;,\n     stdout: \n      Transform {\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 3,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _transformState: [Object],\n        _id: 20 },\n     stderr: \n      Transform {\n        _readableState: [ReadableState],\n        readable: true,\n        _events: [Object],\n        _eventsCount: 3,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: true,\n        allowHalfOpen: true,\n        _transformState: [Object],\n        _id: 20 } },\n  Buffer: \n   { [Function: Buffer]\n     poolSize: 8192,\n     from: [Function: from],\n     alloc: [Function: alloc],\n     allocUnsafe: [Function: allocUnsafe],\n     allocUnsafeSlow: [Function: allocUnsafeSlow],\n     isBuffer: [Function: isBuffer],\n     compare: [Function: compare],\n     isEncoding: [Function: isEncoding],\n     concat: [Function: concat],\n     byteLength: [Function: byteLength],\n     [Symbol(node.isEncoding)]: [Function: isEncoding] },\n  clearImmediate: [Function],\n  clearInterval: [Function],\n  clearTimeout: [Function],\n  setImmediate: { [Function: setImmediate] [Symbol(util.promisify.custom)]: [Function] },\n  setInterval: [Function],\n  setTimeout: { [Function: setTimeout] [Symbol(util.promisify.custom)]: [Function] },\n  __filename: &#39;[eval]&#39;,\n  exports: {},\n  module: \n   Module {\n     id: &#39;[eval]&#39;,\n     exports: {},\n     parent: undefined,\n     filename: &#39;/Users/admin/Study/FrontEnd/[eval]&#39;,\n     loaded: false,\n     children: [],\n     paths: \n      [ &#39;/Users/admin/Study/FrontEnd/node_modules&#39;,\n        &#39;/Users/admin/Study/node_modules&#39;,\n        &#39;/Users/admin/node_modules&#39;,\n        &#39;/Users/node_modules&#39;,\n        &#39;/node_modules&#39; ] },\n  __dirname: &#39;.&#39;,\n  require: \n   { [Function: require]\n     resolve: { [Function: resolve] paths: [Function: paths] },\n     main: undefined,\n     extensions: { &#39;.js&#39;: [Function], &#39;.json&#39;: [Function], &#39;.node&#39;: [Function] },\n     cache: {} },\n  &#39;$$mimer$$&#39;: [Function: defaultMimer],\n  &#39;$$done$$&#39;: [Function: bound bound done],\n  test: [Function: test],\n  foo: [Function: foo],\n  a: 1,\n  console: \n   Console {\n     log: [Function: bound log],\n     debug: [Function: bound log],\n     info: [Function: bound log],\n     dirxml: [Function: bound log],\n     warn: [Function: bound warn],\n     error: [Function: bound warn],\n     dir: [Function: bound dir],\n     time: [Function: bound time],\n     timeEnd: [Function: bound timeEnd],\n     trace: [Function: bound trace],\n     assert: [Function: bound assert],\n     clear: [Function: bound clear],\n     count: [Function: bound count],\n     countReset: [Function: bound countReset],\n     group: [Function: bound group],\n     groupCollapsed: [Function: bound group],\n     groupEnd: [Function: bound groupEnd],\n     Console: [Function: Console],\n     [Symbol(counts)]: Map {} },\n  &#39;$$&#39;: \n   { async: [Function: bound async],\n     done: [Function: bound done],\n     sendResult: [Function: bound ],\n     sendError: [Function: bound ],\n     mime: [Function: bound ],\n     text: [Function: bound ],\n     html: [Function: bound ],\n     svg: [Function: bound ],\n     png: [Function: bound ],\n     jpeg: [Function: bound ],\n     json: [Function: bound ],\n     input: [Function: bound input],\n     display: [Function: bound createDisplay] },\n  multiArrowFunc: [Function: multiArrowFunc] }\nundefined</code></pre></div>\n<p>首先箭头函数其实是没有 this 的，箭头函数中的 this 只取决包裹箭头函数的第一个普通函数的 this。在这个例子中，因为包裹箭头函数的第一个普通函数是 a，所以此时的 this 是 window。另外对箭头函数使用 bind 这类函数是无效的。</p>\n<h4>bind</h4>\n<p>对于 bind 函数来说，this 取决于第一个参数，如果第一个参数为空，那么就是 window\n如果对一个函数进行多次 bind，this 永远由第一次 bind 决定</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> bindObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'yck'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">bindFunc</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">bindFunc</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>bindObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// => 'yck'</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yck</code></pre></div>\n<p><img src=\"attachment:image.png\" alt=\"image.png\"></p>\n<h3>什么是闭包？</h3>\n<p>闭包存在的意义就是让我们可以间接访问函数内部的变量。</p>\n<h3>循环中使用闭包解决 <code class=\"language-text\">var</code> 定义函数的问题</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Timeout {\n  _called: false,\n  _idleTimeout: 5000,\n  _idlePrev: \n   TimersList {\n     _idleNext: [Circular],\n     _idlePrev: [Circular],\n     _unrefed: false,\n     msecs: 5000,\n     nextTick: false,\n     _timer: Timer { _list: [Circular] } },\n  _idleNext: \n   TimersList {\n     _idleNext: [Circular],\n     _idlePrev: [Circular],\n     _unrefed: false,\n     msecs: 5000,\n     nextTick: false,\n     _timer: Timer { _list: [Circular] } },\n  _idleStart: 25949,\n  _onTimeout: [Function],\n  _timerArgs: undefined,\n  _repeat: null,\n  _destroyed: false,\n  [Symbol(asyncId)]: 144,\n  [Symbol(triggerAsyncId)]: 133 }</code></pre></div>\n<p>setTimeout 是个异步函数，所以会先把循环全部执行完毕，这时候 i 就是 6 了\n解决办法有三种，第一种是使用闭包的方式</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">j</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>第二种就是使用 setTimeout 的第三个参数，这个参数会被当成 timer 函数的参数传入。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">j</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    i <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n    i\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Timeout {\n  _called: false,\n  _idleTimeout: 5000,\n  _idlePrev: \n   TimersList {\n     _idleNext: [Circular],\n     _idlePrev: \n      Timeout {\n        _called: false,\n        _idleTimeout: 5000,\n        _idlePrev: [Timeout],\n        _idleNext: [Circular],\n        _idleStart: 25949,\n        _onTimeout: [Function],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(asyncId)]: 144,\n        [Symbol(triggerAsyncId)]: 133 },\n     _unrefed: false,\n     msecs: 5000,\n     nextTick: false,\n     _timer: Timer { _list: [Circular] } },\n  _idleNext: \n   Timeout {\n     _called: false,\n     _idleTimeout: 5000,\n     _idlePrev: [Circular],\n     _idleNext: \n      Timeout {\n        _called: false,\n        _idleTimeout: 5000,\n        _idlePrev: [Circular],\n        _idleNext: [TimersList],\n        _idleStart: 25949,\n        _onTimeout: [Function],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(asyncId)]: 144,\n        [Symbol(triggerAsyncId)]: 133 },\n     _idleStart: 25952,\n     _onTimeout: [Function: timer],\n     _timerArgs: undefined,\n     _repeat: null,\n     _destroyed: false,\n     [Symbol(asyncId)]: 155,\n     [Symbol(triggerAsyncId)]: 148 },\n  _idleStart: 25953,\n  _onTimeout: [Function: timer],\n  _timerArgs: [ 5 ],\n  _repeat: null,\n  _destroyed: false,\n  [Symbol(asyncId)]: 165,\n  [Symbol(triggerAsyncId)]: 158 }</code></pre></div>\n<p>第三种就是使用 let 定义 i 了来解决问题了，这个也是最为推荐的方式</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Timeout {\n  _called: false,\n  _idleTimeout: 5000,\n  _idlePrev: \n   TimersList {\n     _idleNext: [Circular],\n     _idlePrev: \n      Timeout {\n        _called: false,\n        _idleTimeout: 5000,\n        _idlePrev: [Timeout],\n        _idleNext: [Circular],\n        _idleStart: 25949,\n        _onTimeout: [Function],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(asyncId)]: 144,\n        [Symbol(triggerAsyncId)]: 133 },\n     _unrefed: false,\n     msecs: 5000,\n     nextTick: false,\n     _timer: Timer { _list: [Circular] } },\n  _idleNext: \n   Timeout {\n     _called: false,\n     _idleTimeout: 5000,\n     _idlePrev: [Circular],\n     _idleNext: \n      Timeout {\n        _called: false,\n        _idleTimeout: 5000,\n        _idlePrev: [Circular],\n        _idleNext: [Timeout],\n        _idleStart: 25952,\n        _onTimeout: [Function: timer],\n        _timerArgs: undefined,\n        _repeat: null,\n        _destroyed: false,\n        [Symbol(asyncId)]: 155,\n        [Symbol(triggerAsyncId)]: 148 },\n     _idleStart: 25953,\n     _onTimeout: [Function: timer],\n     _timerArgs: [ 5 ],\n     _repeat: null,\n     _destroyed: false,\n     [Symbol(asyncId)]: 165,\n     [Symbol(triggerAsyncId)]: 158 },\n  _idleStart: 25955,\n  _onTimeout: [Function: timer],\n  _timerArgs: undefined,\n  _repeat: null,\n  _destroyed: false,\n  [Symbol(asyncId)]: 175,\n  [Symbol(triggerAsyncId)]: 168 }\n\n\n\n6\n1\n1\n1\n6\n2\n2\n2\n6\n3\n3\n3\n6\n4\n4\n4\n6\n5\n5\n5</code></pre></div>","frontmatter":{"date":"February 18, 2019","path":"javascript-foundation","category":"frontend","title":"JavaScript 基础知识"}}},"pageContext":{"location":"javascript-foundation","category":"frontend"}}