{"data":{"markdownRemark":{"html":"<h3>What is Caching</h3>\n<p>Caching is the concept of intelligently storing commonly-used data in quick-to-access locations so that requesting that data will happen as fast as possible. There are multiple types of caches out there such as CPU cache, GPU cache, disc cache, etc. </p>\n<p>When a requested resource is found in cache, it’s called a <strong>cache hit</strong>. Similarly, if a resource is not found in cache and had to be fully requested from its normal location, it’s called a <strong>cache miss</strong>.</p>\n<p>For the purposes of browser caching, each browser has its own web cache, which is where resources like images and other web page assets are stored for quick access later on. The goal of browser caching is to save you time when requesting the same resource multiple times, and to save bandwidth by reducing the amount of data you request over a network.</p>\n<h3>How Does the Browser Know What to Cache?</h3>\n<p>There are two modern HTTP response headers that define how a resource should be cached: Cache-Control and ETag.</p>\n<h4>Cache-Control</h4>\n<p>When your browser requests resources from a server the first time, it stores the returning resources in its cache according to this header. when your browser needs to request that resource again, it will check its cache to see if the resource is there and that it still fits the Cache-Control specs.</p>\n<p>The Cache-Control header has a couple different parameters that can be set from the server:</p>\n<p><code class=\"language-text\">no-cache</code> or <code class=\"language-text\">no-store</code>\nThis resource should always be requested from the server instead of automatically loaded from cache.</p>","frontmatter":{"date":"July 05, 2019","path":"browser-caching","category":"frontend","title":"Browser Caching"}}},"pageContext":{"location":"browser-caching","category":"frontend"}}