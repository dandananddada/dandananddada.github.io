{"data":{"markdownRemark":{"html":"<p>Sass是基于Ruby的css编译工具，可以通过Sass语法简化css代码的书写，对于大型的需要对css进行管理的项目而言更利于css的开发和管理。</p>\n<p> Sass有两种后缀名文件：一种后缀名为sass；另一种就是我们这里使用的scss文件，这种和我们平时写的css文件格式差不多，使用大括号包裹的。</p>\n<p>【1】文件导入</p>\n<p>导入Sass文件：<code class=\"language-text\">@improt &quot;a&quot;</code> , 导入Css文件 <code class=\"language-text\">@import &quot;reset.css&quot;</code>。\n需要注意的是导入Sass文件转译为css文件后是生成为一个css文件。</p>\n<p>【2】注释</p>\n<p>Sass有两种注释方式，一种是标准的css注释方式<code class=\"language-text\">/* */</code>，另一种则是<code class=\"language-text\">//</code>双斜杆形式的单行注释。\n需要注意的是单行注释不会被转译到css文件中。</p>\n<p>【3】变量</p>\n<p>在sass中你也可以声明变量，并在整个样式表中使用，sass支持任何变量（例如：颜色、数值、文本等）。</p>\n<p>sass声明变量必须是$开头，后面紧跟变量名，而变量值和变量名之间就需要使用冒号(:)分隔开。如果值后面加上!default则表示默认值。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$baseFontSize: 14px !default;\nfont-size: $baseFontSize;</code></pre></div>\n<p>一个变量可以包含多个值，然后通过<code class=\"language-text\">nth($variables,index)</code>来调用其中的某个值。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$linkColor: #08c #333 !default;//第一个值为默认值。\ncolor:nth($linkColor,1);</code></pre></div>\n<p>【4】嵌套</p>\n<p>Sass的嵌套包括两种：一种是选择器的嵌套；另一种是属性的嵌套。我们一般说起或用到的都是选择器的嵌套。</p>\n<p>选择器嵌套</p>\n<p>所谓选择器嵌套指的是在一个选择器中嵌套另一个选择器来实现继承，从而增加了sass文件的结构性和可读性。\n在选择器嵌套中，可以使用&#x26;表示父元素选择器。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#top_nav\n{\n    line-height: 40px;\n    background: $bgColor;\n    li\n    {\n        float:left;\n    }\n    a\n    {\n        display: block;\n        padding: 20px;\n        color: $mainColor;\n        $:hover\n        {\n            color:nth($linkColor,1);\n        }\n    }\n}</code></pre></div>\n<p>属性嵌套 </p>\n<p>所谓属性嵌套指的是有些属性拥有同一个开始单词，如<code class=\"language-text\">border-width</code>，<code class=\"language-text\">border-color</code>都是以border开头。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.fakeshadow\n{\n    border:\n    {\n        style:solid;\n        left: \n        {\n            width:2px;\n            color: #ccc;\n        }\n        right:\n        {\n            width: 2px;\n            color: #ccc;\n        }\n    }\n}</code></pre></div>\n<p>【5】混合</p>\n<p>mixin是sass中最强大的特性，他可以将一部分样式抽出，作为单独定义的模块，被很多选择器重复使用。</p>\n<p>在sass中声明一个mixins时需要使用<code class=\"language-text\">@mixin</code>，然后后面紧跟mixins的名，他也可以定义参数，同时可以给这个参数设置一个默认值，但参数名是使用<code class=\"language-text\">$</code>符号开始，而且和参数值之间需要使用冒号<code class=\"language-text\">：</code>分开，多个参数以逗号分开。</p>\n<p>这里又有另外一种情况，那就是如果一个属性值可以有多个值，如<code class=\"language-text\">box-shadow</code>和<code class=\"language-text\">transition</code>等，那么我们的参数就可以用变量名加三个点表示，如<code class=\"language-text\">$variables...</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"sass\"><pre class=\"language-sass\"><code class=\"language-sass\"><span class=\"token comment\">//声明mixins</span>\n<span class=\"token atrule-line\"><span class=\"token atrule\">@mixin</span> opacity($opacity: 50)</span>\n<span class=\"token selector\">{</span>\n    <span class=\"token comment\">//注意sass运算符前后必须加空格</span>\n<span class=\"token property-line\">    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$opacity</span> <span class=\"token operator\">/</span> 100;</span>\n<span class=\"token property-line\">    <span class=\"token property\">filter</span><span class=\"token punctuation\">:</span><span class=\"token property\">alpha(opacity=$opacity);</span></span>\n<span class=\"token selector\">}</span>\n<span class=\"token atrule-line\"><span class=\"token atrule\">@mixin</span> box-shadow($shadow...)</span>\n<span class=\"token selector\">{</span>\n<span class=\"token property-line\">    <span class=\"token property\">-moz-box-shadow</span><span class=\"token punctuation\">:</span><span class=\"token property\">$shadow;</span></span>\n<span class=\"token property-line\">    <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$shadow</span>;</span>\n<span class=\"token selector\">}</span>\n\n<span class=\"token comment\">//调用mixins</span>\n<span class=\"token selector\">.opacity</span>\n<span class=\"token selector\">{</span>\n<span class=\"token atrule-line\">    <span class=\"token atrule\">@include</span> opacity;</span>\n<span class=\"token selector\">}</span>\n<span class=\"token selector\">.opacity-80</span>\n<span class=\"token selector\">{</span>\n<span class=\"token atrule-line\">    <span class=\"token atrule\">@include</span> opacity(80);</span>\n<span class=\"token selector\">}</span>\n<span class=\"token selector\">.box</span>\n<span class=\"token selector\">{</span>\n<span class=\"token atrule-line\">    <span class=\"token atrule\">@include</span> box-shadow(0 5px 5px rgba(0,0,0,0.3));</span>\n<span class=\"token property-line\">    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span><span class=\"token property\">1px</span> solid #ccc;</span>\n<span class=\"token selector\">}</span></code></pre></div>\n<p>【6】继承</p>\n<p>继承通过@extend方法实现选择器的多个定义。</p>\n<div class=\"gatsby-highlight\" data-language=\"sass\"><pre class=\"language-sass\"><code class=\"language-sass\"><span class=\"token selector\">h1</span>\n<span class=\"token selector\">{</span>\n<span class=\"token property-line\">    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 4px solid #ff9aa9;</span>\n<span class=\"token selector\">}</span>\n<span class=\"token selector\">.speaker</span>\n<span class=\"token selector\">{</span>\n<span class=\"token atrule-line\">    <span class=\"token atrule\">@extend</span> h1;</span>\n<span class=\"token property-line\">    <span class=\"token property\">border-width</span><span class=\"token punctuation\">:</span> 2px;</span>\n<span class=\"token selector\">}</span></code></pre></div>\n<p>【7】运算</p>\n<p>Sass具有运算的特性，可以对数值型的Value(如：数字、颜色、变量等)进行加减乘除四则运算。请注意运算符前后请留一个空格，不然会出错。</p>\n<p>【8】函数</p>\n<p>函数声明</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">@function pxToRem($px)\n{\n    @return $px / $baseFontSize * 1rem;\n}\n\n    函数调用\n\n.function\n{\n    font-size: pxToRem(16px);\n}</code></pre></div>\n<p>【9】变量范围</p>\n<p>变量范围涉及全局变量和局部变量，全局变量会被局部变量覆盖，局部变量无法在全局内调用。</p>\n<p>【10】条件判断</p>\n<p>if可一个条件单独使用，也可以和<code class=\"language-text\">@else</code>结合多条件使用</p>\n<p>for循环有两种形式，分别为<code class=\"language-text\">：@for $var from through</code>和<code class=\"language-text\">@for $var from to</code></p>\n<p>【附录】参考w3cplus网站学习</p>\n<p><a href=\"http://www.w3cplus.com/sassguide/index.html\">w3cplus</a></p>","frontmatter":{"date":"November 05, 2014","path":"/sass","title":"sass"}}},"pageContext":{}}