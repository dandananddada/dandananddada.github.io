{"data":{"markdownRemark":{"html":"<h3>2017.06</h3>\n<h4>美团，前端</h4>\n<p>在职美团期间，组织变动频繁，先后负责了 B端项目、H5项目及 MRN项目</p>\n<ul>\n<li>\n<h5>地推及创新业务</h5>\n<p>地推、创新业务组主要负责浏览器端项目开发，使用技术栈为 <code class=\"language-text\">vue.js</code>，涉及工作内容以管理系统的增删改查为主，技术上难度低，在此不详细列举。</p>\n</li>\n</ul>\n<ul>\n<li>\n<h5>接送机项目</h5>\n<p>主R，基于 <code class=\"language-text\">Webpack 3 + vue.js</code> 构建项目，组件库依赖于内部组件库 <code class=\"language-text\">timoo</code>。</p>\n<p>接送机项目为交叉业务，也是第一次接手的C端项目，开发周期约一个月左右，项目中引入了一些新的设计思路，如组件、控件功能拆分、模型类传输类划分，同时采用了 <code class=\"language-text\">SMACSS</code> 的架构方式来管理样式表。</p>\n<p>项目因业务整合调整，在开发后期无疾而终，个人也因此从B端业务组转入C端业务组。项目中重新认识了前端项目的边界，除了基本的功能实现外，在安全防范、监控报警、数据埋点、性能指标等基础服务方面也有了新的认识。</p>\n</li>\n</ul>\n<ul>\n<li>\n<h5>自驾游项目</h5>\n<p>主R，基于现有工程开发（Webpack3 + vue.js），负责地图导航页，基于腾讯地图及其火星坐标系开发，主要功能涉及到线路、POI点、介绍TAB，三个关键信息的展示、切换和联动交互。</p>\n<p>项目尝试使用新的方式引流 POI，但上线后收益较差，产品策略一个月后下线。</p>\n</li>\n</ul>\n<ul>\n<li>\n<h5>景点信息流</h5>\n<p>协助开发，基于现有工程开发（Webpack3 + vue.js），负责首页开发，基于 flex 布局，采用双列形式实现瀑布流。</p>\n<p>产品设计参照点评 APP 首页瀑布流方式构建信息流，尝试以信息流的方式引流 POI，上线后访问量一般，目前在景点门票首页投放信息流入口，观察引流效果。</p>\n</li>\n</ul>\n<ul>\n<li>\n<h5>景点门票首页</h5>\n<p>景点门票首页II、III期改版优化。景点门票目前用户异地占比远高于本地，但引流率远低于本地，II、III期改版主要针对运营位投放信息流、甄榜等模块，尝试异地引流，观察引流效果。\n两期改版主要涉及到景点门票首页部分模块的替换，以及筛选项的优化，导航头的简化等，C端交互逻辑较多。</p>\n</li>\n</ul>\n<ul>\n<li>\n<h5>景点门票首页、周边游首页 MRN 化</h5>\n<p>景点门票首页，主R、18 年中旬，部门内开始动态化能力建设，部分客户端、前端项目 MRN 化，以减少包大小，以增强跟版、发版能力，同时磨平双端开发成本，提升H5体验，提效Native开发为目的。</p>\n<p>景点门票首页作为重点页面，第一批参与到 MRN 动态化迁移项目中，基于 MRN 全量重写景点门票首页，同时作为使用方反推 MRN 团队优化改进基础建设。</p>\n<p>周边游首页，协助开发，18 年底，周边游首页进行 MRN 化，协助部分模块开发及 BUG 修复。</p>\n<p><strong>景点门票 MRN 性能优化</strong>，针对页面加载（数据缓存、懒加载、布局优化、渲染合并/优化）、性能体验（骨架屏、导航交互优化）、包大小（图片压缩、去依赖、分包）几个方面进行优化，其中页面加载时间减少 60% 左右，包大小从 400K 降至 270K 左右。</p>\n</li>\n</ul>\n<ul>\n<li>\n<h5>POI 详情页、填单页 MRN 化</h5>\n<p>协助，19 年，MRN 化沁入主流程，度假业务以 POI 详情页、填单页两个页面为重点页面进行主流程改造，其中 POI 详情页负责货架模块开发，填单页负责二次退订确认模块开发。</p>\n</li>\n</ul>\n<ul>\n<li>\n<h5>技术项目</h5>\n<p><strong>体验指标</strong>，目前主要用于衡量前端页面质量的指标为性能指标，性能指标标示出了页面的加载、渲染情况，但页面完全加载并不代表可交互，因此针对性能指标以谷歌 lighthouse 方案为参考，补足 FCP、FMP、SI、PSI 几项指标，分别标明首次内容加载时间，主体内容加载时间及页面加载渐近变化、抖动情况，作为体验指标用于另一唯独衡量页面性能。</p>\n<p>项目初衷希望满足竞对嗅探能力（涵盖H5页面、Native页面），因此不能立足于前端白盒方式实现，调研后决定采用<strong>视频序列化 + 图片对比分析</strong>的方式实现，鉴于 <code class=\"language-text\">Python</code> 在图像处理和数据分析方面有足够的积累和沉淀，整个项目以 <code class=\"language-text\">Node</code> 作用户接口，通过 <code class=\"language-text\">sapwn</code> 方式调用 <code class=\"language-text\">Python</code> 函数，主体算法（视频序列化、图片对比分析、SI 计算实现）由 <code class=\"language-text\">Python</code> 实现，用户输入、数据汇总、加权求值（采用两套加权求值方案，一套基于线性占比，一套基于对数正态分布）、数据存储和报告生成这些部分由 <code class=\"language-text\">Node</code> 实现。</p>\n<br>\n<p><strong>B端提效</strong>，主要参考 <code class=\"language-text\">Rails Scaffold</code>，针对模板化的功能页面制定代码规范及约束，通过一些列命令及参数自动生成模板文件，减少代码重复书写或复制粘贴的情况，其中整套生成脚本参考 <code class=\"language-text\">Rails</code> 设计，以 MVC 模式划分为模型文件、状态文件和视图文件，针对模型文件内置了一些列的验证规则（使用设计上参考 Clojure vaild库，以数组方式配置），同时参考了 <code class=\"language-text\">Rails</code> 路由表相关设计，对 <code class=\"language-text\">vue-router</code> 进行封装，简化路由配置。</p>\n<br>\n<p><strong>工作流</strong>，业余时间产出，主要针对 H5 开发常涉及到的——代理、泳道、mock配置——新人接入成本高，口耳相传，工具繁琐，本地维护，没有统一管理等问题。\n采用 <code class=\"language-text\">express + middleware</code> 开发集成了一套工具，主要功能涵盖：本地 HTTP(s) 代理转发、数据 mock（基于mock.js）、mock 数据转化、项目文件管理、小工具（二维码生成、会议室抢订等功能）。</p>\n</li>\n</ul>\n<h3>2015.09</h3>\n<h4>网易传媒，前端</h4>\n<ul>\n<li>\n<h5>跟贴-前后端分离</h5>\n<p>负责网易跟贴前后端分离项目部分模块开发，网易跟贴已有 16 年之久，早期跟贴由后端渲染直出，该项目顺应前后端分离大趋势，将 <code class=\"language-text\">JSP</code> 模板变量直出渲染的方式替换为 <code class=\"language-text\">Ajax + Web API</code> 的形式。\n主要负责 用户区、盖楼逻辑、底部广告位等模块的分离，技术上仍旧依托于原跟贴技术方案： <code class=\"language-text\">jQuery</code>。</p>\n</li>\n</ul>\n<ul>\n<li>\n<h5>云跟贴</h5>\n<p>云跟贴产品，网易跟贴本身质量在业界相对高优，依托于跟贴数据的积累，顺应云服务的大环境，云跟贴定位为信息共享、互通的评论系统，对标多说（2017年关闭）和搜狐畅言。</p>\n<p>主要负责门户首页、站长管理平台、内部运营系统及各 CMS 系统插件开发。</p>\n<p>其中<strong>站长管理平台</strong>采用内部框架 <code class=\"language-text\">Bowlder</code> （参照 AngularJS 设计理念实现的轻量级前端框架）实现，主要涉及到站点注册、文章联通、评论联通、评论管理、皮肤设置、管理员预览等功能。</p>\n<p><strong>内部运营系统</strong>采用<code class=\"language-text\">jQuery + Semantic UI</code>实现，主要涉及到用户管理、文章管理、评论管理、数据联通管理、系统管理等功能。至于 CMS 插件模块主要因为有基于 PHP 构建CMS系统的经验，因此应部分个人站长需求，接入支持了主流的 CMS 系统如：织梦、帝国、WordPress、PHPCMS。 </p>\n<p>云跟贴项目于 17 年 4 月停止迭代，8 月下线。</p>\n</li>\n<li>\n<h5>数据系统</h5>\n<p>后组织变动，前端大组技术栈转向 <code class=\"language-text\">vue.js</code>，这期间主要协助数据系统部分模块开发，因从事内容不多且趋于增删改查，故不详细列举。</p>\n</li>\n</ul>\n<h3>2014.07</h3>\n<h4>Neightbor System，全栈</h4>\n<ul>\n<li>\n<h5>韩国统计局项目 - Map SDK 引导页</h5>\n<p>主导韩国统计局项目地图模块 SDK 引导页部分开发，前端部分三人团队，主要使用技术 <code class=\"language-text\">SpringMVC+MyBatis+jQuery EasyUI</code>。 </p>\n</li>\n<li>\n<h5>威海乐天·韩乐坊景区官方网站构建</h5>\n<p>负责项目开发的设计、管理、实现，项目团队三人，负责后端 CMS 系统开发，使用语言 <code class=\"language-text\">PHP</code> 及技术框架 <code class=\"language-text\">Laravel 4.1</code>，数据库 <code class=\"language-text\">MySQL</code>，服务容器 <code class=\"language-text\">nginx</code>，阿里云服务器。\n项目主要包括韩乐坊景区介绍、韩文化介绍、中韩文双语支持及新闻、公告系统。</p>\n</li>\n<li>\n<h5>CMS 新闻发布系统</h5>\n<p>基于 <code class=\"language-text\">Rails 4.2</code> 构建新闻发布系统，主要功能涵盖文章、图片、图集、目录、友情链接、留言、回收站、用户权限等管理模块及站点统计功能。\n<a href=\"https://github.com/dandananddada/CrowCMS\">GitHub 地址</a> </p>\n</li>\n<li>\n<h5>免费网（兼职）</h5>\n<p>经朋友介绍，免费网项目理念以资源共享为主，主要通过旧物换新，二次加工的形式实现盈利，初期通过回收旧衣服换取话费、电影票、超市充值卡、运费服务等形式拉取用户及资源，后对旧衣进行加工、翻新处理实现盈利。</p>\n<p>项目功能主要设计到基本的发布系统功能外，额外定制了运费计算功能、短信服务、用户模块、验证核销模块、购物券/电影票兑换等功能。</p>\n<p>项目整体使用 <code class=\"language-text\">PHP Laravel 4.2</code> 实现，服务、备案全部依托于阿里云，目前服务到期已经下线。</p>\n<p><a href=\"http://www.mfwvip.com/\">免费网（已下线）</a></p>\n</li>\n</ul>","frontmatter":{"date":"April 24, 2019","path":"introduce","category":"hide","title":"项目经历"}}},"pageContext":{"location":"introduce","category":"hide"}}