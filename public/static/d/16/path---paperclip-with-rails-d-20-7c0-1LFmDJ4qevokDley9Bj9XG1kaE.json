{"data":{"markdownRemark":{"html":"<p>rails本身文件/图片上传的函数是很方便快捷的，但是很多情况下我们可能需要对上传的图片进行必要的操作，比如对图像resize、限制格式、大小等。\n这里介绍一个常用的第三方插件paperclip。</p>\n<p>【1】install paperclip</p>\n<p>在Gemfile中配置paperclip插件</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gem &#39;paperclip&#39;</code></pre></div>\n<p>然后执行命令\n<code class=\"language-text\">$ bundle install</code>\n这样paperclip就安装成功了。</p>\n<p>【2】Add column to your table</p>\n<p>paperclip会在你需要图片支持的模块所对应的数据库表中添加四个字段，这个时候你需要在命令行中执行命令创建这个migration。\n假设我们在user表中添加一个avatar属性用来存用户图像，那么命令如下:\n<code class=\"language-text\">$ rails g paperclip user avatar</code>\n观察migration文件会有这么一段代码</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token function\">up</span></span>\n  change_table <span class=\"token symbol\">:users</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>t<span class=\"token operator\">|</span>\n    t<span class=\"token punctuation\">.</span>attachment <span class=\"token symbol\">:avatar</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>命令行migrate数据库\n<code class=\"language-text\">$rake db:migrate</code>\npaperclip会在users表中添加如下四个字段：\n\navatar<em>file</em>name（图片名称）、avatar<em>content</em>type（图片类型）、avatar<em>file</em>size（图片大小）、avatar<em>updated</em>at（图片更新日期）</p>\n<p>在app/models/user.rb下添加属性</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n\thas_attached_file <span class=\"token symbol\">:avatar</span><span class=\"token punctuation\">,</span> \n\t\t\tstyles<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> small<span class=\"token punctuation\">:</span> <span class=\"token string\">\"150x150>\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t\turl<span class=\"token punctuation\">:</span> <span class=\"token string\">\"/uploads/articles/:id/:style/:basename.:extension\"</span><span class=\"token punctuation\">,</span>\n\t\t\tpath<span class=\"token punctuation\">:</span> <span class=\"token string\">\":rails_root/public/uploads/articles/:id/:style/:basename.:extension\"</span>\n\tvalidates_attachment <span class=\"token symbol\">:avatar</span><span class=\"token punctuation\">,</span> content_type<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> content_type<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"image/jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"image/jpeg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"image/png\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"image/gif\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>其中has<em>attached</em>file用来配置图片缩放尺寸、逻辑存储路径、物理存储路径。validates_attachment用来配置上传图片的类型、大小等，更多配置可以参考github</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://github.com/thoughtbot/paperclip</code></pre></div>\n<p>【3】final work</p>\n<p>剩下的就是在views和controller中做一些必要的代码处理了。\n在app/views/users/<em>form.html.erb中做如下修改。\n因为涉及文件上传，所以要修改表单属性，设置<code class=\"language-text\">enctype=&quot;multipart/form-data&quot;。</code>\n{% highlight ruby %}\n&#x3C;%= form</em>for(@user, html: { multipart: true }) do |f| %>\n{% endhighlight %}\n添加<code class=\"language-text\">&lt;input type=&quot;file&quot; /&gt;</code>节点。名称为User中的属性avatar。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;%= f.file_field :avatar %&gt;</code></pre></div>\n<p>最后在app/controllers/users_controller.rb中设置通过avatar字段的验证</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> params.require(:user).permit(:username, :age, :avatar)</code></pre></div>\n<p>这样paperclip就会自动维护数据中的四个字段，并且在配置的目录存储图片。\n当你需要显示图片的时候在app/views/users/show.html.erb中添加如下代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;%= image_tag @user.photo.url(:small) %&gt;</code></pre></div>\n<p>其中:small是你在models中配置的一种图片尺寸，你也可以配置多种，或者直接通过<code class=\"language-text\">image_tag @message.photo.url</code>显示原尺寸的图片。\n最后这里说一点，paperclip本身图片的处理功能是借助ImageMagick实现的，所以你需要安装ImageMagick。\nMac下命令：<code class=\"language-text\">$ brew install ImageMagick</code>\nLinux下命令：<code class=\"language-text\">$ apt-get install ImageMagick</code></p>","frontmatter":{"date":"February 01, 2015","path":"/paperclip-with-rails","title":"Paperclip with Rails"}}},"pageContext":{}}