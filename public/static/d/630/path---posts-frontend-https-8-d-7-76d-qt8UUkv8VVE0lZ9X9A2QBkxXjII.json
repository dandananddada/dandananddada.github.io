{"data":{"markdownRemark":{"html":"<h3>What is https</h3>\n<p>HTTPS stands for Hyper Text Transfer Protocol Secure. It is a protocol for securing the communication between two systems e.g. the browser and the web server.</p>\n<p>HTTPS established an encrypted link between the browser and the web server using the Secure Socket Layer (SSL) or Transport Layer Security (TLS) protocols. TLS is the new version of SSL.</p>\n<h3>How SSL works</h3>\n<p>SSL fundamentally works with the following concepts:</p>\n<ul>\n<li>Asymmetric Cryptography</li>\n<li>Symmetric Cryptography</li>\n</ul>\n<h4>Asymmetric Cryptography</h4>\n<p>Asymmetric cryptography uses a mathematically-related key pair to encrypt and decrypt data. In a key pair, one key is shared with anyone who is interested in a communication. This is called Public Key. The other key in the key pair is kept secret and is called Private Key.</p>\n<p><img src=\"https://www.tutorialsteacher.com/Content/images/https/asymmetric-cryptography.png\" alt=\"不对称加密\"></p>\n<p>SSL uses asymmetric cryptography to initiate the communication which is known as SSL handshake. Most commonly used asymmetric key encryption algorithms.</p>\n<h4>Symmetric Cryptography</h4>\n<p>In the symmetric cryptography, there is only one key which encrypts and decrypts the data. Both sender and receiver should have this key, which is only known to them.</p>\n<p><img src=\"https://www.tutorialsteacher.com/Content/images/https/symmetric-cryptography.png\" alt=\"对称加密\"></p>\n<p>SSL uses symmetric cryptography using the session key after the initial handshake is done. The most widely used symmetric algorithms are AES-128, AES-192 and AES-256.</p>\n<h4>Data Transfer over SSL</h4>\n<p>SSL protocol uses asymmetric and symmetric cryptography to transfer data securely, which is mainly divided into two steps: the <strong>SSL handshake</strong> and the <strong>actual data transfer</strong>.</p>\n<h5>SSL handshake</h5>\n<p>The SSL handshake is an asymmetric cryptography which allows the browser to verify the web server, get the public key and establish a secure connection before the beginning of the actual data transfer.</p>\n<p><img src=\"https://www.tutorialsteacher.com/Content/images/https/ssl-handshack.png\" alt=\"SSL Handshake\"></p>\n<ol>\n<li>\n<p>The client sends a \"client hello\" message. This includes the client's SSL version number, cipher settings, session-specific data and other information that the server needs to communicate with the client using SSL.</p>\n</li>\n<li>\n<p>The server responds with a \"server hello\" message. This includes the server's SSL version number, cipher settings, session-specific data, an SSL certificate with a <strong>public key</strong> and other information that the client needs to communicate with the server over SSL.</p>\n</li>\n<li>\n<p>The client verifies the server's SSL certificate from CA (Certificate Authority) and authenticates the server. If the authentication fails, then the client refuses the SSL connection and throws an exception. If the authentication next.</p>\n</li>\n<li>\n<p>The client creates a session key, encrypts it with the server's public key and sends it to the server.</p>\n</li>\n<li>\n<p>The server decrypts the session key with its private key and sends the acknowledgement to the client encrypted with the session key.</p>\n</li>\n</ol>","frontmatter":{"date":"May 17, 2019","path":"https","category":"frontend","title":"Hypertext Transfer Protocol"}}},"pageContext":{"location":"https","category":"frontend"}}