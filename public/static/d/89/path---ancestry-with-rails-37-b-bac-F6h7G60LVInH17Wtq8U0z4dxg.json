{"data":{"markdownRemark":{"html":"<p>Rails本身提供了self-join方案，你可以采用此方法，然后查询全部，然后将数据解析为树。\n你也可以按照递归查询的方式追加数据然后返回。\n但是这里我采用第三方插件Ancestry。</p>\n<p>【1】Install Ancestry</p>\n<p>在Gemfile中配置Ancestry插件</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gem &#39;ancestry&#39;</code></pre></div>\n<p>然后执行命令\n<code class=\"language-text\">$ bundle install</code>\n这样Ancestry插件就安装成功了。</p>\n<p>【2】Add column to your table</p>\n<p>接下来你需要向自关联的表中加入Ancestry自动维护的字段，假设这里我们用的表名是messages\n<code class=\"language-text\">$ rails g migration add_ancestry_to_messages ancestry:string</code>\n这是Rails会自动创建一个migration文件，在migration文件中添加add_index</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">add_index :messages, :ancestry</code></pre></div>\n<p>最终代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">AddAncestryToMessage</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Migration</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">change</span></span>\n    add_column <span class=\"token symbol\">:messages</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:ancestry</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:string</span>\n    add_index <span class=\"token symbol\">:messages</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:ancestry</span>\n  <span class=\"token keyword\">end</span> \n<span class=\"token keyword\">end</span></code></pre></div>\n<p>执行命令迁移数据库\n<code class=\"language-text\">$ rake db:migrate</code>\n同时在models中添加has_ancestry</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Message</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n\thas_ancestry\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>【3】Final Work</p>\n<p>剩下的就是在views和controller中做一些必要的代码处理了。\n以新建一个回复作为例子说明，首先在列表页添加回复按钮，传递参数名称为parent_id</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token operator\">&lt;</span><span class=\"token string\">%= link_to 'Reply', new_message_path(:parent_id =</span><span class=\"token operator\">></span> message<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span><span class=\"token operator\">></span></code></pre></div>\n<p>在messages<em>controller中接收parent</em>id并存储。</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">new</span></span>\n    <span class=\"token variable\">@message</span> <span class=\"token operator\">=</span> <span class=\"token constant\">Message</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token symbol\">:parent_id</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:parent_id</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>同时这里需要说明一下，messages表中本身不存在parten<em>id字段，Ancestry插件本身会对parent</em>id进行维护并对messages表中ancestry字段进行存储修改。但是Rails保护机制中permit字段还是设置为parent_id</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">message_params</span></span>\n  params<span class=\"token punctuation\">.</span><span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token symbol\">:message</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>permit<span class=\"token punctuation\">(</span><span class=\"token symbol\">:title</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:content</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:parent_id</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>   </code></pre></div>\n<p>因为new方法中需要一个parent<em>id参数，在新增message时也需要这个参数，所以要再</em>form页面中添加一个隐藏字段</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>hidden_field <span class=\"token symbol\">:parent_id</span> <span class=\"token operator\">%</span><span class=\"token operator\">></span></code></pre></div>\n<p>这样我们在index页面传递参数到new页面，并将参数以隐藏表单的方式传递给create方法，Ancestry会自动维护'parten-id' 这个字段并存储一个父及id们拼装而成的字符串到ancestry字段（比如：14/3/4）。\n这里还有一点，要为new页面显示parent-id所对应的信息内容，同时index页面有所有信息显示的列表，这样的话可以把信息部分抽象到一个_message页面。在这个页面中显示message实体的全部字段。然后对index和new页面进行一定调整。\nnew.html.erb中添加如下语句就可以显示其对应parten-id的信息。</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span><span class=\"token operator\">=</span> render <span class=\"token variable\">@message</span><span class=\"token punctuation\">.</span>parent <span class=\"token keyword\">if</span> <span class=\"token variable\">@message</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">%</span><span class=\"token operator\">></span></code></pre></div>\n<p>在index.html.erb中需要通过ancestry插件的提供的方法组织元素顺序，具体代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token operator\">&lt;</span><span class=\"token string\">%= nested_messages @messages.arrange(:order =</span><span class=\"token operator\">></span> <span class=\"token symbol\">:created_at</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span><span class=\"token operator\">></span></code></pre></div>\n<p>这里我们将nested_messages抽取出来定义在message.helper.rb中按nested顺序render到页面中，具体代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">module</span> <span class=\"token constant\">MessagesHelper</span>\n\t<span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">nested_messages</span></span><span class=\"token punctuation\">(</span>messages<span class=\"token punctuation\">)</span>\n\t\tmessages<span class=\"token punctuation\">.</span>map <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>message<span class=\"token punctuation\">,</span> sub_messages<span class=\"token operator\">|</span>\n\t\t\trender<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>content_tag<span class=\"token punctuation\">(</span><span class=\"token symbol\">:div</span><span class=\"token punctuation\">,</span> nested_messages<span class=\"token punctuation\">(</span>sub_messages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:style</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string\">\"margin-left:30px;\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">end</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">.</span>html_safe\n\t<span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>","frontmatter":{"date":"January 28, 2015","path":"/ancestry-with-rails","title":"Ancestry with Rails"}}},"pageContext":{}}