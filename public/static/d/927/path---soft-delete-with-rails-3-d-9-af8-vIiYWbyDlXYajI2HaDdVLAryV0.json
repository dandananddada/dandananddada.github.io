{"data":{"markdownRemark":{"html":"<p>有的时候我们在做项目的时候可能会需要软删除功能，也就是回收站机制，对于之前删除的数据可以统一在回收站进行处理恢复。Rails本身没有提供软删除的功能，所以我们需要依赖一个叫做paranoia的gems来实现该功能。</p>\n<p>【1】install paranoia</p>\n<p>在gemfile中配置paranoia插件</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\">#gemfile</span>\ngem <span class=\"token string\">\"paranoia\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"~> 2.0\"</span></code></pre></div>\n<p>执行命令安装插件\n<code class=\"language-text\">$ bundle install</code></p>\n<p>【2】run migration for your desired models</p>\n<p>运行如下命令向需要添加软删除功能的数据表添加删除时间字段\n<code class=\"language-text\">$ rails g migration AddDeleteAtToYourModel deleted_at:datetime:index</code>\nRails会生成如下migration文件</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">AddDeletedAtToYourModel</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Migration</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">change</span></span>\n    add_column <span class=\"token symbol\">:your_table</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:deleted_at</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:datetime</span>\n    add_index <span class=\"token symbol\">:your_table</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:deleted_at</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>通过如下命令修改数据表\n<code class=\"language-text\">$ rake db:migrate</code></p>\n<p>【3】usage</p>\n<p>在你需要实现软删除功能的model中添加如下语句：</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">YourModel</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActiveRecord</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n  <span class=\"token comment\">#for usage of softdelete</span>\n  acts_as_paranoid\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>这样当你再调用rails原生的destroy方法时，并不会直接将该id的记录从数据库中删除，而是设置该记录的删除时间为当前操作，你可以通过指定的方法显示全部删除的数据并恢复，恢复数据时paranoia会讲要恢复记录的删除时间置为空。同样针对删除的数据执行彻底删除方法时paranoia才会将这条数据从数据库移除。\n具体使用的函数如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\">#all records will be get.</span>\n<span class=\"token constant\">Model</span><span class=\"token punctuation\">.</span>with_deleted\n\n<span class=\"token comment\">#only deleted records will be get.</span>\n<span class=\"token constant\">Model</span><span class=\"token punctuation\">.</span>only_deleted\n\n<span class=\"token comment\">#restore specificity record by id.</span>\n<span class=\"token constant\">Model</span><span class=\"token punctuation\">.</span>restore<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#restore specificity records by id array.</span>\n<span class=\"token constant\">Model</span><span class=\"token punctuation\">.</span>restore<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>id1<span class=\"token punctuation\">,</span> id2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> idN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#destroy a record from database.</span>\nmodel <span class=\"token operator\">=</span> <span class=\"token constant\">Model</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\nmodel<span class=\"token punctuation\">.</span>really_destroy<span class=\"token operator\">!</span></code></pre></div>","frontmatter":{"date":"March 04, 2015","path":"/soft-delete-with-rails","title":"Soft delete with Rails"}}},"pageContext":{}}