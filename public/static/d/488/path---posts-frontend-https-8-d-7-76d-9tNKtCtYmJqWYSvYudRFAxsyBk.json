{"data":{"markdownRemark":{"html":"<h3>What is https</h3>\n<p>HTTPS stands for Hyper Text Transfer Protocol Secure. It is a protocol for securing the communication between two systems e.g. the browser and the web server.</p>\n<p>HTTPS established an encrypted link between the browser and the web server using the Secure Socket Layer (SSL) or Transport Layer Security (TLS) protocols. TLS is the new version of SSL.</p>\n<h3>How SSL works</h3>\n<p>SSL fundamentally works with the following concepts:</p>\n<ul>\n<li>Asymmetric Cryptography</li>\n<li>Symmetric Cryptography</li>\n</ul>\n<h4>Asymmetric Cryptography</h4>\n<p>Asymmetric cryptography uses a mathematically-related key pair to encrypt and decrypt data. In a key pair, one key is shared with anyone who is interested in a communication. This is called Public Key. The other key in the key pair is kept secret and is called Private Key.</p>\n<p><img src=\"https://www.tutorialsteacher.com/Content/images/https/asymmetric-cryptography.png\" alt=\"不对称加密\"></p>\n<p>SSL uses asymmetric cryptography to initiate the communication which is known as SSL handshake. Most commonly used asymmetric key encryption algorithms.</p>\n<h4>Symmetric Cryptography</h4>\n<p>In the symmetric cryptography, there is only one key which encrypts and decrypts the data. Both sender and receiver should have this key, which is only known to them.</p>\n<p><img src=\"https://www.tutorialsteacher.com/Content/images/https/symmetric-cryptography.png\" alt=\"对称加密\"></p>\n<p>SSL uses symmetric cryptography using the session key after the initial handshake is done. The most widely used symmetric algorithms are AES-128, AES-192 and AES-256.</p>\n<h4>Data Transfer over SSL</h4>\n<p>SSL protocol uses asymmetric and symmetric cryptography to transfer data securely, which is mainly divided into two steps: the <strong>SSL handshake</strong> and the <strong>actual data transfer</strong>.</p>\n<h5>SSL handshake</h5>\n<p>The SSL handshake is an asymmetric cryptography which allows the browser to verify the web server, get the public key and establish a secure connection before the beginning of the actual data transfer.</p>\n<p><img src=\"https://www.tutorialsteacher.com/Content/images/https/ssl-handshack.png\" alt=\"SSL Handshake\"></p>\n<ol>\n<li>\n<p>The client sends a \"client hello\" message. This includes the client's SSL version number, cipher settings, session-specific data and other information that the server needs to communicate with the client using SSL.</p>\n</li>\n<li>\n<p>The server responds with a \"server hello\" message. This includes the server's SSL version number, cipher settings, session-specific data, an <strong>SSL certificate</strong> with a <strong>public key</strong> and other information that the client needs to communicate with the server over SSL.</p>\n</li>\n<li>\n<p>The client verifies the server's SSL certificate from CA (Certificate Authority) and authenticates the server. If the authentication fails, then the client refuses the SSL connection and throws an exception. If the authentication next.</p>\n</li>\n<li>\n<p>The client creates a session key, encrypts it with the server's public key and sends it to the server.</p>\n</li>\n<li>\n<p>The server decrypts the session key with its private key and sends the acknowledgement to the client encrypted with the session key.</p>\n</li>\n</ol>\n<h5>Actual data transfer</h5>\n<p>The client and the server now use a shared session key to encrypt and decrypt actual data and transfer it.</p>\n<p><img src=\"https://www.tutorialsteacher.com/Content/images/https/ssl-data-transfer.png\" alt=\"Actual data transfer\"></p>\n<h3>What is the SSL Certificate?</h3>\n<p>The SSL certificate plays an important role in securing the communication between two systems.</p>\n<p>The SSL certificate contains the owner's public key and other details. The web server sends a public key to the browser through an SSL certificate and the browser verifies it and authenticates the web server using the SSL certificate.</p>\n<h4>Types of SSL Certificates</h4>\n<p>There are different types of SSL certificates available today based on the validation level and the number of domains they secure.</p>\n<h5>Types of SSL Certificates based on Validation Level</h5>\n<p><strong>Domain Validated Certificates</strong></p>\n<p>The Domain Validated (DV) certificate requires the lowest level validation because the main purpose of DV certificates is to make the secure communication between the domain's web server and browser. </p>\n<p><strong>Organization Validated Certificates</strong></p>\n<p>The Organization Validated (OV) certificate requires a medium level validation where CA checks the rights of an organization to use the domain and also the organization's information.</p>\n<p><strong>Extended Validated Certificates</strong></p>\n<p>The Extended Validated (EF) certificate requires a high-level validation where CA conducts rigorous background checks on the organization according to guidelines.</p>\n<h5>Types of SSL Certificates based on the Number of Domains they Secure</h5>\n<p><strong>Single Domain Certificate</strong></p>\n<p>The single domain certificate secures one fully qualified domain name.</p>\n<p><strong>Wildcard SSL Certificate</strong></p>\n<p>The wildcard SSL certificate secures an unlimited number of subdomains for a single domain.</p>\n<p><strong>Unified SSL Certificate /Multi-Domain SSL Certificate/SAN Certificate</strong></p>\n<p>The unified SSL certificate secures up to 100 domains using the same certificate with the help of the SAN extension. It is especially designed to secure Microsoft Exchange and Office Communication environments.</p>\n<h5>SSL Certificate Formats</h5>\n<p>An SSL Certificate is essentially an <strong>X.509</strong> certificate. X.509 is a standard that defines the structure of the certificate. It defines the data fields that should be included in the SSL certificate. X.509 uses a formal language called Abstract Syntax Notation One (ASN.1) to express the certificate's data structure.</p>\n<p>There are different formats of X.509 certificates such as PEM, DER, PKCS#7 and PKCS#12. PEM and PKCS#7 formats use Base64 ASCII encoding while DER and PKCS#12 use binary encoding. The certificate files have different extensions based on the format and encoding they use.</p>\n<p>The following figure illustrates the X.509 Certificate's encoding formats and file extensions.</p>\n<p><img src=\"https://www.tutorialsteacher.com/Content/images/https/ssl-certificate-format.png\" alt=\"SSL Certificate Format\"></p>\n<p>Most CAs (Certificate Authority) provide certificates in PEM format in Base64 ASCII encoded files. The certificate file types can be <code class=\"language-text\">.pem, .crt, .cer, or .key</code>.</p>","frontmatter":{"date":"May 17, 2019","path":"https","category":"frontend","title":"Hypertext Transfer Protocol"}}},"pageContext":{"location":"https","category":"frontend"}}