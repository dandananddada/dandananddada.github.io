{"expireTime":9007200917962570000,"key":"transformer-remark-markdown-ast-ed85323cfa09aa1288742ede5d92bdca-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"ArrayBuffer, binary arrays","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":30,"offset":30},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":30,"offset":30},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"ArrayBuffer","position":{"start":{"line":4,"column":5,"offset":36},"end":{"line":4,"column":16,"offset":47},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":32},"end":{"line":4,"column":16,"offset":47},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Binary data in JavaScript is implemented in a non-standard way, compared to other languages. But when we sort things out, everything becomes fairly simple.","position":{"start":{"line":6,"column":1,"offset":49},"end":{"line":6,"column":156,"offset":204},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":49},"end":{"line":6,"column":156,"offset":204},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The basic binary object is ArrayBuffer – a reference to a fixed-length contiguous memory area.","position":{"start":{"line":8,"column":1,"offset":206},"end":{"line":8,"column":95,"offset":300},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":206},"end":{"line":8,"column":95,"offset":300},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">.</span>byteLength<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":10,"column":1,"offset":302},"end":{"line":13,"column":4,"offset":383},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"ArrayBuffer is not an array of something","position":{"start":{"line":15,"column":1,"offset":385},"end":{"line":15,"column":41,"offset":425},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":385},"end":{"line":15,"column":41,"offset":425},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It has a fixed length, we can’t increase or decrease it.","position":{"start":{"line":17,"column":3,"offset":429},"end":{"line":17,"column":59,"offset":485},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":429},"end":{"line":17,"column":59,"offset":485},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":427},"end":{"line":17,"column":59,"offset":485},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It takes exactly that much space in the memory.","position":{"start":{"line":18,"column":3,"offset":488},"end":{"line":18,"column":50,"offset":535},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":488},"end":{"line":18,"column":50,"offset":535},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":486},"end":{"line":18,"column":50,"offset":535},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"To access individual bytes, another \"view\" object is needed, not ","position":{"start":{"line":19,"column":3,"offset":538},"end":{"line":19,"column":68,"offset":603},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">buffer[index]</code>","position":{"start":{"line":19,"column":68,"offset":603},"end":{"line":19,"column":83,"offset":618},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":19,"column":83,"offset":618},"end":{"line":19,"column":84,"offset":619},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":538},"end":{"line":19,"column":84,"offset":619},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":536},"end":{"line":19,"column":84,"offset":619},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":427},"end":{"line":19,"column":84,"offset":619},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To manipulate an ArrayBuffer, we need to use a \"view\" object.","position":{"start":{"line":21,"column":1,"offset":621},"end":{"line":21,"column":62,"offset":682},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":621},"end":{"line":21,"column":62,"offset":682},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A view object does not store anything on it’s own. It’s the \"eyeglasses\" that give an interpretation of the bytes stored in the ArrayBuffer.","position":{"start":{"line":23,"column":1,"offset":684},"end":{"line":23,"column":141,"offset":824},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":684},"end":{"line":23,"column":141,"offset":824},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Uint8Array","position":{"start":{"line":25,"column":5,"offset":830},"end":{"line":25,"column":15,"offset":840},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":828},"end":{"line":25,"column":17,"offset":842},"indent":[]}},{"type":"text","value":" – treats each byte in ArrayBuffer as a separate number, with possible values are from 0 to 255 (a byte is 8-bit, so it can hold only that much).","position":{"start":{"line":25,"column":17,"offset":842},"end":{"line":25,"column":162,"offset":987},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":828},"end":{"line":25,"column":162,"offset":987},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":826},"end":{"line":25,"column":162,"offset":987},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Uint16Array","position":{"start":{"line":26,"column":5,"offset":992},"end":{"line":26,"column":16,"offset":1003},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":990},"end":{"line":26,"column":18,"offset":1005},"indent":[]}},{"type":"text","value":" – treats every 2 bytes as an integer, with possible values from 0 to 65535.","position":{"start":{"line":26,"column":18,"offset":1005},"end":{"line":26,"column":94,"offset":1081},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":990},"end":{"line":26,"column":94,"offset":1081},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":988},"end":{"line":26,"column":94,"offset":1081},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Uint32Array","position":{"start":{"line":27,"column":5,"offset":1086},"end":{"line":27,"column":16,"offset":1097},"indent":[]}}],"position":{"start":{"line":27,"column":3,"offset":1084},"end":{"line":27,"column":18,"offset":1099},"indent":[]}},{"type":"text","value":" – treats every 4 bytes as an integer, with possible values from 0 to 4294967295.","position":{"start":{"line":27,"column":18,"offset":1099},"end":{"line":27,"column":99,"offset":1180},"indent":[]}}],"position":{"start":{"line":27,"column":3,"offset":1084},"end":{"line":27,"column":99,"offset":1180},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1082},"end":{"line":27,"column":99,"offset":1180},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Float64Array","position":{"start":{"line":28,"column":5,"offset":1185},"end":{"line":28,"column":17,"offset":1197},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":1183},"end":{"line":28,"column":19,"offset":1199},"indent":[]}},{"type":"text","value":" – treats every 8 bytes as a floating point number with possible values from 5.0x10","position":{"start":{"line":28,"column":19,"offset":1199},"end":{"line":28,"column":102,"offset":1282},"indent":[]}},{"type":"html","value":"<sup>","position":{"start":{"line":28,"column":102,"offset":1282},"end":{"line":28,"column":107,"offset":1287},"indent":[]}},{"type":"text","value":"-324","position":{"start":{"line":28,"column":107,"offset":1287},"end":{"line":28,"column":111,"offset":1291},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":28,"column":111,"offset":1291},"end":{"line":28,"column":117,"offset":1297},"indent":[]}},{"type":"text","value":" to 1.8x10","position":{"start":{"line":28,"column":117,"offset":1297},"end":{"line":28,"column":127,"offset":1307},"indent":[]}},{"type":"html","value":"<sup>","position":{"start":{"line":28,"column":127,"offset":1307},"end":{"line":28,"column":132,"offset":1312},"indent":[]}},{"type":"text","value":"308","position":{"start":{"line":28,"column":132,"offset":1312},"end":{"line":28,"column":135,"offset":1315},"indent":[]}},{"type":"html","value":"</sup>","position":{"start":{"line":28,"column":135,"offset":1315},"end":{"line":28,"column":141,"offset":1321},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":28,"column":141,"offset":1321},"end":{"line":28,"column":142,"offset":1322},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":1183},"end":{"line":28,"column":142,"offset":1322},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1181},"end":{"line":28,"column":142,"offset":1322},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":826},"end":{"line":28,"column":142,"offset":1322},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"So, the binary data in an ArrayBuffer of 16 bytes can be interpreted as 16 \"tiny numbers\", or 8 bigger numbers (2 bytes each), or 4 even bigger (4 bytes each), or 2 floating-point values with high precision (8 bytes each).","position":{"start":{"line":30,"column":1,"offset":1324},"end":{"line":30,"column":223,"offset":1546},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1324},"end":{"line":30,"column":223,"offset":1546},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://javascript.info/article/arraybuffer-binary-arrays/arraybuffer-views@2x.png","alt":null,"position":{"start":{"line":32,"column":1,"offset":1548},"end":{"line":32,"column":88,"offset":1635},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1548},"end":{"line":32,"column":88,"offset":1635},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"But if we’re going to write into it, or iterate over it, basically for almost any operation – we must use a view.","position":{"start":{"line":34,"column":1,"offset":1637},"end":{"line":34,"column":114,"offset":1750},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1637},"end":{"line":34,"column":114,"offset":1750},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> view <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint32Array</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 4</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">.</span>byteLength<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 16</span>\n\n\nview<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1234</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> num <span class=\"token keyword\">of</span> view<span class=\"token punctuation\">)</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">/*\n * 1234\n * 0\n * 0\n * 0\n*/</span></code></pre></div>","position":{"start":{"line":37,"column":1,"offset":1753},"end":{"line":53,"column":4,"offset":1991},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"TypedArray","position":{"start":{"line":55,"column":5,"offset":1997},"end":{"line":55,"column":15,"offset":2007},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1993},"end":{"line":55,"column":15,"offset":2007},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The common term for all these views (Uint8Array, Uint32Array, etc) is TypedArray. They share the same set of methods and properities.","position":{"start":{"line":57,"column":1,"offset":2009},"end":{"line":57,"column":134,"offset":2142},"indent":[]}}],"position":{"start":{"line":57,"column":1,"offset":2009},"end":{"line":57,"column":134,"offset":2142},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"They are much more like regular arrays: have indexes and iterable.","position":{"start":{"line":59,"column":1,"offset":2144},"end":{"line":59,"column":67,"offset":2210},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2144},"end":{"line":59,"column":67,"offset":2210},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr16 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint16Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> arr8 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>arr16<span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr16<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr16<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr8<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr8<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 232, tried to copy 1000, but can't fit 1000 into 8 bits (explanations below)</span></code></pre></div>","position":{"start":{"line":62,"column":1,"offset":2213},"end":{"line":71,"column":4,"offset":2469},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To access the ArrayBuffer, there are properties:","position":{"start":{"line":73,"column":1,"offset":2471},"end":{"line":73,"column":49,"offset":2519},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2471},"end":{"line":73,"column":49,"offset":2519},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">arr.buffer</code>","position":{"start":{"line":74,"column":3,"offset":2522},"end":{"line":74,"column":15,"offset":2534},"indent":[]}},{"type":"text","value":" – references the ArrayBuffer.","position":{"start":{"line":74,"column":15,"offset":2534},"end":{"line":74,"column":45,"offset":2564},"indent":[]}}],"position":{"start":{"line":74,"column":3,"offset":2522},"end":{"line":74,"column":45,"offset":2564},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2520},"end":{"line":74,"column":45,"offset":2564},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">arr.byteLength</code>","position":{"start":{"line":75,"column":3,"offset":2567},"end":{"line":75,"column":19,"offset":2583},"indent":[]}},{"type":"text","value":" – the length of the ArrayBuffer.","position":{"start":{"line":75,"column":19,"offset":2583},"end":{"line":75,"column":52,"offset":2616},"indent":[]}}],"position":{"start":{"line":75,"column":3,"offset":2567},"end":{"line":75,"column":52,"offset":2616},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2565},"end":{"line":75,"column":52,"offset":2616},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2520},"end":{"line":75,"column":52,"offset":2616},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Out-of-bounds behavior","position":{"start":{"line":77,"column":6,"offset":2623},"end":{"line":77,"column":28,"offset":2645},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2618},"end":{"line":77,"column":28,"offset":2645},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"What if we attempt to write an out-of-bounds value into a typed array? There will be no error. But extra bits are cut-off.","position":{"start":{"line":79,"column":1,"offset":2647},"end":{"line":79,"column":123,"offset":2769},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":2647},"end":{"line":79,"column":123,"offset":2769},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For bigger numbers, only the rightmost (less significant) 8 bits are stored, and the rest is cut off:","position":{"start":{"line":81,"column":1,"offset":2771},"end":{"line":81,"column":102,"offset":2872},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":2771},"end":{"line":81,"column":102,"offset":2872},"indent":[]}},{"type":"html","value":"<img src=\"https://javascript.info/article/arraybuffer-binary-arrays/8bit-integer-256@2x.png\" width=\"160px\">","position":{"start":{"line":83,"column":1,"offset":2874},"end":{"line":83,"column":108,"offset":2981},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token number\">256</span>\nnum<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 100000000</span>\n\n<span class=\"token keyword\">let</span> uint8array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\nuint8array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">256</span>\nuint8array<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">257</span>\n\nuint8array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// 0</span>\nuint8array<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// 1</span></code></pre></div>","position":{"start":{"line":86,"column":1,"offset":2984},"end":{"line":96,"column":4,"offset":3162},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TypedArray methods","position":{"start":{"line":98,"column":6,"offset":3169},"end":{"line":98,"column":24,"offset":3187},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":3164},"end":{"line":98,"column":24,"offset":3187},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"TypedArray has regular Array methods, with notable exceptions.","position":{"start":{"line":99,"column":1,"offset":3188},"end":{"line":99,"column":63,"offset":3250},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3188},"end":{"line":99,"column":63,"offset":3250},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can ","position":{"start":{"line":101,"column":1,"offset":3252},"end":{"line":101,"column":8,"offset":3259},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">iterate</code>","position":{"start":{"line":101,"column":8,"offset":3259},"end":{"line":101,"column":17,"offset":3268},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":101,"column":17,"offset":3268},"end":{"line":101,"column":19,"offset":3270},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">map</code>","position":{"start":{"line":101,"column":19,"offset":3270},"end":{"line":101,"column":24,"offset":3275},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":101,"column":24,"offset":3275},"end":{"line":101,"column":26,"offset":3277},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">slice</code>","position":{"start":{"line":101,"column":26,"offset":3277},"end":{"line":101,"column":33,"offset":3284},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":101,"column":33,"offset":3284},"end":{"line":101,"column":35,"offset":3286},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">find</code>","position":{"start":{"line":101,"column":35,"offset":3286},"end":{"line":101,"column":41,"offset":3292},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":101,"column":41,"offset":3292},"end":{"line":101,"column":43,"offset":3294},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reduce</code>","position":{"start":{"line":101,"column":43,"offset":3294},"end":{"line":101,"column":51,"offset":3302},"indent":[]}},{"type":"text","value":" etc.","position":{"start":{"line":101,"column":51,"offset":3302},"end":{"line":101,"column":56,"offset":3307},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3252},"end":{"line":101,"column":56,"offset":3307},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"No ","position":{"start":{"line":103,"column":3,"offset":3311},"end":{"line":103,"column":6,"offset":3314},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">splice</code>","position":{"start":{"line":103,"column":6,"offset":3314},"end":{"line":103,"column":14,"offset":3322},"indent":[]}},{"type":"text","value":" – we can’t delete a value, because typed arrays are views on a buffer, and these are fixed.","position":{"start":{"line":103,"column":14,"offset":3322},"end":{"line":103,"column":106,"offset":3414},"indent":[]}}],"position":{"start":{"line":103,"column":3,"offset":3311},"end":{"line":103,"column":106,"offset":3414},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3309},"end":{"line":103,"column":106,"offset":3414},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"No ","position":{"start":{"line":104,"column":3,"offset":3417},"end":{"line":104,"column":6,"offset":3420},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">concat</code>","position":{"start":{"line":104,"column":6,"offset":3420},"end":{"line":104,"column":14,"offset":3428},"indent":[]}},{"type":"text","value":" method.","position":{"start":{"line":104,"column":14,"offset":3428},"end":{"line":104,"column":22,"offset":3436},"indent":[]}}],"position":{"start":{"line":104,"column":3,"offset":3417},"end":{"line":104,"column":22,"offset":3436},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3415},"end":{"line":104,"column":22,"offset":3436},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3309},"end":{"line":104,"column":22,"offset":3436},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"There are two additional methods:","position":{"start":{"line":106,"column":1,"offset":3438},"end":{"line":106,"column":34,"offset":3471},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3438},"end":{"line":106,"column":34,"offset":3471},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">arr.set(fromArr, [offset])</code>","position":{"start":{"line":108,"column":3,"offset":3475},"end":{"line":108,"column":31,"offset":3503},"indent":[]}},{"type":"text","value":" copies all elements from fromArr to the arr, starting at position offset (0 by default).","position":{"start":{"line":108,"column":31,"offset":3503},"end":{"line":108,"column":120,"offset":3592},"indent":[]}}],"position":{"start":{"line":108,"column":3,"offset":3475},"end":{"line":108,"column":120,"offset":3592},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3473},"end":{"line":108,"column":120,"offset":3592},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">arr.subarray([begin, end])</code>","position":{"start":{"line":109,"column":3,"offset":3595},"end":{"line":109,"column":31,"offset":3623},"indent":[]}},{"type":"text","value":" creates a new view of the same type from begin to end. That’s similar to slice. ","position":{"start":{"line":109,"column":31,"offset":3623},"end":{"line":109,"column":112,"offset":3704},"indent":[]}}],"position":{"start":{"line":109,"column":3,"offset":3595},"end":{"line":109,"column":112,"offset":3704},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3593},"end":{"line":109,"column":112,"offset":3704},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3473},"end":{"line":109,"column":112,"offset":3704},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"DataView","position":{"start":{"line":111,"column":5,"offset":3710},"end":{"line":111,"column":13,"offset":3718},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":3706},"end":{"line":111,"column":13,"offset":3718},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"DataView is a special super-flexible \"untyped\" view over ArrayBuffer. It allows to access the data on any offset in any format.","position":{"start":{"line":113,"column":1,"offset":3720},"end":{"line":113,"column":128,"offset":3847},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":3720},"end":{"line":113,"column":128,"offset":3847},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"For typed arrays, the constructor dictates what the format is. The whole array is supposed to be uniform.","position":{"start":{"line":115,"column":3,"offset":3851},"end":{"line":115,"column":108,"offset":3956},"indent":[]}}],"position":{"start":{"line":115,"column":3,"offset":3851},"end":{"line":115,"column":108,"offset":3956},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":3849},"end":{"line":115,"column":108,"offset":3956},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"With DataView we access the data with methods like ","position":{"start":{"line":116,"column":3,"offset":3959},"end":{"line":116,"column":54,"offset":4010},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">getUint8(i)</code>","position":{"start":{"line":116,"column":54,"offset":4010},"end":{"line":116,"column":67,"offset":4023},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":116,"column":67,"offset":4023},"end":{"line":116,"column":71,"offset":4027},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">getUint16(i)</code>","position":{"start":{"line":116,"column":71,"offset":4027},"end":{"line":116,"column":85,"offset":4041},"indent":[]}},{"type":"text","value":". We choose the format at method call time instead of the construction time.","position":{"start":{"line":116,"column":85,"offset":4041},"end":{"line":116,"column":161,"offset":4117},"indent":[]}}],"position":{"start":{"line":116,"column":3,"offset":3959},"end":{"line":116,"column":161,"offset":4117},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":3957},"end":{"line":116,"column":161,"offset":4117},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":3849},"end":{"line":116,"column":161,"offset":4117},"indent":[1]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> dataView <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataView</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndataView<span class=\"token punctuation\">.</span><span class=\"token function\">getUint8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ndataView<span class=\"token punctuation\">.</span><span class=\"token function\">getUint8</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// out of bound</span>\ndataView<span class=\"token punctuation\">.</span><span class=\"token function\">getUint16</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// now get 16-bit number at offset 0, it consists of 2 bytes, together iterpreted as 65535</span></code></pre></div>","position":{"start":{"line":119,"column":1,"offset":4120},"end":{"line":126,"column":4,"offset":4394},"indent":[1,1,1,1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":128,"column":1,"offset":4396},"end":{"line":128,"column":5,"offset":4400},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"TextDecoder and TextEncoder","position":{"start":{"line":130,"column":4,"offset":4405},"end":{"line":130,"column":31,"offset":4432},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":4402},"end":{"line":130,"column":31,"offset":4432},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"TextDecoder","position":{"start":{"line":132,"column":5,"offset":4438},"end":{"line":132,"column":16,"offset":4449},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4434},"end":{"line":132,"column":16,"offset":4449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The build-in TextDecoder object allows to read the value into an actual JavaScript string, given the buffer and the encoding.","position":{"start":{"line":133,"column":1,"offset":4450},"end":{"line":133,"column":126,"offset":4575},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":4450},"end":{"line":133,"column":126,"offset":4575},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> uint8Array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>uint8Array<span class=\"token punctuation\">)</span> <span class=\"token comment\">// Hello</span>\n\n<span class=\"token keyword\">let</span> uint8Array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">228</span><span class=\"token punctuation\">,</span> <span class=\"token number\">189</span><span class=\"token punctuation\">,</span> <span class=\"token number\">160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">229</span><span class=\"token punctuation\">,</span> <span class=\"token number\">165</span><span class=\"token punctuation\">,</span> <span class=\"token number\">189</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">TextDecoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>uint8Array<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 你好</span></code></pre></div>","position":{"start":{"line":135,"column":1,"offset":4577},"end":{"line":141,"column":4,"offset":4806},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"TextEncoder","position":{"start":{"line":143,"column":5,"offset":4812},"end":{"line":143,"column":16,"offset":4823},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":4808},"end":{"line":143,"column":16,"offset":4823},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"TextEncoder does the reverse thing – converts a string into bytes.","position":{"start":{"line":144,"column":1,"offset":4824},"end":{"line":144,"column":67,"offset":4890},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":4824},"end":{"line":144,"column":67,"offset":4890},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> encoder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TextEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> uint8Array <span class=\"token operator\">=</span> encoder<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>uint8Array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 72,101,108,108,111</span></code></pre></div>","position":{"start":{"line":146,"column":1,"offset":4892},"end":{"line":150,"column":4,"offset":5029},"indent":[1,1,1,1]}},{"type":"html","value":"<br>","position":{"start":{"line":152,"column":1,"offset":5031},"end":{"line":152,"column":5,"offset":5035},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Blob","position":{"start":{"line":154,"column":4,"offset":5040},"end":{"line":154,"column":8,"offset":5044},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5037},"end":{"line":154,"column":8,"offset":5044},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ArrayBuffer and views are a part of ECMA standard, a part of JavaScript.\nIn the browser, there are additional higher-level objects, described in File API, in particular ","position":{"start":{"line":155,"column":1,"offset":5045},"end":{"line":156,"column":97,"offset":5214},"indent":[1]}},{"type":"html","value":"<code class=\"language-text\">Blob</code>","position":{"start":{"line":156,"column":97,"offset":5214},"end":{"line":156,"column":103,"offset":5220},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":156,"column":103,"offset":5220},"end":{"line":156,"column":104,"offset":5221},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":5045},"end":{"line":156,"column":104,"offset":5221},"indent":[1]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// create Blob from a string</span>\n<span class=\"token keyword\">let</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"&lt;html>…&lt;/html>\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">:</span> <span class=\"token string\">'text/html'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// create Blob from a typed array and strings</span>\n<span class=\"token keyword\">let</span> hello <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">108</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>hello<span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'world'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">:</span> <span class=\"token string\">'text/plain'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":158,"column":1,"offset":5223},"end":{"line":165,"column":4,"offset":5495},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Blobs are immutable","position":{"start":{"line":167,"column":3,"offset":5499},"end":{"line":167,"column":22,"offset":5518},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":5497},"end":{"line":167,"column":24,"offset":5520},"indent":[]}},{"type":"text","value":"\nWe can’t change data directly in a blob, but we can slice parts of blobs, create new blobs from them, mix them into a new blob and so on.\n    ","position":{"start":{"line":167,"column":24,"offset":5520},"end":{"line":169,"column":5,"offset":5663},"indent":[1,1]}}],"position":{"start":{"line":167,"column":1,"offset":5497},"end":{"line":169,"column":5,"offset":5663},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Blob as URL","position":{"start":{"line":170,"column":5,"offset":5668},"end":{"line":170,"column":16,"offset":5679},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":5664},"end":{"line":170,"column":16,"offset":5679},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A Blob can be easily used as an URL for ","position":{"start":{"line":172,"column":1,"offset":5681},"end":{"line":172,"column":41,"offset":5721},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;a&gt;</code>","position":{"start":{"line":172,"column":41,"offset":5721},"end":{"line":172,"column":46,"offset":5726},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":172,"column":46,"offset":5726},"end":{"line":172,"column":48,"offset":5728},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;img&gt;</code>","position":{"start":{"line":172,"column":48,"offset":5728},"end":{"line":172,"column":55,"offset":5735},"indent":[]}},{"type":"text","value":" or other tags, to show its contents.","position":{"start":{"line":172,"column":55,"offset":5735},"end":{"line":172,"column":92,"offset":5772},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":5681},"end":{"line":172,"column":92,"offset":5772},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Thanks to type, we can allso download/upload blobs, and it naturally becomes ","position":{"start":{"line":174,"column":1,"offset":5774},"end":{"line":174,"column":78,"offset":5851},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Content-Type</code>","position":{"start":{"line":174,"column":78,"offset":5851},"end":{"line":174,"column":92,"offset":5865},"indent":[]}},{"type":"text","value":" in network requests.","position":{"start":{"line":174,"column":92,"offset":5865},"end":{"line":174,"column":113,"offset":5886},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":5774},"end":{"line":174,"column":113,"offset":5886},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlink<span class=\"token punctuation\">.</span>download <span class=\"token operator\">=</span> <span class=\"token string\">'hello.txt'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Hello, world!'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">:</span> <span class=\"token string\">'text/plain'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nlink<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nlink<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">revokeObjectURL</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":176,"column":1,"offset":5888},"end":{"line":187,"column":4,"offset":6125},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"That’s what the value of link.href looks like:","position":{"start":{"line":188,"column":1,"offset":6126},"end":{"line":188,"column":47,"offset":6172},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":6126},"end":{"line":188,"column":47,"offset":6172},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">blob:https://javascript.info/1e67e00e-860d-40a5-89ae-6ab0cbee6273</code></pre></div>","position":{"start":{"line":190,"column":1,"offset":6174},"end":{"line":190,"column":70,"offset":6243},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If we create an URL, that blob will hang in memory, even if not needed any more. So ","position":{"start":{"line":192,"column":1,"offset":6245},"end":{"line":192,"column":85,"offset":6329},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">URL.revokeObjectURL(url)</code>","position":{"start":{"line":192,"column":85,"offset":6329},"end":{"line":192,"column":111,"offset":6355},"indent":[]}},{"type":"text","value":" removes the reference from the internal mapping, thus allowing the blob to be deleted (if there are no other references), and the memory to be freed.","position":{"start":{"line":192,"column":111,"offset":6355},"end":{"line":192,"column":261,"offset":6505},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":6245},"end":{"line":192,"column":261,"offset":6505},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Blob to base64","position":{"start":{"line":194,"column":5,"offset":6511},"end":{"line":194,"column":19,"offset":6525},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":6507},"end":{"line":194,"column":19,"offset":6525},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An alternative to","position":{"start":{"line":196,"column":1,"offset":6527},"end":{"line":196,"column":18,"offset":6544},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">URL.createObjectURL</code>","position":{"start":{"line":196,"column":18,"offset":6544},"end":{"line":196,"column":40,"offset":6566},"indent":[]}},{"type":"text","value":" is to convert a blob into a base64-encoded string.","position":{"start":{"line":196,"column":40,"offset":6566},"end":{"line":196,"column":91,"offset":6617},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":6527},"end":{"line":196,"column":91,"offset":6617},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here’s the demo of downloading a blob, now via base-64:","position":{"start":{"line":198,"column":1,"offset":6619},"end":{"line":198,"column":56,"offset":6674},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":6619},"end":{"line":198,"column":56,"offset":6674},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlink<span class=\"token punctuation\">.</span>download <span class=\"token operator\">=</span> <span class=\"token string\">'hello.txt'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Hello, world!'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">:</span> <span class=\"token string\">'text/plain'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nreader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsDataURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// converts the blob to base64 and calls onload</span>\n\nreader<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">;</span> <span class=\"token comment\">// data url</span>\n  link<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":200,"column":1,"offset":6676},"end":{"line":213,"column":4,"offset":7023},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Both ways of making an URL of a blob are usable. But usually ","position":{"start":{"line":215,"column":1,"offset":7025},"end":{"line":215,"column":62,"offset":7086},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">URL.createObjectURL(blob)</code>","position":{"start":{"line":215,"column":62,"offset":7086},"end":{"line":215,"column":89,"offset":7113},"indent":[]}},{"type":"text","value":" is simpler and faster.","position":{"start":{"line":215,"column":89,"offset":7113},"end":{"line":215,"column":112,"offset":7136},"indent":[]}}],"position":{"start":{"line":215,"column":1,"offset":7025},"end":{"line":215,"column":112,"offset":7136},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"URL.createObjectURL(blob)","position":{"start":{"line":217,"column":3,"offset":7140},"end":{"line":217,"column":28,"offset":7165},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":7138},"end":{"line":217,"column":30,"offset":7167},"indent":[]}}],"position":{"start":{"line":217,"column":1,"offset":7138},"end":{"line":217,"column":30,"offset":7167},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"We need to revoke them if care about memory.","position":{"start":{"line":218,"column":3,"offset":7170},"end":{"line":218,"column":47,"offset":7214},"indent":[]}}],"position":{"start":{"line":218,"column":3,"offset":7170},"end":{"line":218,"column":47,"offset":7214},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":7168},"end":{"line":218,"column":47,"offset":7214},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Direct access to blob, no “encoding/decoding”","position":{"start":{"line":219,"column":3,"offset":7217},"end":{"line":219,"column":48,"offset":7262},"indent":[]}}],"position":{"start":{"line":219,"column":3,"offset":7217},"end":{"line":219,"column":48,"offset":7262},"indent":[]}}],"position":{"start":{"line":219,"column":1,"offset":7215},"end":{"line":219,"column":48,"offset":7262},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":7168},"end":{"line":219,"column":48,"offset":7262},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Blob to data url","position":{"start":{"line":221,"column":3,"offset":7266},"end":{"line":221,"column":19,"offset":7282},"indent":[]}}],"position":{"start":{"line":221,"column":1,"offset":7264},"end":{"line":221,"column":21,"offset":7284},"indent":[]}}],"position":{"start":{"line":221,"column":1,"offset":7264},"end":{"line":221,"column":21,"offset":7284},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"No need to revoke anything.","position":{"start":{"line":222,"column":3,"offset":7287},"end":{"line":222,"column":30,"offset":7314},"indent":[]}}],"position":{"start":{"line":222,"column":3,"offset":7287},"end":{"line":222,"column":30,"offset":7314},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":7285},"end":{"line":222,"column":30,"offset":7314},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Performance and memory losses on big blobs for encoding.","position":{"start":{"line":223,"column":3,"offset":7317},"end":{"line":223,"column":59,"offset":7373},"indent":[]}}],"position":{"start":{"line":223,"column":3,"offset":7317},"end":{"line":223,"column":59,"offset":7373},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":7315},"end":{"line":223,"column":59,"offset":7373},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":7285},"end":{"line":223,"column":59,"offset":7373},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Image to blob","position":{"start":{"line":225,"column":5,"offset":7379},"end":{"line":225,"column":18,"offset":7392},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":7375},"end":{"line":225,"column":18,"offset":7392},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can create a blob of an image. Image operations are done via ","position":{"start":{"line":227,"column":1,"offset":7394},"end":{"line":227,"column":65,"offset":7458},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;canvas&gt;</code>","position":{"start":{"line":227,"column":65,"offset":7458},"end":{"line":227,"column":75,"offset":7468},"indent":[]}},{"type":"text","value":" element:","position":{"start":{"line":227,"column":75,"offset":7468},"end":{"line":227,"column":84,"offset":7477},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":7394},"end":{"line":227,"column":84,"offset":7477},"indent":[]}},{"type":"list","ordered":true,"start":1,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Draw an image (or its part) on canvas using canvas.drawImage.","position":{"start":{"line":229,"column":4,"offset":7482},"end":{"line":229,"column":65,"offset":7543},"indent":[]}}],"position":{"start":{"line":229,"column":4,"offset":7482},"end":{"line":229,"column":65,"offset":7543},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":7479},"end":{"line":229,"column":65,"offset":7543},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Call canvas method ","position":{"start":{"line":230,"column":4,"offset":7547},"end":{"line":230,"column":23,"offset":7566},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">toBlob(callback, format, quality)</code>","position":{"start":{"line":230,"column":23,"offset":7566},"end":{"line":230,"column":58,"offset":7601},"indent":[]}},{"type":"text","value":" that creates a blob and runs callback with it when done.","position":{"start":{"line":230,"column":58,"offset":7601},"end":{"line":230,"column":115,"offset":7658},"indent":[]}}],"position":{"start":{"line":230,"column":4,"offset":7547},"end":{"line":230,"column":115,"offset":7658},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":7544},"end":{"line":230,"column":115,"offset":7658},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":7479},"end":{"line":230,"column":115,"offset":7658},"indent":[1]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toBlob</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">blob</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// blob ready, download it</span>\n  <span class=\"token keyword\">let</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span>download <span class=\"token operator\">=</span> <span class=\"token string\">'example.png'</span><span class=\"token punctuation\">;</span>\n\n  link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// delete the internal blob reference, to let the browser clear memory from it</span>\n  <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">revokeObjectURL</span><span class=\"token punctuation\">(</span>link<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'image/png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":232,"column":1,"offset":7660},"end":{"line":244,"column":4,"offset":8003},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we prefer async/await instead of callbacks:","position":{"start":{"line":246,"column":1,"offset":8005},"end":{"line":246,"column":47,"offset":8051},"indent":[]}}],"position":{"start":{"line":246,"column":1,"offset":8005},"end":{"line":246,"column":47,"offset":8051},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> canvasElem<span class=\"token punctuation\">.</span><span class=\"token function\">toBlob</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> <span class=\"token string\">'image/png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":248,"column":1,"offset":8053},"end":{"line":250,"column":4,"offset":8152},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Summary of Blob","position":{"start":{"line":252,"column":5,"offset":8158},"end":{"line":252,"column":20,"offset":8173},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":8154},"end":{"line":252,"column":20,"offset":8173},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While ","position":{"start":{"line":254,"column":1,"offset":8175},"end":{"line":254,"column":7,"offset":8181},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">ArrayBuffer</code>","position":{"start":{"line":254,"column":7,"offset":8181},"end":{"line":254,"column":20,"offset":8194},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":254,"column":20,"offset":8194},"end":{"line":254,"column":22,"offset":8196},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Uint8Array</code>","position":{"start":{"line":254,"column":22,"offset":8196},"end":{"line":254,"column":34,"offset":8208},"indent":[]}},{"type":"text","value":" and other ","position":{"start":{"line":254,"column":34,"offset":8208},"end":{"line":254,"column":45,"offset":8219},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">BufferSource</code>","position":{"start":{"line":254,"column":45,"offset":8219},"end":{"line":254,"column":59,"offset":8233},"indent":[]}},{"type":"text","value":" are \"binary data\", a Blob represents \"binary data with type\".","position":{"start":{"line":254,"column":59,"offset":8233},"end":{"line":254,"column":121,"offset":8295},"indent":[]}}],"position":{"start":{"line":254,"column":1,"offset":8175},"end":{"line":254,"column":121,"offset":8295},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"That makes Blobs convenient for upload/download operations, that are so common in the browser.","position":{"start":{"line":256,"column":1,"offset":8297},"end":{"line":256,"column":95,"offset":8391},"indent":[]}}],"position":{"start":{"line":256,"column":1,"offset":8297},"end":{"line":256,"column":95,"offset":8391},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can easily convert betweeen Blob and low-level binary data types:","position":{"start":{"line":258,"column":1,"offset":8393},"end":{"line":258,"column":69,"offset":8461},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":8393},"end":{"line":258,"column":69,"offset":8461},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"We can make a Blob from a typed array using ","position":{"start":{"line":259,"column":3,"offset":8464},"end":{"line":259,"column":47,"offset":8508},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">new Blob(...)</code>","position":{"start":{"line":259,"column":47,"offset":8508},"end":{"line":259,"column":62,"offset":8523},"indent":[]}},{"type":"text","value":" constructor.","position":{"start":{"line":259,"column":62,"offset":8523},"end":{"line":259,"column":75,"offset":8536},"indent":[]}}],"position":{"start":{"line":259,"column":3,"offset":8464},"end":{"line":259,"column":75,"offset":8536},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":8462},"end":{"line":259,"column":75,"offset":8536},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"We can get back ArrayBuffer from a Blob using ","position":{"start":{"line":260,"column":3,"offset":8539},"end":{"line":260,"column":49,"offset":8585},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">FileReader</code>","position":{"start":{"line":260,"column":49,"offset":8585},"end":{"line":260,"column":61,"offset":8597},"indent":[]}},{"type":"text","value":", and then create a view over it for low-level binary processing.","position":{"start":{"line":260,"column":61,"offset":8597},"end":{"line":260,"column":126,"offset":8662},"indent":[]}}],"position":{"start":{"line":260,"column":3,"offset":8539},"end":{"line":260,"column":126,"offset":8662},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":8537},"end":{"line":260,"column":126,"offset":8662},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":8462},"end":{"line":260,"column":126,"offset":8662},"indent":[1]}},{"type":"html","value":"<br>","position":{"start":{"line":262,"column":1,"offset":8664},"end":{"line":262,"column":5,"offset":8668},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"File and FileReader","position":{"start":{"line":264,"column":4,"offset":8673},"end":{"line":264,"column":23,"offset":8692},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":8670},"end":{"line":264,"column":23,"offset":8692},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A File object inherits from Blob and is extended with filesystem-related capabilities.","position":{"start":{"line":266,"column":1,"offset":8694},"end":{"line":266,"column":87,"offset":8780},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8694},"end":{"line":266,"column":87,"offset":8780},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are two ways to obtain it.","position":{"start":{"line":268,"column":1,"offset":8782},"end":{"line":268,"column":33,"offset":8814},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":8782},"end":{"line":268,"column":33,"offset":8814},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"First, there’s a constructor, similar to Blob.","position":{"start":{"line":269,"column":3,"offset":8817},"end":{"line":269,"column":49,"offset":8863},"indent":[]}}],"position":{"start":{"line":269,"column":3,"offset":8817},"end":{"line":269,"column":49,"offset":8863},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":8815},"end":{"line":269,"column":49,"offset":8863},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Second, more often we get a file from ","position":{"start":{"line":270,"column":3,"offset":8866},"end":{"line":270,"column":41,"offset":8904},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;input type=&quot;file&quot;&gt;</code>","position":{"start":{"line":270,"column":41,"offset":8904},"end":{"line":270,"column":62,"offset":8925},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":270,"column":62,"offset":8925},"end":{"line":270,"column":63,"offset":8926},"indent":[]}}],"position":{"start":{"line":270,"column":3,"offset":8866},"end":{"line":270,"column":63,"offset":8926},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":8864},"end":{"line":270,"column":63,"offset":8926},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":8815},"end":{"line":270,"column":63,"offset":8926},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"FileReader","position":{"start":{"line":272,"column":5,"offset":8932},"end":{"line":272,"column":15,"offset":8942},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":8928},"end":{"line":272,"column":15,"offset":8942},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"FileReader is an object with the sole purpose of reading data from Blob (and hence File too) objects. It delivers the data using events, as reading from disk may take time.","position":{"start":{"line":274,"column":1,"offset":8944},"end":{"line":274,"column":173,"offset":9116},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":8944},"end":{"line":274,"column":173,"offset":9116},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":276,"column":1,"offset":9118},"end":{"line":278,"column":4,"offset":9165},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"The main methods","position":{"start":{"line":280,"column":6,"offset":9172},"end":{"line":280,"column":22,"offset":9188},"indent":[]}}],"position":{"start":{"line":280,"column":1,"offset":9167},"end":{"line":280,"column":22,"offset":9188},"indent":[]}},{"type":"table","align":["center","center"],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"name","position":{"start":{"line":282,"column":2,"offset":9191},"end":{"line":282,"column":6,"offset":9195},"indent":[]}}],"position":{"start":{"line":282,"column":2,"offset":9191},"end":{"line":282,"column":6,"offset":9195},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"descripition","position":{"start":{"line":282,"column":7,"offset":9196},"end":{"line":282,"column":19,"offset":9208},"indent":[]}}],"position":{"start":{"line":282,"column":7,"offset":9196},"end":{"line":282,"column":19,"offset":9208},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":9190},"end":{"line":282,"column":20,"offset":9209},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"html","value":"<code class=\"language-text\">readAsArrayBuffer(blob)</code>","position":{"start":{"line":284,"column":2,"offset":9223},"end":{"line":284,"column":27,"offset":9248},"indent":[]}}],"position":{"start":{"line":284,"column":2,"offset":9223},"end":{"line":284,"column":27,"offset":9248},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"read the data in binary format ArrayBuffer.","position":{"start":{"line":284,"column":28,"offset":9249},"end":{"line":284,"column":71,"offset":9292},"indent":[]}}],"position":{"start":{"line":284,"column":28,"offset":9249},"end":{"line":284,"column":71,"offset":9292},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":9222},"end":{"line":284,"column":72,"offset":9293},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"html","value":"<code class=\"language-text\">readAsText(blob, [encoding])</code>","position":{"start":{"line":285,"column":2,"offset":9295},"end":{"line":285,"column":32,"offset":9325},"indent":[]}}],"position":{"start":{"line":285,"column":2,"offset":9295},"end":{"line":285,"column":32,"offset":9325},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"read the data as a text string with the given encoding","position":{"start":{"line":285,"column":33,"offset":9326},"end":{"line":285,"column":87,"offset":9380},"indent":[]}}],"position":{"start":{"line":285,"column":33,"offset":9326},"end":{"line":285,"column":87,"offset":9380},"indent":[]}}],"position":{"start":{"line":285,"column":1,"offset":9294},"end":{"line":285,"column":88,"offset":9381},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"html","value":"<code class=\"language-text\">readAsDataURL(blob)</code>","position":{"start":{"line":286,"column":2,"offset":9383},"end":{"line":286,"column":23,"offset":9404},"indent":[]}}],"position":{"start":{"line":286,"column":2,"offset":9383},"end":{"line":286,"column":23,"offset":9404},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"read the binary data and encode it as base64 data url","position":{"start":{"line":286,"column":24,"offset":9405},"end":{"line":286,"column":77,"offset":9458},"indent":[]}}],"position":{"start":{"line":286,"column":24,"offset":9405},"end":{"line":286,"column":77,"offset":9458},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":9382},"end":{"line":286,"column":78,"offset":9459},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"html","value":"<code class=\"language-text\">abort()</code>","position":{"start":{"line":287,"column":2,"offset":9461},"end":{"line":287,"column":11,"offset":9470},"indent":[]}}],"position":{"start":{"line":287,"column":2,"offset":9461},"end":{"line":287,"column":11,"offset":9470},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"cancel the operation","position":{"start":{"line":287,"column":12,"offset":9471},"end":{"line":287,"column":32,"offset":9491},"indent":[]}}],"position":{"start":{"line":287,"column":12,"offset":9471},"end":{"line":287,"column":32,"offset":9491},"indent":[]}}],"position":{"start":{"line":287,"column":1,"offset":9460},"end":{"line":287,"column":33,"offset":9492},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":9190},"end":{"line":287,"column":33,"offset":9492},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As the reading proceeds, there are events:","position":{"start":{"line":289,"column":1,"offset":9494},"end":{"line":289,"column":43,"offset":9536},"indent":[]}}],"position":{"start":{"line":289,"column":1,"offset":9494},"end":{"line":289,"column":43,"offset":9536},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">loadstart</code>","position":{"start":{"line":291,"column":3,"offset":9540},"end":{"line":291,"column":14,"offset":9551},"indent":[]}},{"type":"text","value":" – loading started.","position":{"start":{"line":291,"column":14,"offset":9551},"end":{"line":291,"column":33,"offset":9570},"indent":[]}}],"position":{"start":{"line":291,"column":3,"offset":9540},"end":{"line":291,"column":33,"offset":9570},"indent":[]}}],"position":{"start":{"line":291,"column":1,"offset":9538},"end":{"line":291,"column":33,"offset":9570},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">progress</code>","position":{"start":{"line":292,"column":3,"offset":9573},"end":{"line":292,"column":13,"offset":9583},"indent":[]}},{"type":"text","value":" – occurs during reading.","position":{"start":{"line":292,"column":13,"offset":9583},"end":{"line":292,"column":38,"offset":9608},"indent":[]}}],"position":{"start":{"line":292,"column":3,"offset":9573},"end":{"line":292,"column":38,"offset":9608},"indent":[]}}],"position":{"start":{"line":292,"column":1,"offset":9571},"end":{"line":292,"column":38,"offset":9608},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">load</code>","position":{"start":{"line":293,"column":3,"offset":9611},"end":{"line":293,"column":9,"offset":9617},"indent":[]}},{"type":"text","value":" – no errors, reading complete.","position":{"start":{"line":293,"column":9,"offset":9617},"end":{"line":293,"column":40,"offset":9648},"indent":[]}}],"position":{"start":{"line":293,"column":3,"offset":9611},"end":{"line":293,"column":40,"offset":9648},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":9609},"end":{"line":293,"column":40,"offset":9648},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">abort</code>","position":{"start":{"line":294,"column":3,"offset":9651},"end":{"line":294,"column":10,"offset":9658},"indent":[]}},{"type":"text","value":" – abort called.","position":{"start":{"line":294,"column":10,"offset":9658},"end":{"line":294,"column":26,"offset":9674},"indent":[]}}],"position":{"start":{"line":294,"column":3,"offset":9651},"end":{"line":294,"column":26,"offset":9674},"indent":[]}}],"position":{"start":{"line":294,"column":1,"offset":9649},"end":{"line":294,"column":26,"offset":9674},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">error</code>","position":{"start":{"line":295,"column":3,"offset":9677},"end":{"line":295,"column":10,"offset":9684},"indent":[]}},{"type":"text","value":" – error has occurred.","position":{"start":{"line":295,"column":10,"offset":9684},"end":{"line":295,"column":32,"offset":9706},"indent":[]}}],"position":{"start":{"line":295,"column":3,"offset":9677},"end":{"line":295,"column":32,"offset":9706},"indent":[]}}],"position":{"start":{"line":295,"column":1,"offset":9675},"end":{"line":295,"column":32,"offset":9706},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">loadend</code>","position":{"start":{"line":296,"column":3,"offset":9709},"end":{"line":296,"column":12,"offset":9718},"indent":[]}},{"type":"text","value":" – reading finished with either success or failure.","position":{"start":{"line":296,"column":12,"offset":9718},"end":{"line":296,"column":63,"offset":9769},"indent":[]}}],"position":{"start":{"line":296,"column":3,"offset":9709},"end":{"line":296,"column":63,"offset":9769},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":9707},"end":{"line":296,"column":63,"offset":9769},"indent":[]}}],"position":{"start":{"line":291,"column":1,"offset":9538},"end":{"line":296,"column":63,"offset":9769},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When the reading is finished, we can access the result as:","position":{"start":{"line":298,"column":1,"offset":9771},"end":{"line":298,"column":59,"offset":9829},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":9771},"end":{"line":298,"column":59,"offset":9829},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">reader.result</code>","position":{"start":{"line":300,"column":3,"offset":9833},"end":{"line":300,"column":18,"offset":9848},"indent":[]}},{"type":"text","value":" is the result (if successful).","position":{"start":{"line":300,"column":18,"offset":9848},"end":{"line":300,"column":49,"offset":9879},"indent":[]}}],"position":{"start":{"line":300,"column":3,"offset":9833},"end":{"line":300,"column":49,"offset":9879},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":9831},"end":{"line":300,"column":49,"offset":9879},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">reader.error</code>","position":{"start":{"line":301,"column":3,"offset":9882},"end":{"line":301,"column":17,"offset":9896},"indent":[]}},{"type":"text","value":" is the error (if failed).","position":{"start":{"line":301,"column":17,"offset":9896},"end":{"line":301,"column":43,"offset":9922},"indent":[]}}],"position":{"start":{"line":301,"column":3,"offset":9882},"end":{"line":301,"column":43,"offset":9922},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":9880},"end":{"line":301,"column":43,"offset":9922},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":9831},"end":{"line":301,"column":43,"offset":9922},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Here’s an example of reading a file:","position":{"start":{"line":303,"column":1,"offset":9924},"end":{"line":303,"column":37,"offset":9960},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":9924},"end":{"line":303,"column":37,"offset":9960},"indent":[]}},{"type":"html","lang":"html","value":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onchange</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>readFile(this)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">function</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> file <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileReader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  reader<span class=\"token punctuation\">.</span><span class=\"token function\">readAsText</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  reader<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  reader<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":305,"column":1,"offset":9962},"end":{"line":326,"column":4,"offset":10298},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"FileReader for blobs","position":{"start":{"line":328,"column":6,"offset":10305},"end":{"line":328,"column":26,"offset":10325},"indent":[]}}],"position":{"start":{"line":328,"column":1,"offset":10300},"end":{"line":328,"column":26,"offset":10325},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"FileReader can read not just files, but any blobs. We can use it to convert a blob to another format:","position":{"start":{"line":329,"column":1,"offset":10326},"end":{"line":329,"column":102,"offset":10427},"indent":[]}}],"position":{"start":{"line":329,"column":1,"offset":10326},"end":{"line":329,"column":102,"offset":10427},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">readAsArrayBuffer(blob)</code>","position":{"start":{"line":331,"column":3,"offset":10431},"end":{"line":331,"column":28,"offset":10456},"indent":[]}},{"type":"text","value":" – to ArrayBuffer.","position":{"start":{"line":331,"column":28,"offset":10456},"end":{"line":331,"column":46,"offset":10474},"indent":[]}}],"position":{"start":{"line":331,"column":3,"offset":10431},"end":{"line":331,"column":46,"offset":10474},"indent":[]}}],"position":{"start":{"line":331,"column":1,"offset":10429},"end":{"line":331,"column":46,"offset":10474},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">readAsText(blob, [encoding])</code>","position":{"start":{"line":332,"column":3,"offset":10477},"end":{"line":332,"column":33,"offset":10507},"indent":[]}},{"type":"text","value":" – to string (an alternative to TextDecoder).","position":{"start":{"line":332,"column":33,"offset":10507},"end":{"line":332,"column":78,"offset":10552},"indent":[]}}],"position":{"start":{"line":332,"column":3,"offset":10477},"end":{"line":332,"column":78,"offset":10552},"indent":[]}}],"position":{"start":{"line":332,"column":1,"offset":10475},"end":{"line":332,"column":78,"offset":10552},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">readAsDataURL(blob)</code>","position":{"start":{"line":333,"column":3,"offset":10555},"end":{"line":333,"column":24,"offset":10576},"indent":[]}},{"type":"text","value":" – to base64 data url.","position":{"start":{"line":333,"column":24,"offset":10576},"end":{"line":333,"column":46,"offset":10598},"indent":[]}}],"position":{"start":{"line":333,"column":3,"offset":10555},"end":{"line":333,"column":46,"offset":10598},"indent":[]}}],"position":{"start":{"line":333,"column":1,"offset":10553},"end":{"line":333,"column":46,"offset":10598},"indent":[]}}],"position":{"start":{"line":331,"column":1,"offset":10429},"end":{"line":333,"column":46,"offset":10598},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"FileReaderSync is available inside Web Workers","position":{"start":{"line":336,"column":6,"offset":10606},"end":{"line":336,"column":52,"offset":10652},"indent":[]}}],"position":{"start":{"line":336,"column":1,"offset":10601},"end":{"line":336,"column":52,"offset":10652},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For Web Workers, there also exists a synchronous variant of FileReader, called FileReaderSync.","position":{"start":{"line":337,"column":1,"offset":10653},"end":{"line":337,"column":95,"offset":10747},"indent":[]}}],"position":{"start":{"line":337,"column":1,"offset":10653},"end":{"line":337,"column":95,"offset":10747},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"In many cases though, we don’t have to read the file contents","position":{"start":{"line":339,"column":3,"offset":10751},"end":{"line":339,"column":64,"offset":10812},"indent":[]}}],"position":{"start":{"line":339,"column":1,"offset":10749},"end":{"line":339,"column":66,"offset":10814},"indent":[]}},{"type":"text","value":". Just as we did with blobs, we can create a short url with ","position":{"start":{"line":339,"column":66,"offset":10814},"end":{"line":339,"column":126,"offset":10874},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">URL.createObjectURL(file)</code>","position":{"start":{"line":339,"column":126,"offset":10874},"end":{"line":339,"column":153,"offset":10901},"indent":[]}},{"type":"text","value":" and assign it to ","position":{"start":{"line":339,"column":153,"offset":10901},"end":{"line":339,"column":171,"offset":10919},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;a&gt;</code>","position":{"start":{"line":339,"column":171,"offset":10919},"end":{"line":339,"column":176,"offset":10924},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":339,"column":176,"offset":10924},"end":{"line":339,"column":180,"offset":10928},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">&lt;img&gt;</code>","position":{"start":{"line":339,"column":180,"offset":10928},"end":{"line":339,"column":187,"offset":10935},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":339,"column":187,"offset":10935},"end":{"line":339,"column":188,"offset":10936},"indent":[]}}],"position":{"start":{"line":339,"column":1,"offset":10749},"end":{"line":339,"column":188,"offset":10936},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This way the file can be downloaded or shown up as an image, as a part of canvas etc. And if we’re going to send a File over a network, that’s also easy: network API like ","position":{"start":{"line":341,"column":1,"offset":10938},"end":{"line":341,"column":172,"offset":11109},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">XMLHttpRequest</code>","position":{"start":{"line":341,"column":172,"offset":11109},"end":{"line":341,"column":188,"offset":11125},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":341,"column":188,"offset":11125},"end":{"line":341,"column":192,"offset":11129},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fetch</code>","position":{"start":{"line":341,"column":192,"offset":11129},"end":{"line":341,"column":199,"offset":11136},"indent":[]}},{"type":"text","value":" natively accepts File objects.","position":{"start":{"line":341,"column":199,"offset":11136},"end":{"line":341,"column":230,"offset":11167},"indent":[]}}],"position":{"start":{"line":341,"column":1,"offset":10938},"end":{"line":341,"column":230,"offset":11167},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":343,"column":4,"offset":11172},"end":{"line":343,"column":13,"offset":11181},"indent":[]}}],"position":{"start":{"line":343,"column":1,"offset":11169},"end":{"line":343,"column":13,"offset":11181},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"Binary data, files","children":[{"type":"text","value":"https://javascript.info/binary","position":{"start":{"line":345,"column":2,"offset":11184},"end":{"line":345,"column":32,"offset":11214},"indent":[]}}],"position":{"start":{"line":345,"column":1,"offset":11183},"end":{"line":345,"column":53,"offset":11235},"indent":[]}},{"type":"text","value":" - javascript.info","position":{"start":{"line":345,"column":53,"offset":11235},"end":{"line":345,"column":71,"offset":11253},"indent":[]}}],"position":{"start":{"line":345,"column":1,"offset":11183},"end":{"line":345,"column":71,"offset":11253},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":345,"column":71,"offset":11253}}}}