{"expireTime":9007200917962570000,"key":"transformer-remark-markdown-ast-ed015423fae44b493f28812058e78067-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"text","value":"Proxy","position":{"start":{"line":1,"column":5,"offset":4},"end":{"line":1,"column":10,"offset":9},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":10,"offset":9},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> target <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> proxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nproxy<span class=\"token punctuation\">.</span>test <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token comment\">// 5</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// { test: 5 }</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// { test: 5 }</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> k <span class=\"token keyword\">in</span> proxy<span class=\"token punctuation\">)</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// test</span></code></pre></div>","position":{"start":{"line":3,"column":1,"offset":11},"end":{"line":18,"column":4,"offset":215},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are no traps, all operations on proxy are forwarded to target.","position":{"start":{"line":20,"column":1,"offset":217},"end":{"line":20,"column":69,"offset":285},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":217},"end":{"line":20,"column":69,"offset":285},"indent":[]}},{"type":"list","ordered":true,"start":1,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A writing operation ","position":{"start":{"line":21,"column":4,"offset":289},"end":{"line":21,"column":24,"offset":309},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">proxy.test = sets the value on target</code>","position":{"start":{"line":21,"column":24,"offset":309},"end":{"line":21,"column":63,"offset":348},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":21,"column":63,"offset":348},"end":{"line":21,"column":64,"offset":349},"indent":[]}}],"position":{"start":{"line":21,"column":4,"offset":289},"end":{"line":21,"column":64,"offset":349},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":286},"end":{"line":21,"column":64,"offset":349},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A reading operation ","position":{"start":{"line":22,"column":4,"offset":353},"end":{"line":22,"column":24,"offset":373},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">proxy.test</code>","position":{"start":{"line":22,"column":24,"offset":373},"end":{"line":22,"column":36,"offset":385},"indent":[]}},{"type":"text","value":" returns the value from target.","position":{"start":{"line":22,"column":36,"offset":385},"end":{"line":22,"column":67,"offset":416},"indent":[]}}],"position":{"start":{"line":22,"column":4,"offset":353},"end":{"line":22,"column":67,"offset":416},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":350},"end":{"line":22,"column":67,"offset":416},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Iteration over proxy returns values from target.","position":{"start":{"line":23,"column":4,"offset":420},"end":{"line":23,"column":52,"offset":468},"indent":[]}}],"position":{"start":{"line":23,"column":4,"offset":420},"end":{"line":23,"column":52,"offset":468},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":417},"end":{"line":23,"column":52,"offset":468},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":286},"end":{"line":23,"column":52,"offset":468},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As we can see, without any traps, proxy is a transparent wrapper around target.","position":{"start":{"line":25,"column":1,"offset":470},"end":{"line":25,"column":80,"offset":549},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":470},"end":{"line":25,"column":80,"offset":549},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The proxy is a special “exotic object”. ","position":{"start":{"line":27,"column":1,"offset":551},"end":{"line":27,"column":41,"offset":591},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"It doesn’t have “own” properties. With an empty handler it transparently forwards operations to target.","position":{"start":{"line":27,"column":43,"offset":593},"end":{"line":27,"column":146,"offset":696},"indent":[]}}],"position":{"start":{"line":27,"column":41,"offset":591},"end":{"line":27,"column":148,"offset":698},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":551},"end":{"line":27,"column":148,"offset":698},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There’s a list of internal object operations in the Proxy specification. A proxy can intercept any of these, we just need to add a handler method.","position":{"start":{"line":29,"column":1,"offset":700},"end":{"line":29,"column":147,"offset":846},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":700},"end":{"line":29,"column":147,"offset":846},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Default value with “get” trap","position":{"start":{"line":31,"column":5,"offset":852},"end":{"line":31,"column":34,"offset":881},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":848},"end":{"line":31,"column":34,"offset":881},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The most common traps are for reading/writing properties.","position":{"start":{"line":33,"column":1,"offset":883},"end":{"line":33,"column":58,"offset":940},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":883},"end":{"line":33,"column":58,"offset":940},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To intercept the reading, the handler should have a method get(target, property, receiver).","position":{"start":{"line":35,"column":1,"offset":942},"end":{"line":35,"column":92,"offset":1033},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":942},"end":{"line":35,"column":92,"offset":1033},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\nnumbers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">get</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop <span class=\"token keyword\">in</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [ 0, 1, 2 ]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 1</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 0</span></code></pre></div>","position":{"start":{"line":38,"column":1,"offset":1036},"end":{"line":56,"column":4,"offset":1325},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">The proxy should totally replace the target object everywhere. No one should ever reference the target object after it got proxied. Otherwise it’s easy to mess up.</code></pre></div>","position":{"start":{"line":59,"column":1,"offset":1328},"end":{"line":60,"column":5,"offset":1500},"indent":[1]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">dictionary <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>dictionary<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nnumbers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":61,"column":1,"offset":1501},"end":{"line":64,"column":4,"offset":1594},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Validation with “set” trap","position":{"start":{"line":66,"column":5,"offset":1600},"end":{"line":66,"column":31,"offset":1626},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1596},"end":{"line":66,"column":31,"offset":1626},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now let’s intercept writing as well.","position":{"start":{"line":68,"column":1,"offset":1628},"end":{"line":68,"column":37,"offset":1664},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1628},"end":{"line":68,"column":37,"offset":1664},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The set trap triggers when a property is written: set(target, property, value, receiver).","position":{"start":{"line":70,"column":1,"offset":1666},"end":{"line":70,"column":90,"offset":1755},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1666},"end":{"line":70,"column":90,"offset":1755},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"The set trap should return true if setting is successful, and false otherwise.","position":{"start":{"line":72,"column":3,"offset":1759},"end":{"line":72,"column":81,"offset":1837},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1757},"end":{"line":72,"column":83,"offset":1839},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1757},"end":{"line":72,"column":83,"offset":1839},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nnumbers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> val <span class=\"token operator\">===</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// []</span>\n\nnumbers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 1</span>\n\nnumbers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">/* \n    evalmachine.&lt;anonymous>:1\n    numbers.push('2')\n    TypeError: 'set' on proxy: trap returned falsish for property '1'\n        at Proxy.push (&lt;anonymous>)\n        ...\n*/</span>\n\nnumbers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 2</span>\n\nnumbers\n<span class=\"token comment\">// [ 1, 3 ]</span></code></pre></div>","position":{"start":{"line":75,"column":1,"offset":1842},"end":{"line":106,"column":4,"offset":2359},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The built-in functionality of arrays is still working.\n","position":{"start":{"line":109,"column":1,"offset":2362},"end":{"line":110,"column":1,"offset":2417},"indent":[1]}},{"type":"break","position":{"start":{"line":110,"column":1,"offset":2417},"end":{"line":111,"column":1,"offset":2422},"indent":[1]}},{"type":"text","value":"    There are invariants to be held. For ","position":{"start":{"line":111,"column":1,"offset":2422},"end":{"line":111,"column":42,"offset":2463},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">set</code>","position":{"start":{"line":111,"column":42,"offset":2463},"end":{"line":111,"column":47,"offset":2468},"indent":[]}},{"type":"text","value":", it must return ","position":{"start":{"line":111,"column":47,"offset":2468},"end":{"line":111,"column":64,"offset":2485},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">true</code>","position":{"start":{"line":111,"column":64,"offset":2485},"end":{"line":111,"column":70,"offset":2491},"indent":[]}},{"type":"text","value":" for a successful write.","position":{"start":{"line":111,"column":70,"offset":2491},"end":{"line":111,"column":94,"offset":2515},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":2362},"end":{"line":111,"column":94,"offset":2515},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Protected properties with “deleteProperty” and “ownKeys”","position":{"start":{"line":113,"column":5,"offset":2521},"end":{"line":113,"column":61,"offset":2577},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":2517},"end":{"line":113,"column":61,"offset":2577},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There’s a widespread convention that properties and methods prefixed by an underscore _ are internal. They shouldn’t be accessible from outside the object.","position":{"start":{"line":115,"column":1,"offset":2579},"end":{"line":115,"column":156,"offset":2734},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":2579},"end":{"line":115,"column":156,"offset":2734},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let’s use proxies to prevent any access to properties starting with _.","position":{"start":{"line":117,"column":1,"offset":2736},"end":{"line":117,"column":71,"offset":2806},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":2736},"end":{"line":117,"column":71,"offset":2806},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span>\n  _password<span class=\"token punctuation\">:</span> <span class=\"token string\">\"***\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nuser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">get</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access denied'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">?</span> <span class=\"token function\">value</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> value\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">set</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Access denied'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">deleteProperty</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> prop</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access denied\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">delete</span> target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">ownKeys</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">k</span> <span class=\"token operator\">=></span> <span class=\"token operator\">!</span>k<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">/*\n    Error: Access denied\n        at Object.get (evalmachine.&lt;anonymous>:4:19)\n        ...\n*/</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>_password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error: Access denied</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Access denied</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  user<span class=\"token punctuation\">.</span>_password <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error: Access denied</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Access denied</span></code></pre></div>","position":{"start":{"line":120,"column":1,"offset":2809},"end":{"line":168,"column":4,"offset":3944},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If an object method is called, such as user.checkPassword(), it must be able to access _password:","position":{"start":{"line":170,"column":1,"offset":3946},"end":{"line":170,"column":98,"offset":4043},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":3946},"end":{"line":170,"column":98,"offset":4043},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">checkPassword</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> value <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_password<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":172,"column":1,"offset":4045},"end":{"line":178,"column":4,"offset":4139},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"“In range” with “has” trap","position":{"start":{"line":180,"column":5,"offset":4145},"end":{"line":180,"column":31,"offset":4171},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":4141},"end":{"line":180,"column":31,"offset":4171},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We’d like to use “in” operator to check that a number is in range.","position":{"start":{"line":182,"column":1,"offset":4173},"end":{"line":182,"column":67,"offset":4239},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":4173},"end":{"line":182,"column":67,"offset":4239},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The “has” trap intercepts “in” calls: has(target, property)","position":{"start":{"line":184,"column":1,"offset":4241},"end":{"line":184,"column":60,"offset":4300},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":4241},"end":{"line":184,"column":60,"offset":4300},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> range <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  start<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  end<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nrange <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>range<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> prop</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> prop <span class=\"token operator\">>=</span> target<span class=\"token punctuation\">.</span>start <span class=\"token operator\">&amp;&amp;</span> prop <span class=\"token operator\">&lt;=</span> target<span class=\"token punctuation\">.</span>end\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { start: 1, end: 10 }</span>\n\n<span class=\"token number\">5</span> <span class=\"token keyword\">in</span> range\n<span class=\"token comment\">// true</span>\n\n<span class=\"token number\">100</span> <span class=\"token keyword\">in</span> range\n<span class=\"token comment\">// false</span></code></pre></div>","position":{"start":{"line":187,"column":1,"offset":4303},"end":{"line":205,"column":4,"offset":4539},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Wrapping functions: “apply”","position":{"start":{"line":206,"column":5,"offset":4544},"end":{"line":206,"column":32,"offset":4571},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":4540},"end":{"line":206,"column":32,"offset":4571},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can wrap a proxy around a function as well.","position":{"start":{"line":208,"column":1,"offset":4573},"end":{"line":208,"column":47,"offset":4619},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":4573},"end":{"line":208,"column":47,"offset":4619},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The apply(target, thisArg, args) trap handles calling a proxy as function.","position":{"start":{"line":210,"column":1,"offset":4621},"end":{"line":210,"column":75,"offset":4695},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":4621},"end":{"line":210,"column":75,"offset":4695},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">delay</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">f<span class=\"token punctuation\">,</span> ms</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">apply</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> thisArgs<span class=\"token punctuation\">,</span> args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">target</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>thisArgs<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHi</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nsayHi <span class=\"token operator\">=</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span>sayHi<span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [Function: sayHi]</span>\n\n<span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token string\">'eten'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// hello eten</span></code></pre></div>","position":{"start":{"line":213,"column":1,"offset":4698},"end":{"line":231,"column":4,"offset":5027},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"If we have a property on the original function,  it forwards everything to the target object","position":{"start":{"line":233,"column":3,"offset":5031},"end":{"line":233,"column":95,"offset":5123},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":5029},"end":{"line":233,"column":97,"offset":5125},"indent":[]}},{"type":"text","value":"：","position":{"start":{"line":233,"column":97,"offset":5125},"end":{"line":233,"column":98,"offset":5126},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":5029},"end":{"line":233,"column":98,"offset":5126},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">sayHi<span class=\"token punctuation\">.</span>length\n<span class=\"token comment\">// 1</span></code></pre></div>","position":{"start":{"line":236,"column":1,"offset":5129},"end":{"line":239,"column":4,"offset":5164},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"But implement by function-based not works as above.","position":{"start":{"line":241,"column":1,"offset":5166},"end":{"line":241,"column":52,"offset":5217},"indent":[]}}],"position":{"start":{"line":241,"column":1,"offset":5166},"end":{"line":241,"column":52,"offset":5217},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f<span class=\"token punctuation\">,</span> ms</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">f</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Hello, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nsayHi<span class=\"token punctuation\">.</span>length\n<span class=\"token comment\">// 1</span>\n\nsayHi <span class=\"token operator\">=</span> <span class=\"token function\">delay</span><span class=\"token punctuation\">(</span>sayHi<span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [Function]</span>\n\n<span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token string\">'eten'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Hello, eten!</span>\n\nsayHi<span class=\"token punctuation\">.</span>length\n<span class=\"token comment\">// 0</span></code></pre></div>","position":{"start":{"line":243,"column":1,"offset":5219},"end":{"line":265,"column":4,"offset":5512},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"More traps here: ","position":{"start":{"line":268,"column":1,"offset":5515},"end":{"line":268,"column":18,"offset":5532},"indent":[]}},{"type":"link","title":null,"url":"https://tc39.es/ecma262/#sec-proxy-object-internal-methods-and-internal-slots","children":[{"type":"text","value":"proxy-object-internal-methods","position":{"start":{"line":268,"column":19,"offset":5533},"end":{"line":268,"column":48,"offset":5562},"indent":[]}}],"position":{"start":{"line":268,"column":18,"offset":5532},"end":{"line":268,"column":128,"offset":5642},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":5515},"end":{"line":268,"column":128,"offset":5642},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Refect","position":{"start":{"line":270,"column":5,"offset":5648},"end":{"line":270,"column":11,"offset":5654},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":5644},"end":{"line":270,"column":11,"offset":5654},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Reflect API was designed to work in tandem with Proxy.","position":{"start":{"line":272,"column":1,"offset":5656},"end":{"line":272,"column":59,"offset":5714},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":5656},"end":{"line":272,"column":59,"offset":5714},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  _name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Guest\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nuser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> receiver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// (*)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// { _name: 'Guest', name: [Getter] }</span>\n\n<span class=\"token keyword\">let</span> admin <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  __proto__<span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">,</span>\n  _name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Admin\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nadmin<span class=\"token punctuation\">.</span>name\n<span class=\"token comment\">// 'Guest'</span></code></pre></div>","position":{"start":{"line":275,"column":1,"offset":5717},"end":{"line":297,"column":4,"offset":6023},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":true,"start":1,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"There’s no name property in admin, so admin.name call goes to admin prototype.","position":{"start":{"line":300,"column":4,"offset":6029},"end":{"line":300,"column":82,"offset":6107},"indent":[]}}],"position":{"start":{"line":300,"column":4,"offset":6029},"end":{"line":300,"column":82,"offset":6107},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":6026},"end":{"line":300,"column":82,"offset":6107},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The prototype is the proxy, so its get trap intercepts the attempt to read name.","position":{"start":{"line":301,"column":4,"offset":6111},"end":{"line":301,"column":84,"offset":6191},"indent":[]}}],"position":{"start":{"line":301,"column":4,"offset":6111},"end":{"line":301,"column":84,"offset":6191},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":6108},"end":{"line":301,"column":84,"offset":6191},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The target, the first argument of get, is always the object passed to new Proxy, the original user. So, ","position":{"start":{"line":302,"column":4,"offset":6195},"end":{"line":302,"column":108,"offset":6299},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">target[prop]</code>","position":{"start":{"line":302,"column":108,"offset":6299},"end":{"line":302,"column":122,"offset":6313},"indent":[]}},{"type":"text","value":" invokes the getter name with this=target=user.","position":{"start":{"line":302,"column":122,"offset":6313},"end":{"line":302,"column":169,"offset":6360},"indent":[]}}],"position":{"start":{"line":302,"column":4,"offset":6195},"end":{"line":302,"column":169,"offset":6360},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":6192},"end":{"line":302,"column":169,"offset":6360},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":6026},"end":{"line":302,"column":169,"offset":6360},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The third argument of get, ","position":{"start":{"line":304,"column":1,"offset":6362},"end":{"line":304,"column":28,"offset":6389},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">receiver</code>","position":{"start":{"line":304,"column":28,"offset":6389},"end":{"line":304,"column":38,"offset":6399},"indent":[]}},{"type":"text","value":" holds the correct ","position":{"start":{"line":304,"column":38,"offset":6399},"end":{"line":304,"column":57,"offset":6418},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">this</code>","position":{"start":{"line":304,"column":57,"offset":6418},"end":{"line":304,"column":63,"offset":6424},"indent":[]}},{"type":"text","value":". We just need to call Reflect.get to pass it on.","position":{"start":{"line":304,"column":63,"offset":6424},"end":{"line":304,"column":112,"offset":6473},"indent":[]}}],"position":{"start":{"line":304,"column":1,"offset":6362},"end":{"line":304,"column":112,"offset":6473},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">get</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> receiver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// { _name: 'Guest', name: [Getter] }</span>\n\n<span class=\"token keyword\">let</span> admin <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  __proto__<span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">,</span>\n  _name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Admin\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nadmin<span class=\"token punctuation\">.</span>name\n<span class=\"token comment\">// 'Admin'</span></code></pre></div>","position":{"start":{"line":307,"column":1,"offset":6476},"end":{"line":322,"column":4,"offset":6718},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Proxy limitations","position":{"start":{"line":325,"column":5,"offset":6725},"end":{"line":325,"column":22,"offset":6742},"indent":[]}}],"position":{"start":{"line":325,"column":1,"offset":6721},"end":{"line":325,"column":22,"offset":6742},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Built-in objects: Internal slots","position":{"start":{"line":326,"column":6,"offset":6748},"end":{"line":326,"column":38,"offset":6780},"indent":[]}}],"position":{"start":{"line":326,"column":1,"offset":6743},"end":{"line":326,"column":38,"offset":6780},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Many built-in objects, for example Map, Set, Date, Promise and others make use of so-called “internal slots”.","position":{"start":{"line":328,"column":1,"offset":6782},"end":{"line":328,"column":110,"offset":6891},"indent":[]}}],"position":{"start":{"line":328,"column":1,"offset":6782},"end":{"line":328,"column":110,"offset":6891},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These are like properties, but reserved for internal purposes. Built-in methods access them directly, not via ","position":{"start":{"line":330,"column":1,"offset":6893},"end":{"line":330,"column":111,"offset":7003},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">[[Get]]/[[Set]]</code>","position":{"start":{"line":330,"column":111,"offset":7003},"end":{"line":330,"column":128,"offset":7020},"indent":[]}},{"type":"text","value":" internal methods. So Proxy can’t intercept that.","position":{"start":{"line":330,"column":128,"offset":7020},"end":{"line":330,"column":177,"offset":7069},"indent":[]}}],"position":{"start":{"line":330,"column":1,"offset":6893},"end":{"line":330,"column":177,"offset":7069},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> proxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nproxy<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">/*  evalmachine.&lt;anonymous>:1\n    proxy.set('test', 1)\n    TypeError: Method Map.prototype.set called on incompatible receiver [object Object]\n    ...\n*/</span></code></pre></div>","position":{"start":{"line":333,"column":1,"offset":7072},"end":{"line":344,"column":4,"offset":7317},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Internally, a Map stores all data in its [","position":{"start":{"line":346,"column":1,"offset":7319},"end":{"line":346,"column":43,"offset":7361},"indent":[]}},{"type":"linkReference","identifier":"mapdata","referenceType":"shortcut","children":[{"type":"text","value":"MapData","position":{"start":{"line":346,"column":44,"offset":7362},"end":{"line":346,"column":51,"offset":7369},"indent":[]}}],"position":{"start":{"line":346,"column":43,"offset":7361},"end":{"line":346,"column":52,"offset":7370},"indent":[]}},{"type":"text","value":"] internal slot. The proxy doesn’t have such slot. The set method can’t find it in proxy and just fails.","position":{"start":{"line":346,"column":52,"offset":7370},"end":{"line":346,"column":156,"offset":7474},"indent":[]}}],"position":{"start":{"line":346,"column":1,"offset":7319},"end":{"line":346,"column":156,"offset":7474},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There's a way to fix it.","position":{"start":{"line":348,"column":1,"offset":7476},"end":{"line":348,"column":25,"offset":7500},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":7476},"end":{"line":348,"column":25,"offset":7500},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> proxy <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">get</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> receiver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> value <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">?</span> <span class=\"token function\">value</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> value\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nproxy<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Map { 'test' => 1 }</span>\n\nproxy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 1</span></code></pre></div>","position":{"start":{"line":351,"column":1,"offset":7503},"end":{"line":364,"column":4,"offset":7780},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Array has no internal slots, built-in Array doesn’t use internal slots.\nSo there’s no such problem when proxying an array.</code></pre></div>","position":{"start":{"line":366,"column":1,"offset":7782},"end":{"line":367,"column":55,"offset":7912},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Private fields","position":{"start":{"line":369,"column":5,"offset":7918},"end":{"line":369,"column":19,"offset":7932},"indent":[]}}],"position":{"start":{"line":369,"column":1,"offset":7914},"end":{"line":369,"column":19,"offset":7932},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The similar thing happens with private class fields.","position":{"start":{"line":370,"column":1,"offset":7933},"end":{"line":370,"column":53,"offset":7985},"indent":[]}}],"position":{"start":{"line":370,"column":1,"offset":7933},"end":{"line":370,"column":53,"offset":7985},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  #name <span class=\"token operator\">=</span> <span class=\"token string\">\"Guest\"</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":372,"column":1,"offset":7987},"end":{"line":380,"column":4,"offset":8080},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The reason is that private fields are implemented using internal slots. JavaScript does not use ","position":{"start":{"line":382,"column":1,"offset":8082},"end":{"line":382,"column":97,"offset":8178},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">[[Get]]/[[Set]]</code>","position":{"start":{"line":382,"column":97,"offset":8178},"end":{"line":382,"column":114,"offset":8195},"indent":[]}},{"type":"text","value":" when accessing them.","position":{"start":{"line":382,"column":114,"offset":8195},"end":{"line":382,"column":135,"offset":8216},"indent":[]}}],"position":{"start":{"line":382,"column":1,"offset":8082},"end":{"line":382,"column":135,"offset":8216},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Once again, the solution with binding the method makes it work:","position":{"start":{"line":384,"column":1,"offset":8218},"end":{"line":384,"column":64,"offset":8281},"indent":[]}}],"position":{"start":{"line":384,"column":1,"offset":8218},"end":{"line":384,"column":64,"offset":8281},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> receiver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> value <span class=\"token operator\">==</span> <span class=\"token string\">'function'</span> <span class=\"token operator\">?</span> <span class=\"token function\">value</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> value<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":386,"column":1,"offset":8283},"end":{"line":393,"column":4,"offset":8476},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Proxy != target","position":{"start":{"line":395,"column":5,"offset":8482},"end":{"line":395,"column":20,"offset":8497},"indent":[]}}],"position":{"start":{"line":395,"column":1,"offset":8478},"end":{"line":395,"column":20,"offset":8497},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Proxy and the original object are different objects.","position":{"start":{"line":397,"column":1,"offset":8499},"end":{"line":397,"column":53,"offset":8551},"indent":[]}}],"position":{"start":{"line":397,"column":1,"offset":8499},"end":{"line":397,"column":53,"offset":8551},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> allUsers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        allUsers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">'John'</span><span class=\"token punctuation\">)</span>\n\nallUsers<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// true</span>\n\nuser <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// User { name: 'John' }</span>\n\nallUsers<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// false</span></code></pre></div>","position":{"start":{"line":400,"column":1,"offset":8554},"end":{"line":420,"column":4,"offset":8834},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As we can see, after proxying we can’t find user in the set allUsers, because the proxy is a different object.","position":{"start":{"line":423,"column":1,"offset":8837},"end":{"line":423,"column":111,"offset":8947},"indent":[]}}],"position":{"start":{"line":423,"column":1,"offset":8837},"end":{"line":423,"column":111,"offset":8947},"indent":[]}},{"type":"html","lang":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Proxies can intercept many operators, such as new (with construct), in (with has), delete (with deleteProperty) and so on.\nBut there’s no way to intercept a strict equality test for objects. An object is strictly equal to itself only, and no other value.</code></pre></div>","position":{"start":{"line":425,"column":1,"offset":8949},"end":{"line":426,"column":136,"offset":9211},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Revocable proxies","position":{"start":{"line":428,"column":5,"offset":9217},"end":{"line":428,"column":22,"offset":9234},"indent":[]}}],"position":{"start":{"line":428,"column":1,"offset":9213},"end":{"line":428,"column":22,"offset":9234},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A revocable proxy is a proxy that can be disabled.","position":{"start":{"line":429,"column":1,"offset":9235},"end":{"line":429,"column":51,"offset":9285},"indent":[]}}],"position":{"start":{"line":429,"column":1,"offset":9235},"end":{"line":429,"column":51,"offset":9285},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token punctuation\">:</span> <span class=\"token string\">'Valuable data'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> revokes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WeakMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> proxy<span class=\"token punctuation\">,</span> revoke <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Proxy<span class=\"token punctuation\">.</span><span class=\"token function\">revocable</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nproxy<span class=\"token punctuation\">.</span>data\n<span class=\"token comment\">// 'Valuable data'</span>\n\nrevokes<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">,</span> revoke<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// WeakMap {}</span>\n\nrevokes<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nproxy<span class=\"token punctuation\">.</span>data\n<span class=\"token comment\">/*  evalmachine.&lt;anonymous>:1\n    proxy.data\n    TypeError: Cannot perform 'get' on a proxy that has been revoked\n*/</span></code></pre></div>","position":{"start":{"line":432,"column":1,"offset":9288},"end":{"line":453,"column":4,"offset":9653},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"A call to ","position":{"start":{"line":455,"column":1,"offset":9655},"end":{"line":455,"column":11,"offset":9665},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">revoke()</code>","position":{"start":{"line":455,"column":11,"offset":9665},"end":{"line":455,"column":21,"offset":9675},"indent":[]}},{"type":"text","value":" removes all internal references to the target object from the proxy, so they are no more connected. The target object can be garbage-collected after that.","position":{"start":{"line":455,"column":21,"offset":9675},"end":{"line":455,"column":176,"offset":9830},"indent":[]}}],"position":{"start":{"line":455,"column":1,"offset":9655},"end":{"line":455,"column":176,"offset":9830},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using WeakMap instead of Map here, because if a proxy object becomes “unreachable”, WeakMap allows it to be wiped from memory.","position":{"start":{"line":457,"column":1,"offset":9832},"end":{"line":457,"column":127,"offset":9958},"indent":[]}}],"position":{"start":{"line":457,"column":1,"offset":9832},"end":{"line":457,"column":127,"offset":9958},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Summary","position":{"start":{"line":459,"column":5,"offset":9964},"end":{"line":459,"column":12,"offset":9971},"indent":[]}}],"position":{"start":{"line":459,"column":1,"offset":9960},"end":{"line":459,"column":12,"offset":9971},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Proxy is a wrapper around an object, that forwards operations to the object, optionally trapping some of them. Then we should use proxy everywhere instead of target.","position":{"start":{"line":461,"column":1,"offset":9973},"end":{"line":461,"column":166,"offset":10138},"indent":[]}}],"position":{"start":{"line":461,"column":1,"offset":9973},"end":{"line":461,"column":166,"offset":10138},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A proxy doesn’t have its own properties or methods. It traps an operation if the trap is provided or forwards it to target object.","position":{"start":{"line":463,"column":1,"offset":10140},"end":{"line":463,"column":131,"offset":10270},"indent":[]}}],"position":{"start":{"line":463,"column":1,"offset":10140},"end":{"line":463,"column":131,"offset":10270},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The Reflect API is designed to complement Proxy. For any Proxy trap, there’s a Reflect call with same arguments. We should use those to forward calls to target objects.","position":{"start":{"line":465,"column":1,"offset":10272},"end":{"line":465,"column":169,"offset":10440},"indent":[]}}],"position":{"start":{"line":465,"column":1,"offset":10272},"end":{"line":465,"column":169,"offset":10440},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Questions:","position":{"start":{"line":469,"column":5,"offset":10448},"end":{"line":469,"column":15,"offset":10458},"indent":[]}}],"position":{"start":{"line":469,"column":1,"offset":10444},"end":{"line":469,"column":15,"offset":10458},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In some languages, we can access array elements using negative indexes, counted from the end. Create a proxy to implement that behavior:","position":{"start":{"line":471,"column":1,"offset":10460},"end":{"line":471,"column":137,"offset":10596},"indent":[]}}],"position":{"start":{"line":471,"column":1,"offset":10460},"end":{"line":471,"column":137,"offset":10596},"indent":[]}},{"type":"html","lang":"javascript","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n\narray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">get</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> receiver<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prop <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            prop <span class=\"token operator\">=</span> <span class=\"token operator\">+</span>prop <span class=\"token operator\">+</span> target<span class=\"token punctuation\">.</span>length\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> Reflect<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> receiver<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\narray<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// 3</span>\n\narray<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// 1</span></code></pre></div>","position":{"start":{"line":474,"column":1,"offset":10599},"end":{"line":491,"column":4,"offset":10866},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":492,"column":1,"offset":10867}}}}