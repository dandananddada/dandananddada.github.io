{"version":3,"sources":["webpack:///./src/templates/blog/components/header.js","webpack:///./src/templates/blog/page.js"],"names":["BlogHeader","className","href","BlogContentsTamplate","pageContext","data","prevPage","nextPage","posts","allMarkdownRemark","edges","link","page","text","map","node","frontmatter","path","category","date","title","summary","PATH","key"],"mappings":"8LAEe,SAASA,IACtB,OACE,4BAAQC,UAAU,eAChB,yBAAKA,UAAU,WACb,uBAAGA,UAAU,aAAaC,KAAK,KAA/B,aACA,yBAAKD,UAAU,YAEb,yBAAKA,UAAU,e,UCJV,SAASE,EAAT,GACX,IAD4CC,EAC7C,EAD6CA,YAAaC,EAC1D,EAD0DA,KAGnDC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SACZC,EAAQH,EAAKI,kBAAkBC,MAE/BC,EAAO,SAACC,EAAMC,GAClB,GAAID,EAAM,CACR,IAAMD,EAAiB,IAATC,EANL,kBAMmCA,EAC5C,OAAQ,uBAAGX,UAAU,kBAAkBC,KAAMS,GAAOE,GAEtD,OAAQ,0BAAMZ,UAAU,4BAA4BY,IAGtD,OACE,oCACE,kBAACb,EAAD,MACA,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,aACXO,EAAMM,KAAI,YAAe,IAAD,IAAXC,KAC0CC,YAA9CC,EADe,EACfA,KAAMC,EADS,EACTA,SAAUC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,QAC/BV,EAAUW,UAAQJ,EAAd,IAA0BD,EAA1B,IACV,OACE,wBAAIhB,UAAU,OAAOsB,IAAKH,GACxB,0BAAMnB,UAAU,aAAckB,GAC9B,4BACE,uBAAGlB,UAAU,YAAYC,KAAMS,GAAQS,IAEzC,uBAAGnB,UAAU,gBAAiBoB,QAKtC,yBAAKpB,UAAU,+BACb,yBAAKA,UAAU,QACXU,EAAK,IAAIL,EAAY,aAEzB,yBAAKL,UAAU,SACXU,EAAK,IAAIJ,EAAY","file":"component---src-templates-blog-page-js-1512f992f38091e0667d.js","sourcesContent":["import React from \"react\"\n\nexport default function BlogHeader () {\n  return (\n    <header className=\"site-header\">\n      <div className=\"wrapper\">\n        <a className=\"site-title\" href=\"/\">Eten Wang</a>\n        <nav className=\"site-nav\">\n          {/* <a href=\"#\" className=\"menu-icon\"></a> */}\n          <div className=\"trigger\">\n          </div>\n        </nav>\n      </div>\n    </header>\n  )\n}","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport BlogHeader from \"./components/header\"\nimport './blog.scss';\n\nexport default function BlogContentsTamplate ({ pageContext, data, // this prop will be injected by the GraphQL query below.\n}) {\n  const PATH = '/posts'\n  const { prevPage, nextPage } = pageContext\n  const posts = data.allMarkdownRemark.edges\n\n  const link = (page, text) => {\n    if (page) {\n      const link = (page === 1 ? PATH : `${PATH}${page}`) // rewrite page 1 to posts.\n      return (<a className=\"pagination-item\" href={link}>{text}</a>)\n    }\n    return (<span className=\"pagination-item disabled\">{text}</span>)\n  }\n\n  return (\n    <>\n      <BlogHeader></BlogHeader>\n      <div className=\"page-content\">\n        <div className=\"wrapper\">\n          <div className=\"home\">\n            <ul className=\"post-list\">\n              {posts.map(({ node }) => {\n                const { path, category, date, title, summary } = node.frontmatter\n                const link = `${PATH}/${category}/${path}/`\n                return (\n                  <li className=\"post\" key={title}>\n                    <span className=\"post-meta\">{ date }</span>\n                    <h2>\n                      <a className=\"post-link\" href={link}>{ title }</a>\n                    </h2>\n                    <p className=\"post-summary\">{ summary }</p>\n                  </li>\n                )\n              })}\n            </ul>\n            <div className=\"pagination clearfix mb1 mt4\">\n              <div className=\"left\">\n                { link(`/${prevPage}`, 'Previous') }\n              </div>\n              <div className=\"right\">\n                { link(`/${nextPage}`, 'Next') }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($limit: Int!, $offset: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $offset\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            category\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            summary\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}